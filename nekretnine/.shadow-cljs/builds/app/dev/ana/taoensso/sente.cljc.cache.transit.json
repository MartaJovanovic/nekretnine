["^ ","~:output",["^ ","~:js","goog.provide('taoensso.sente');\r\nif(cljs.core.vector_QMARK_(taoensso.encore.encore_version)){\r\ntaoensso.encore.assert_min_encore_version(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),(105),(0)], null));\r\n} else {\r\ntaoensso.encore.assert_min_encore_version(2.105);\r\n}\r\n/**\r\n * Useful for identifying client/server mismatch\r\n */\r\ntaoensso.sente.sente_version = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(11),(0)], null);\r\ntaoensso.sente.node_target_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_,\"nodejs\");\r\nif((typeof taoensso !== 'undefined') && (typeof taoensso.sente !== 'undefined') && (typeof taoensso.sente.debug_mode_QMARK__ !== 'undefined')){\r\n} else {\r\ntaoensso.sente.debug_mode_QMARK__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\r\n}\r\ntaoensso.sente.expected = (function taoensso$sente$expected(expected,x){\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"expected\",\"expected\",1583670997),expected,new cljs.core.Keyword(null,\"actual\",\"actual\",107306363),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.type(x),new cljs.core.Keyword(null,\"value\",\"value\",305978217),x], null)], null);\r\n});\r\n/**\r\n * Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\r\n *   returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`.\r\n */\r\ntaoensso.sente.validate_event = (function taoensso$sente$validate_event(x){\r\nif((!(cljs.core.vector_QMARK_(x)))){\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-type\",\"wrong-type\",929556915),taoensso.sente.expected(new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),x)], null);\r\n} else {\r\nif(cljs.core.not((function (){var G__74937 = cljs.core.count(x);\r\nvar fexpr__74936 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null);\r\nreturn (fexpr__74936.cljs$core$IFn$_invoke$arity$1 ? fexpr__74936.cljs$core$IFn$_invoke$arity$1(G__74937) : fexpr__74936.call(null,G__74937));\r\n})())){\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-length\",\"wrong-length\",1367572281),taoensso.sente.expected(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),x)], null);\r\n} else {\r\nvar vec__74938 = x;\r\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74938,(0),null);\r\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74938,(1),null);\r\nif((!((ev_id instanceof cljs.core.Keyword)))){\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-id-type\",\"wrong-id-type\",-1213601689),taoensso.sente.expected(new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),ev_id)], null);\r\n} else {\r\nif(cljs.core.not(cljs.core.namespace(ev_id))){\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"unnamespaced-id\",\"unnamespaced-id\",1976189772),taoensso.sente.expected(new cljs.core.Keyword(null,\"namespaced-keyword\",\"namespaced-keyword\",131372895),ev_id)], null);\r\n} else {\r\nreturn null;\r\n\r\n}\r\n}\r\n\r\n}\r\n}\r\n});\r\n/**\r\n * Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\r\n *   throws a validation exception.\r\n */\r\ntaoensso.sente.assert_event = (function taoensso$sente$assert_event(x){\r\nvar temp__5735__auto__ = taoensso.sente.validate_event(x);\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar errs = temp__5735__auto__;\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Invalid event\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"given\",\"given\",716253602),x,new cljs.core.Keyword(null,\"errors\",\"errors\",-908790718),errs], null));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Valid [ev-id ?ev-data] form?\r\n */\r\ntaoensso.sente.event_QMARK_ = (function taoensso$sente$event_QMARK_(x){\r\nreturn (taoensso.sente.validate_event(x) == null);\r\n});\r\ntaoensso.sente.as_event = (function taoensso$sente$as_event(x){\r\nvar temp__5733__auto__ = taoensso.sente.validate_event(x);\r\nif(cljs.core.truth_(temp__5733__auto__)){\r\nvar errs = temp__5733__auto__;\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"bad-event\",\"chsk/bad-event\",-565206930),x], null);\r\n} else {\r\nreturn x;\r\n}\r\n});\r\ntaoensso.sente.client_event_msg_QMARK_ = (function taoensso$sente$client_event_msg_QMARK_(x){\r\nif(cljs.core.map_QMARK_(x)){\r\nif(taoensso.encore.ks_GT__EQ_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),null,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),null,new cljs.core.Keyword(null,\"event\",\"event\",301435442),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),null,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),null], null), null),x)){\r\nvar map__74952 = x;\r\nvar map__74952__$1 = (((((!((map__74952 == null))))?(((((map__74952.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__74952.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__74952):map__74952);\r\nvar ch_recv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74952__$1,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861));\r\nvar send_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74952__$1,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041));\r\nvar state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74952__$1,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099));\r\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74952__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\r\nreturn ((taoensso.encore.chan_QMARK_(ch_recv)) && (cljs.core.ifn_QMARK_(send_fn)) && (taoensso.encore.atom_QMARK_(state)) && (taoensso.sente.event_QMARK_(event)));\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n});\r\ntaoensso.sente.server_event_msg_QMARK_ = (function taoensso$sente$server_event_msg_QMARK_(x){\r\nif(cljs.core.map_QMARK_(x)){\r\nif(taoensso.encore.ks_GT__EQ_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),null,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),null,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),null,new cljs.core.Keyword(null,\"event\",\"event\",301435442),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"send-buffers\",\"send-buffers\",-1788003787),null,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),null,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),null,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),null], null), null),x)){\r\nvar map__74961 = x;\r\nvar map__74961__$1 = (((((!((map__74961 == null))))?(((((map__74961.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__74961.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__74961):map__74961);\r\nvar ch_recv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74961__$1,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861));\r\nvar send_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74961__$1,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041));\r\nvar connected_uids = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74961__$1,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231));\r\nvar send_buffers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74961__$1,new cljs.core.Keyword(null,\"send-buffers\",\"send-buffers\",-1788003787));\r\nvar ring_req = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74961__$1,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961));\r\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74961__$1,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\r\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74961__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\r\nvar _QMARK_reply_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74961__$1,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592));\r\nreturn ((taoensso.encore.chan_QMARK_(ch_recv)) && (cljs.core.ifn_QMARK_(send_fn)) && (taoensso.encore.atom_QMARK_(connected_uids)) && (taoensso.encore.atom_QMARK_(send_buffers)) && (cljs.core.map_QMARK_(ring_req)) && (taoensso.encore.nblank_str_QMARK_(client_id)) && (taoensso.sente.event_QMARK_(event)) && ((((_QMARK_reply_fn == null)) || (cljs.core.ifn_QMARK_(_QMARK_reply_fn)))));\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n});\r\n/**\r\n * All server `event-msg`s go through this\r\n */\r\ntaoensso.sente.put_server_event_msg_GT_ch_recv_BANG_ = (function taoensso$sente$put_server_event_msg_GT_ch_recv_BANG_(ch_recv,p__74974){\r\nvar map__74975 = p__74974;\r\nvar map__74975__$1 = (((((!((map__74975 == null))))?(((((map__74975.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__74975.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__74975):map__74975);\r\nvar ev_msg = map__74975__$1;\r\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74975__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\r\nvar _QMARK_reply_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74975__$1,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592));\r\nvar vec__74985 = taoensso.sente.as_event(event);\r\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74985,(0),null);\r\nvar ev__QMARK_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74985,(1),null);\r\nvar valid_event = vec__74985;\r\nvar ev_msg_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"event\",\"event\",301435442),valid_event,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),_QMARK_reply_fn,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),ev_id,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),ev__QMARK_data], null)], 0));\r\nif((!(taoensso.sente.server_event_msg_QMARK_(ev_msg_STAR_)))){\r\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,194,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Bad ev-msg: %s\",ev_msg], null);\r\n}),null)),null,290660271);\r\n} else {\r\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(ch_recv,ev_msg_STAR_);\r\n}\r\n});\r\ntaoensso.sente.cb_error_QMARK_ = (function taoensso$sente$cb_error_QMARK_(cb_reply_clj){\r\nvar fexpr__74992 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264),null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439),null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489),null], null), null);\r\nreturn (fexpr__74992.cljs$core$IFn$_invoke$arity$1 ? fexpr__74992.cljs$core$IFn$_invoke$arity$1(cb_reply_clj) : fexpr__74992.call(null,cb_reply_clj));\r\n});\r\ntaoensso.sente.cb_success_QMARK_ = (function taoensso$sente$cb_success_QMARK_(cb_reply_clj){\r\nreturn cljs.core.not(taoensso.sente.cb_error_QMARK_(cb_reply_clj));\r\n});\r\n/**\r\n * prefixed-pstr->[clj ?cb-uuid]\r\n */\r\ntaoensso.sente.unpack = (function taoensso$sente$unpack(packer,prefixed_pstr){\r\nif(typeof prefixed_pstr === 'string'){\r\n} else {\r\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",208,\"(string? prefixed-pstr)\",prefixed_pstr,null,null);\r\n}\r\n\r\nvar wrapped_QMARK_ = taoensso.encore.str_starts_with_QMARK_(prefixed_pstr,\"+\");\r\nvar pstr = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(prefixed_pstr,(1));\r\nvar clj = (function (){try{return taoensso.sente.interfaces.unpack(packer,pstr);\r\n}catch (e74997){var t = e74997;\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,215,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Bad package: %s (%s)\",pstr,t], null);\r\n}),null)),null,1685370051);\r\n\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"bad-package\",\"chsk/bad-package\",501893679),pstr], null);\r\n}})();\r\nvar vec__74994 = ((wrapped_QMARK_)?clj:new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj,null], null));\r\nvar clj__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74994,(0),null);\r\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74994,(1),null);\r\nvar _QMARK_cb_uuid__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),_QMARK_cb_uuid))?new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321):_QMARK_cb_uuid);\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,221,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unpacking: %s -> %s\",prefixed_pstr,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1,_QMARK_cb_uuid__$1], null)], null);\r\n}),null)),null,-457911076);\r\n\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1,_QMARK_cb_uuid__$1], null);\r\n});\r\n/**\r\n * clj->prefixed-pstr\r\n */\r\ntaoensso.sente.pack = (function taoensso$sente$pack(var_args){\r\nvar G__75002 = arguments.length;\r\nswitch (G__75002) {\r\ncase 2:\r\nreturn taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2 = (function (packer,clj){\r\nvar pstr = [\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(taoensso.sente.interfaces.pack(packer,clj))].join('');\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,228,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Packing (unwrapped): %s -> %s\",clj,pstr], null);\r\n}),null)),null,843201273);\r\n\r\nreturn pstr;\r\n}));\r\n\r\n(taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3 = (function (packer,clj,_QMARK_cb_uuid){\r\nvar _QMARK_cb_uuid__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_cb_uuid,new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321)))?(0):_QMARK_cb_uuid);\r\nvar wrapped_clj = (cljs.core.truth_(_QMARK_cb_uuid__$1)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj,_QMARK_cb_uuid__$1], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj], null));\r\nvar pstr = [\"+\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(taoensso.sente.interfaces.pack(packer,wrapped_clj))].join('');\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,237,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Packing (wrapped): %s -> %s\",wrapped_clj,pstr], null);\r\n}),null)),null,2084931425);\r\n\r\nreturn pstr;\r\n}));\r\n\r\n(taoensso.sente.pack.cljs$lang$maxFixedArity = 3);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {taoensso.sente.interfaces.IPacker}\r\n*/\r\ntaoensso.sente.EdnPacker = (function (){\r\n});\r\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$pack$arity$2 = (function (_,x){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1(x);\r\n}));\r\n\r\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$unpack$arity$2 = (function (_,s){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1(s);\r\n}));\r\n\r\n(taoensso.sente.EdnPacker.getBasis = (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(taoensso.sente.EdnPacker.cljs$lang$type = true);\r\n\r\n(taoensso.sente.EdnPacker.cljs$lang$ctorStr = \"taoensso.sente/EdnPacker\");\r\n\r\n(taoensso.sente.EdnPacker.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\r\nreturn cljs.core._write(writer__4370__auto__,\"taoensso.sente/EdnPacker\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for taoensso.sente/EdnPacker.\r\n */\r\ntaoensso.sente.__GT_EdnPacker = (function taoensso$sente$__GT_EdnPacker(){\r\nreturn (new taoensso.sente.EdnPacker());\r\n});\r\n\r\ntaoensso.sente.default_edn_packer = (new taoensso.sente.EdnPacker());\r\ntaoensso.sente.coerce_packer = (function taoensso$sente$coerce_packer(x){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885))){\r\nreturn taoensso.sente.default_edn_packer;\r\n} else {\r\nvar e = (function (){try{if((function (p1__75007_SHARP_){\r\nif((!((p1__75007_SHARP_ == null)))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__75007_SHARP_.taoensso$sente$interfaces$IPacker$)))){\r\nreturn true;\r\n} else {\r\nif((!p1__75007_SHARP_.cljs$lang$protocol_mask$partition$)){\r\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IPacker,p1__75007_SHARP_);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IPacker,p1__75007_SHARP_);\r\n}\r\n})(x)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e75009){if((e75009 instanceof Error)){\r\nvar e = e75009;\r\nreturn e;\r\n} else {\r\nthrow e75009;\r\n\r\n}\r\n}})();\r\nif((e == null)){\r\nreturn x;\r\n} else {\r\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",250,\"((fn* [p1__75007#] (satisfies? interfaces/IPacker p1__75007#)) x)\",x,e,null);\r\n}\r\n}\r\n});\r\ntaoensso.sente.next_idx_BANG_ = (taoensso.encore.idx_fn.cljs$core$IFn$_invoke$arity$0 ? taoensso.encore.idx_fn.cljs$core$IFn$_invoke$arity$0() : taoensso.encore.idx_fn.call(null));\r\n\r\n\r\ntaoensso.sente.bad_origin_QMARK_ = (function taoensso$sente$bad_origin_QMARK_(allowed_origins,p__75015){\r\nvar map__75017 = p__75015;\r\nvar map__75017__$1 = (((((!((map__75017 == null))))?(((((map__75017.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75017.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75017):map__75017);\r\nvar ring_req = map__75017__$1;\r\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75017__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(allowed_origins,new cljs.core.Keyword(null,\"all\",\"all\",892129742))){\r\nreturn false;\r\n} else {\r\nvar origin = cljs.core.get.cljs$core$IFn$_invoke$arity$2(headers,\"origin\");\r\nvar referer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(headers,\"referer\",\"\");\r\nif(cljs.core.contains_QMARK_(cljs.core.set(allowed_origins),origin)){\r\nreturn false;\r\n} else {\r\nif(cljs.core.truth_(taoensso.encore.rsome((function (p1__75014_SHARP_){\r\nreturn clojure.string.starts_with_QMARK_(referer,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__75014_SHARP_),\"/\"].join(''));\r\n}),allowed_origins))){\r\nreturn false;\r\n} else {\r\nreturn true;\r\n\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Takes a web server adapter[1] and returns a map with keys:\r\n * \r\n *  :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\r\n *  :send-fn                     ; (fn [user-id ev] for server>user push.\r\n *  :ajax-post-fn                ; (fn [ring-req])  for Ring CSRF-POST + chsk URL.\r\n *  :ajax-get-or-ws-handshake-fn ; (fn [ring-req])  for Ring GET + chsk URL.\r\n * \r\n *  :connected-uids ;             Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\r\n *  :send-buffers   ; Implementation detail, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\r\n * \r\n *   Security options:\r\n * \r\n *  :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\r\n * \r\n *  :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\r\n *                     ; CSRF check will be skipped iff nil (NOT RECOMMENDED!).\r\n * \r\n *  :authorized?-fn    ; ?(fn [ring-req]) -> When non-nil, (authorized?-fn <ring-req>)\r\n *                     ; must return truthy, otherwise connection requests will be\r\n *                     ; rejected with (unauthorized-fn <ring-req>) response.\r\n *                     ;\r\n *                     ; May check Authroization HTTP header, etc.\r\n * \r\n *   Other common options:\r\n * \r\n *  :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\r\n *  :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\r\n *  :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\r\n *                     ; w/in given msecs. Should be different to client's :ws-kalive-ms.\r\n *  :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\r\n *  :send-buf-ms-ajax  ; [2]\r\n *  :send-buf-ms-ws    ; [2]\r\n *  :packer            ; :edn (default), or an IPacker implementation.\r\n * \r\n *   [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\r\n *         `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\r\n *    You must have the necessary web-server dependency in your project.clj and\r\n *    the necessary entry in your namespace's `ns` form.\r\n * \r\n *   [2] Optimization to allow transparent batching of rapidly-triggered\r\n *    server>user pushes. This is esp. important for Ajax clients which use a\r\n *    (slow) reconnecting poller. Actual event dispatch may occur <= given ms\r\n *    after send call (larger values => larger batch windows).\r\n */\r\ntaoensso.sente.make_channel_socket_server_BANG_ = (function taoensso$sente$make_channel_socket_server_BANG_(var_args){\r\nvar args__4742__auto__ = [];\r\nvar len__4736__auto___76151 = arguments.length;\r\nvar i__4737__auto___76152 = (0);\r\nwhile(true){\r\nif((i__4737__auto___76152 < len__4736__auto___76151)){\r\nargs__4742__auto__.push((arguments[i__4737__auto___76152]));\r\n\r\nvar G__76153 = (i__4737__auto___76152 + (1));\r\ni__4737__auto___76152 = G__76153;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\r\nreturn taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\r\n});\r\n\r\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (web_server_ch_adapter,p__75034){\r\nvar vec__75035 = p__75034;\r\nvar map__75038 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75035,(0),null);\r\nvar map__75038__$1 = (((((!((map__75038 == null))))?(((((map__75038.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75038.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75038):map__75038);\r\nvar ws_kalive_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75038__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(25)], 0)));\r\nvar send_buf_ms_ws = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75038__$1,new cljs.core.Keyword(null,\"send-buf-ms-ws\",\"send-buf-ms-ws\",-1149586238),(30));\r\nvar allowed_origins = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75038__$1,new cljs.core.Keyword(null,\"allowed-origins\",\"allowed-origins\",1477851683),new cljs.core.Keyword(null,\"all\",\"all\",892129742));\r\nvar lp_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75038__$1,new cljs.core.Keyword(null,\"lp-timeout-ms\",\"lp-timeout-ms\",-1451963133),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(20)], 0)));\r\nvar csrf_token_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75038__$1,new cljs.core.Keyword(null,\"csrf-token-fn\",\"csrf-token-fn\",-1846298394),(function (ring_req){\r\nvar or__4126__auto__ = new cljs.core.Keyword(null,\"anti-forgery-token\",\"anti-forgery-token\",806990841).cljs$core$IFn$_invoke$arity$1(ring_req);\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nvar or__4126__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856)], null));\r\nif(cljs.core.truth_(or__4126__auto____$1)){\r\nreturn or__4126__auto____$1;\r\n} else {\r\nvar or__4126__auto____$2 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(\"ring.middleware.anti-forgery\",\"anti-forgery-token\",\"ring.middleware.anti-forgery/anti-forgery-token\",571563484)], null));\r\nif(cljs.core.truth_(or__4126__auto____$2)){\r\nreturn or__4126__auto____$2;\r\n} else {\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),\"__anti-forgery-token\"], null));\r\n}\r\n}\r\n}\r\n}));\r\nvar packer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75038__$1,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885));\r\nvar unauthorized_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75038__$1,new cljs.core.Keyword(null,\"unauthorized-fn\",\"unauthorized-fn\",-2032603957),(function (_ring_req){\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),(401),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"Unauthorized request\"], null);\r\n}));\r\nvar send_buf_ms_ajax = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75038__$1,new cljs.core.Keyword(null,\"send-buf-ms-ajax\",\"send-buf-ms-ajax\",1546129037),(100));\r\nvar bad_origin_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75038__$1,new cljs.core.Keyword(null,\"bad-origin-fn\",\"bad-origin-fn\",1385595727),(function (_ring_req){\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),(403),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"Unauthorized origin\"], null);\r\n}));\r\nvar handshake_data_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75038__$1,new cljs.core.Keyword(null,\"handshake-data-fn\",\"handshake-data-fn\",2011983089),(function (ring_req){\r\nreturn null;\r\n}));\r\nvar user_id_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75038__$1,new cljs.core.Keyword(null,\"user-id-fn\",\"user-id-fn\",-1532150029),(function (ring_req){\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400)], null));\r\n}));\r\nvar recv_buf_or_n = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75038__$1,new cljs.core.Keyword(null,\"recv-buf-or-n\",\"recv-buf-or-n\",1363950355),cljs.core.async.sliding_buffer((1000)));\r\nvar authorized_QMARK__fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75038__$1,new cljs.core.Keyword(null,\"authorized?-fn\",\"authorized?-fn\",-1334669261));\r\nvar bad_csrf_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75038__$1,new cljs.core.Keyword(null,\"bad-csrf-fn\",\"bad-csrf-fn\",16619032),(function (_ring_req){\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),(403),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"Bad CSRF token\"], null);\r\n}));\r\nvar e_76154 = (function (){try{if(taoensso.encore.pos_int_QMARK_(send_buf_ms_ajax)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e75048){if((e75048 instanceof Error)){\r\nvar e_76154 = e75048;\r\nreturn e_76154;\r\n} else {\r\nthrow e75048;\r\n\r\n}\r\n}})();\r\nif((e_76154 == null)){\r\n} else {\r\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",371,\"(enc/pos-int? send-buf-ms-ajax)\",send_buf_ms_ajax,e_76154,null);\r\n}\r\n\r\nvar e_76155 = (function (){try{if(taoensso.encore.pos_int_QMARK_(send_buf_ms_ws)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e75049){if((e75049 instanceof Error)){\r\nvar e_76155 = e75049;\r\nreturn e_76155;\r\n} else {\r\nthrow e75049;\r\n\r\n}\r\n}})();\r\nif((e_76155 == null)){\r\n} else {\r\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",371,\"(enc/pos-int? send-buf-ms-ws)\",send_buf_ms_ws,e_76155,null);\r\n}\r\n\r\n\r\nvar e_76156 = (function (){try{if((function (p1__75023_SHARP_){\r\nif((!((p1__75023_SHARP_ == null)))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__75023_SHARP_.taoensso$sente$interfaces$IServerChanAdapter$)))){\r\nreturn true;\r\n} else {\r\nif((!p1__75023_SHARP_.cljs$lang$protocol_mask$partition$)){\r\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IServerChanAdapter,p1__75023_SHARP_);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IServerChanAdapter,p1__75023_SHARP_);\r\n}\r\n})(web_server_ch_adapter)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e75050){if((e75050 instanceof Error)){\r\nvar e_76156 = e75050;\r\nreturn e_76156;\r\n} else {\r\nthrow e75050;\r\n\r\n}\r\n}})();\r\nif((e_76156 == null)){\r\n} else {\r\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",372,\"((fn* [p1__75023#] (satisfies? interfaces/IServerChanAdapter p1__75023#)) web-server-ch-adapter)\",web_server_ch_adapter,e_76156,null);\r\n}\r\n\r\nvar max_ms_76157 = taoensso.sente.default_client_side_ajax_timeout_ms;\r\nif((lp_timeout_ms >= max_ms_76157)){\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\":lp-timeout-ms must be < \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(max_ms_76157)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"lp-timeout-ms\",\"lp-timeout-ms\",-1451963133),lp_timeout_ms,new cljs.core.Keyword(null,\"default-client-side-ajax-timeout-ms\",\"default-client-side-ajax-timeout-ms\",1149929762),max_ms_76157], null));\r\n} else {\r\n}\r\n\r\nvar allowed_origins__$1 = (cljs.core.truth_((function (x){\r\nvar or__4126__auto__ = cljs.core.set_QMARK_(x);\r\nif(or__4126__auto__){\r\nreturn or__4126__auto__;\r\n} else {\r\nvar fexpr__75057 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"all\",\"all\",892129742),null], null), null);\r\nreturn (fexpr__75057.cljs$core$IFn$_invoke$arity$1 ? fexpr__75057.cljs$core$IFn$_invoke$arity$1(x) : fexpr__75057.call(null,x));\r\n}\r\n})(allowed_origins))?allowed_origins:taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",381,\"([:or set? #{:all}] allowed-origins)\",allowed_origins,null,null));\r\nvar packer__$1 = taoensso.sente.coerce_packer(packer);\r\nvar ch_recv = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(recv_buf_or_n);\r\nvar user_id_fn__$1 = (function (ring_req,client_id){\r\nvar or__4126__auto__ = (function (){var G__75059 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ring_req,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id);\r\nreturn (user_id_fn.cljs$core$IFn$_invoke$arity$1 ? user_id_fn.cljs$core$IFn$_invoke$arity$1(G__75059) : user_id_fn.call(null,G__75059));\r\n})();\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(\"taoensso.sente\",\"nil-uid\",\"taoensso.sente/nil-uid\",-2111603486);\r\n}\r\n});\r\nvar conns_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentArrayMap.EMPTY], null));\r\nvar send_buffers_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentArrayMap.EMPTY], null));\r\nvar connected_uids_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.PersistentHashSet.EMPTY], null));\r\nvar upd_conn_BANG_ = (function() {\r\nvar G__76161 = null;\r\nvar G__76161__3 = (function (conn_type,uid,client_id){\r\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type,uid,client_id], null),(function (_QMARK_v){\r\nvar vec__75064 = _QMARK_v;\r\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75064,(0),null);\r\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75064,(1),null);\r\nvar new_udt = taoensso.encore.now_udt();\r\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_sch,new_udt], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init?\",\"init?\",438181499),(_QMARK_v == null),new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),new_udt,new cljs.core.Keyword(null,\"?sch\",\"?sch\",2064493898),_QMARK_sch], null));\r\n}));\r\n});\r\nvar G__76161__4 = (function (conn_type,uid,client_id,new__QMARK_sch){\r\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type,uid,client_id], null),(function (_QMARK_v){\r\nvar new_udt = taoensso.encore.now_udt();\r\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new__QMARK_sch,new_udt], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init?\",\"init?\",438181499),(_QMARK_v == null),new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),new_udt,new cljs.core.Keyword(null,\"?sch\",\"?sch\",2064493898),new__QMARK_sch], null));\r\n}));\r\n});\r\nG__76161 = function(conn_type,uid,client_id,new__QMARK_sch){\r\nswitch(arguments.length){\r\ncase 3:\r\nreturn G__76161__3.call(this,conn_type,uid,client_id);\r\ncase 4:\r\nreturn G__76161__4.call(this,conn_type,uid,client_id,new__QMARK_sch);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\nG__76161.cljs$core$IFn$_invoke$arity$3 = G__76161__3;\r\nG__76161.cljs$core$IFn$_invoke$arity$4 = G__76161__4;\r\nreturn G__76161;\r\n})()\r\n;\r\nvar connect_uid_BANG_ = (function (conn_type,uid){\r\nif(cljs.core.truth_((function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(uid)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e75067){if((e75067 instanceof Error)){\r\nvar e = e75067;\r\nreturn e;\r\n} else {\r\nthrow e75067;\r\n\r\n}\r\n}})();\r\nif((e == null)){\r\nreturn true;\r\n} else {\r\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",417,\"(taoensso.truss.impl/some? uid)\",uid,e,null);\r\n}\r\n})())){\r\n} else {\r\nthrow (new Error(\"Assert failed: (have? uid)\"));\r\n}\r\n\r\nvar newly_connected_QMARK_ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(connected_uids_,cljs.core.PersistentVector.EMPTY,(function (p__75069){\r\nvar map__75070 = p__75069;\r\nvar map__75070__$1 = (((((!((map__75070 == null))))?(((((map__75070.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75070.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75070):map__75070);\r\nvar old_m = map__75070__$1;\r\nvar ws = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75070__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\r\nvar ajax__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75070__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\r\nvar any = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75070__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423));\r\nvar new_m = (function (){var G__75073 = conn_type;\r\nvar G__75073__$1 = (((G__75073 instanceof cljs.core.Keyword))?G__75073.fqn:null);\r\nswitch (G__75073__$1) {\r\ncase \"ws\":\r\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ws,uid),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),ajax__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid)], null);\r\n\r\nbreak;\r\ncase \"ajax\":\r\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),ws,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid),new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid)], null);\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__75073__$1)].join('')));\r\n\r\n}\r\n})();\r\nreturn taoensso.encore.swapped(new_m,(function (){var old_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(old_m);\r\nvar new_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(new_m);\r\nif((((!(cljs.core.contains_QMARK_(old_any,uid)))) && (cljs.core.contains_QMARK_(new_any,uid)))){\r\nreturn new cljs.core.Keyword(null,\"newly-connected\",\"newly-connected\",-2029862681);\r\n} else {\r\nreturn null;\r\n}\r\n})());\r\n}));\r\nreturn newly_connected_QMARK_;\r\n});\r\nvar upd_connected_uid_BANG_ = (function (uid){\r\nif(cljs.core.truth_((function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(uid)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e75074){if((e75074 instanceof Error)){\r\nvar e = e75074;\r\nreturn e;\r\n} else {\r\nthrow e75074;\r\n\r\n}\r\n}})();\r\nif((e == null)){\r\nreturn true;\r\n} else {\r\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",434,\"(taoensso.truss.impl/some? uid)\",uid,e,null);\r\n}\r\n})())){\r\n} else {\r\nthrow (new Error(\"Assert failed: (have? uid)\"));\r\n}\r\n\r\nvar newly_disconnected_QMARK_ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(connected_uids_,cljs.core.PersistentVector.EMPTY,(function (p__75075){\r\nvar map__75076 = p__75075;\r\nvar map__75076__$1 = (((((!((map__75076 == null))))?(((((map__75076.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75076.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75076):map__75076);\r\nvar old_m = map__75076__$1;\r\nvar ws = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75076__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\r\nvar ajax__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75076__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\r\nvar any = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75076__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423));\r\nvar conns_SINGLEQUOTE_ = cljs.core.deref(conns_);\r\nvar any_ws_clients_QMARK_ = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_),uid);\r\nvar any_ajax_clients_QMARK_ = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_),uid);\r\nvar any_clients_QMARK_ = ((any_ws_clients_QMARK_) || (any_ajax_clients_QMARK_));\r\nvar new_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),((any_ws_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ws,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(ws,uid)),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),((any_ajax_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid)),new cljs.core.Keyword(null,\"any\",\"any\",1705907423),((any_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(any,uid))], null);\r\nreturn taoensso.encore.swapped(new_m,(function (){var old_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(old_m);\r\nvar new_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(new_m);\r\nif(((cljs.core.contains_QMARK_(old_any,uid)) && ((!(cljs.core.contains_QMARK_(new_any,uid)))))){\r\nreturn new cljs.core.Keyword(null,\"newly-disconnected\",\"newly-disconnected\",-1586164962);\r\n} else {\r\nreturn null;\r\n}\r\n})());\r\n}));\r\nreturn newly_disconnected_QMARK_;\r\n});\r\nvar send_fn = (function() { \r\nvar G__76170__delegate = function (user_id,ev,p__75083){\r\nvar vec__75084 = p__75083;\r\nvar map__75087 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75084,(0),null);\r\nvar map__75087__$1 = (((((!((map__75087 == null))))?(((((map__75087.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75087.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75087):map__75087);\r\nvar opts = map__75087__$1;\r\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75087__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\r\nvar uid_76171 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(user_id,new cljs.core.Keyword(\"sente\",\"all-users-without-uid\",\"sente/all-users-without-uid\",-42979578)))?new cljs.core.Keyword(\"taoensso.sente\",\"nil-uid\",\"taoensso.sente/nil-uid\",-2111603486):user_id);\r\nvar __76172 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,460,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send: (->uid %s) %s\",uid_76171,ev], null);\r\n}),null)),null,-993005378);\r\nvar __76173__$1 = (cljs.core.truth_(uid_76171)?null:(function(){throw (new Error([\"Assert failed: \",[\"Support for sending to `nil` user-ids has been REMOVED. \",\"Please send to `:sente/all-users-without-uid` instead.\"].join(''),\"\\n\",\"uid\"].join('')))})());\r\nvar __76174__$2 = taoensso.sente.assert_event(ev);\r\nvar ev_uuid_76175 = taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();\r\nvar flush_buffer_BANG__76176 = (function (conn_type){\r\nvar temp__5735__auto__ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type], null),(function (m){\r\nvar vec__75093 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,uid_76171);\r\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75093,(0),null);\r\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75093,(1),null);\r\nif(cljs.core.contains_QMARK_(ev_uuids,ev_uuid_76175)){\r\nreturn taoensso.encore.swapped(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,uid_76171),cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,uid_76171));\r\n} else {\r\nreturn taoensso.encore.swapped(m,null);\r\n}\r\n}));\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar pulled = temp__5735__auto__;\r\nvar vec__75097 = pulled;\r\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75097,(0),null);\r\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75097,(1),null);\r\nif(cljs.core.vector_QMARK_(buffered_evs)){\r\n} else {\r\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",488,\"(vector? buffered-evs)\",buffered_evs,null,null);\r\n}\r\n\r\nif(cljs.core.set_QMARK_(ev_uuids)){\r\n} else {\r\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",489,\"(set? ev-uuids)\",ev_uuids,null,null);\r\n}\r\n\r\nvar buffered_evs_ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,buffered_evs);\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,492,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"buffered-evs-ppstr: %s\",buffered_evs_ppstr], null);\r\n}),null)),null,-102609134);\r\n\r\nvar G__75101 = conn_type;\r\nvar G__75101__$1 = (((G__75101 instanceof cljs.core.Keyword))?G__75101.fqn:null);\r\nswitch (G__75101__$1) {\r\ncase \"ws\":\r\nreturn (taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.cljs$core$IFn$_invoke$arity$4 ? taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.cljs$core$IFn$_invoke$arity$4(conns_,uid_76171,buffered_evs_ppstr,upd_conn_BANG_) : taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.call(null,conns_,uid_76171,buffered_evs_ppstr,upd_conn_BANG_));\r\n\r\nbreak;\r\ncase \"ajax\":\r\nreturn (taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,uid_76171,buffered_evs_ppstr) : taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.call(null,conns_,uid_76171,buffered_evs_ppstr));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__75101__$1)].join('')));\r\n\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ev,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"close\",\"chsk/close\",1840295819)], null))){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,501,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk closing (client may reconnect): %s\",uid_76171], null);\r\n}),null)),null,-1537001303);\r\n\r\nif(cljs.core.truth_(flush_QMARK_)){\r\nflush_buffer_BANG__76176(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\r\n\r\nflush_buffer_BANG__76176(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\r\n} else {\r\n}\r\n\r\nvar seq__75103_76186 = cljs.core.seq(cljs.core.vals(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid_76171], null))));\r\nvar chunk__75104_76187 = null;\r\nvar count__75105_76188 = (0);\r\nvar i__75106_76189 = (0);\r\nwhile(true){\r\nif((i__75106_76189 < count__75105_76188)){\r\nvar vec__75115_76190 = chunk__75104_76187.cljs$core$IIndexed$_nth$arity$2(null,i__75106_76189);\r\nvar _QMARK_sch_76191 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75115_76190,(0),null);\r\nvar _udt_76192 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75115_76190,(1),null);\r\nvar temp__5735__auto___76194 = _QMARK_sch_76191;\r\nif(cljs.core.truth_(temp__5735__auto___76194)){\r\nvar sch_76196 = temp__5735__auto___76194;\r\ntaoensso.sente.interfaces.sch_close_BANG_(sch_76196);\r\n} else {\r\n}\r\n\r\n\r\nvar G__76197 = seq__75103_76186;\r\nvar G__76198 = chunk__75104_76187;\r\nvar G__76199 = count__75105_76188;\r\nvar G__76200 = (i__75106_76189 + (1));\r\nseq__75103_76186 = G__76197;\r\nchunk__75104_76187 = G__76198;\r\ncount__75105_76188 = G__76199;\r\ni__75106_76189 = G__76200;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___76202 = cljs.core.seq(seq__75103_76186);\r\nif(temp__5735__auto___76202){\r\nvar seq__75103_76203__$1 = temp__5735__auto___76202;\r\nif(cljs.core.chunked_seq_QMARK_(seq__75103_76203__$1)){\r\nvar c__4556__auto___76204 = cljs.core.chunk_first(seq__75103_76203__$1);\r\nvar G__76205 = cljs.core.chunk_rest(seq__75103_76203__$1);\r\nvar G__76206 = c__4556__auto___76204;\r\nvar G__76207 = cljs.core.count(c__4556__auto___76204);\r\nvar G__76208 = (0);\r\nseq__75103_76186 = G__76205;\r\nchunk__75104_76187 = G__76206;\r\ncount__75105_76188 = G__76207;\r\ni__75106_76189 = G__76208;\r\ncontinue;\r\n} else {\r\nvar vec__75118_76209 = cljs.core.first(seq__75103_76203__$1);\r\nvar _QMARK_sch_76210 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75118_76209,(0),null);\r\nvar _udt_76211 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75118_76209,(1),null);\r\nvar temp__5735__auto___76212__$1 = _QMARK_sch_76210;\r\nif(cljs.core.truth_(temp__5735__auto___76212__$1)){\r\nvar sch_76213 = temp__5735__auto___76212__$1;\r\ntaoensso.sente.interfaces.sch_close_BANG_(sch_76213);\r\n} else {\r\n}\r\n\r\n\r\nvar G__76214 = cljs.core.next(seq__75103_76203__$1);\r\nvar G__76215 = null;\r\nvar G__76216 = (0);\r\nvar G__76217 = (0);\r\nseq__75103_76186 = G__76214;\r\nchunk__75104_76187 = G__76215;\r\ncount__75105_76188 = G__76216;\r\ni__75106_76189 = G__76217;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nvar seq__75121_76218 = cljs.core.seq(cljs.core.vals(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid_76171], null))));\r\nvar chunk__75122_76219 = null;\r\nvar count__75123_76220 = (0);\r\nvar i__75124_76221 = (0);\r\nwhile(true){\r\nif((i__75124_76221 < count__75123_76220)){\r\nvar vec__75131_76224 = chunk__75122_76219.cljs$core$IIndexed$_nth$arity$2(null,i__75124_76221);\r\nvar _QMARK_sch_76225 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75131_76224,(0),null);\r\nvar _udt_76226 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75131_76224,(1),null);\r\nvar temp__5735__auto___76228 = _QMARK_sch_76225;\r\nif(cljs.core.truth_(temp__5735__auto___76228)){\r\nvar sch_76229 = temp__5735__auto___76228;\r\ntaoensso.sente.interfaces.sch_close_BANG_(sch_76229);\r\n} else {\r\n}\r\n\r\n\r\nvar G__76230 = seq__75121_76218;\r\nvar G__76231 = chunk__75122_76219;\r\nvar G__76232 = count__75123_76220;\r\nvar G__76233 = (i__75124_76221 + (1));\r\nseq__75121_76218 = G__76230;\r\nchunk__75122_76219 = G__76231;\r\ncount__75123_76220 = G__76232;\r\ni__75124_76221 = G__76233;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___76234 = cljs.core.seq(seq__75121_76218);\r\nif(temp__5735__auto___76234){\r\nvar seq__75121_76235__$1 = temp__5735__auto___76234;\r\nif(cljs.core.chunked_seq_QMARK_(seq__75121_76235__$1)){\r\nvar c__4556__auto___76236 = cljs.core.chunk_first(seq__75121_76235__$1);\r\nvar G__76237 = cljs.core.chunk_rest(seq__75121_76235__$1);\r\nvar G__76238 = c__4556__auto___76236;\r\nvar G__76239 = cljs.core.count(c__4556__auto___76236);\r\nvar G__76240 = (0);\r\nseq__75121_76218 = G__76237;\r\nchunk__75122_76219 = G__76238;\r\ncount__75123_76220 = G__76239;\r\ni__75124_76221 = G__76240;\r\ncontinue;\r\n} else {\r\nvar vec__75134_76241 = cljs.core.first(seq__75121_76235__$1);\r\nvar _QMARK_sch_76242 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75134_76241,(0),null);\r\nvar _udt_76243 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75134_76241,(1),null);\r\nvar temp__5735__auto___76247__$1 = _QMARK_sch_76242;\r\nif(cljs.core.truth_(temp__5735__auto___76247__$1)){\r\nvar sch_76248 = temp__5735__auto___76247__$1;\r\ntaoensso.sente.interfaces.sch_close_BANG_(sch_76248);\r\n} else {\r\n}\r\n\r\n\r\nvar G__76249 = cljs.core.next(seq__75121_76235__$1);\r\nvar G__76250 = null;\r\nvar G__76251 = (0);\r\nvar G__76252 = (0);\r\nseq__75121_76218 = G__76249;\r\nchunk__75122_76219 = G__76250;\r\ncount__75123_76220 = G__76251;\r\ni__75124_76221 = G__76252;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\nvar seq__75137_76253 = cljs.core.seq(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)], null));\r\nvar chunk__75138_76254 = null;\r\nvar count__75139_76255 = (0);\r\nvar i__75140_76256 = (0);\r\nwhile(true){\r\nif((i__75140_76256 < count__75139_76255)){\r\nvar conn_type_76257 = chunk__75138_76254.cljs$core$IIndexed$_nth$arity$2(null,i__75140_76256);\r\ntaoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_76257,uid_76171], null),((function (seq__75137_76253,chunk__75138_76254,count__75139_76255,i__75140_76256,conn_type_76257,uid_76171,__76172,__76173__$1,__76174__$2,ev_uuid_76175,flush_buffer_BANG__76176,vec__75084,map__75087,map__75087__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__75035,map__75038,map__75038__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,unauthorized_fn,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,authorized_QMARK__fn,bad_csrf_fn){\r\nreturn (function (_QMARK_v){\r\nif(cljs.core.not(_QMARK_v)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null),cljs.core.PersistentHashSet.createAsIfByAssoc([ev_uuid_76175])], null);\r\n} else {\r\nvar vec__75149 = _QMARK_v;\r\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75149,(0),null);\r\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75149,(1),null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(buffered_evs,ev),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ev_uuids,ev_uuid_76175)], null);\r\n}\r\n});})(seq__75137_76253,chunk__75138_76254,count__75139_76255,i__75140_76256,conn_type_76257,uid_76171,__76172,__76173__$1,__76174__$2,ev_uuid_76175,flush_buffer_BANG__76176,vec__75084,map__75087,map__75087__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__75035,map__75038,map__75038__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,unauthorized_fn,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,authorized_QMARK__fn,bad_csrf_fn))\r\n);\r\n\r\n\r\nvar G__76261 = seq__75137_76253;\r\nvar G__76262 = chunk__75138_76254;\r\nvar G__76263 = count__75139_76255;\r\nvar G__76264 = (i__75140_76256 + (1));\r\nseq__75137_76253 = G__76261;\r\nchunk__75138_76254 = G__76262;\r\ncount__75139_76255 = G__76263;\r\ni__75140_76256 = G__76264;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___76265 = cljs.core.seq(seq__75137_76253);\r\nif(temp__5735__auto___76265){\r\nvar seq__75137_76266__$1 = temp__5735__auto___76265;\r\nif(cljs.core.chunked_seq_QMARK_(seq__75137_76266__$1)){\r\nvar c__4556__auto___76267 = cljs.core.chunk_first(seq__75137_76266__$1);\r\nvar G__76268 = cljs.core.chunk_rest(seq__75137_76266__$1);\r\nvar G__76269 = c__4556__auto___76267;\r\nvar G__76270 = cljs.core.count(c__4556__auto___76267);\r\nvar G__76271 = (0);\r\nseq__75137_76253 = G__76268;\r\nchunk__75138_76254 = G__76269;\r\ncount__75139_76255 = G__76270;\r\ni__75140_76256 = G__76271;\r\ncontinue;\r\n} else {\r\nvar conn_type_76272 = cljs.core.first(seq__75137_76266__$1);\r\ntaoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_76272,uid_76171], null),((function (seq__75137_76253,chunk__75138_76254,count__75139_76255,i__75140_76256,conn_type_76272,seq__75137_76266__$1,temp__5735__auto___76265,uid_76171,__76172,__76173__$1,__76174__$2,ev_uuid_76175,flush_buffer_BANG__76176,vec__75084,map__75087,map__75087__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__75035,map__75038,map__75038__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,unauthorized_fn,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,authorized_QMARK__fn,bad_csrf_fn){\r\nreturn (function (_QMARK_v){\r\nif(cljs.core.not(_QMARK_v)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null),cljs.core.PersistentHashSet.createAsIfByAssoc([ev_uuid_76175])], null);\r\n} else {\r\nvar vec__75153 = _QMARK_v;\r\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75153,(0),null);\r\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75153,(1),null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(buffered_evs,ev),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ev_uuids,ev_uuid_76175)], null);\r\n}\r\n});})(seq__75137_76253,chunk__75138_76254,count__75139_76255,i__75140_76256,conn_type_76272,seq__75137_76266__$1,temp__5735__auto___76265,uid_76171,__76172,__76173__$1,__76174__$2,ev_uuid_76175,flush_buffer_BANG__76176,vec__75084,map__75087,map__75087__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__75035,map__75038,map__75038__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,unauthorized_fn,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,authorized_QMARK__fn,bad_csrf_fn))\r\n);\r\n\r\n\r\nvar G__76275 = cljs.core.next(seq__75137_76266__$1);\r\nvar G__76276 = null;\r\nvar G__76277 = (0);\r\nvar G__76278 = (0);\r\nseq__75137_76253 = G__76275;\r\nchunk__75138_76254 = G__76276;\r\ncount__75139_76255 = G__76277;\r\ni__75140_76256 = G__76278;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nif(cljs.core.truth_(flush_QMARK_)){\r\nflush_buffer_BANG__76176(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\r\n\r\nflush_buffer_BANG__76176(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\r\n} else {\r\nvar ws_timeout_76279 = cljs.core.async.timeout(send_buf_ms_ws);\r\nvar ajax_timeout_76280 = cljs.core.async.timeout(send_buf_ms_ajax);\r\nvar c__73714__auto___76281 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run((function (){\r\nvar f__73715__auto__ = (function (){var switch__73644__auto__ = (function (state_75171){\r\nvar state_val_75172 = (state_75171[(1)]);\r\nif((state_val_75172 === (1))){\r\nvar state_75171__$1 = state_75171;\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_75171__$1,(2),ws_timeout_76279);\r\n} else {\r\nif((state_val_75172 === (2))){\r\nvar inst_75165 = (state_75171[(2)]);\r\nvar inst_75166 = flush_buffer_BANG__76176(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\r\nvar state_75171__$1 = (function (){var statearr_75176 = state_75171;\r\n(statearr_75176[(7)] = inst_75165);\r\n\r\nreturn statearr_75176;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_75171__$1,inst_75166);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n});\r\nreturn (function() {\r\nvar taoensso$sente$state_machine__73645__auto__ = null;\r\nvar taoensso$sente$state_machine__73645__auto____0 = (function (){\r\nvar statearr_75178 = [null,null,null,null,null,null,null,null];\r\n(statearr_75178[(0)] = taoensso$sente$state_machine__73645__auto__);\r\n\r\n(statearr_75178[(1)] = (1));\r\n\r\nreturn statearr_75178;\r\n});\r\nvar taoensso$sente$state_machine__73645__auto____1 = (function (state_75171){\r\nwhile(true){\r\nvar ret_value__73646__auto__ = (function (){try{while(true){\r\nvar result__73647__auto__ = switch__73644__auto__(state_75171);\r\nif(cljs.core.keyword_identical_QMARK_(result__73647__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__73647__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e75179){var ex__73648__auto__ = e75179;\r\nvar statearr_75180_76282 = state_75171;\r\n(statearr_75180_76282[(2)] = ex__73648__auto__);\r\n\r\n\r\nif(cljs.core.seq((state_75171[(4)]))){\r\nvar statearr_75181_76283 = state_75171;\r\n(statearr_75181_76283[(1)] = cljs.core.first((state_75171[(4)])));\r\n\r\n} else {\r\nthrow ex__73648__auto__;\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__73646__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__76284 = state_75171;\r\nstate_75171 = G__76284;\r\ncontinue;\r\n} else {\r\nreturn ret_value__73646__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\ntaoensso$sente$state_machine__73645__auto__ = function(state_75171){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn taoensso$sente$state_machine__73645__auto____0.call(this);\r\ncase 1:\r\nreturn taoensso$sente$state_machine__73645__auto____1.call(this,state_75171);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__73645__auto____0;\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__73645__auto____1;\r\nreturn taoensso$sente$state_machine__73645__auto__;\r\n})()\r\n})();\r\nvar state__73716__auto__ = (function (){var statearr_75185 = f__73715__auto__();\r\n(statearr_75185[(6)] = c__73714__auto___76281);\r\n\r\nreturn statearr_75185;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__73716__auto__);\r\n}));\r\n\r\n\r\nvar c__73714__auto___76285 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run((function (){\r\nvar f__73715__auto__ = (function (){var switch__73644__auto__ = (function (state_75190){\r\nvar state_val_75191 = (state_75190[(1)]);\r\nif((state_val_75191 === (1))){\r\nvar state_75190__$1 = state_75190;\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_75190__$1,(2),ajax_timeout_76280);\r\n} else {\r\nif((state_val_75191 === (2))){\r\nvar inst_75187 = (state_75190[(2)]);\r\nvar inst_75188 = flush_buffer_BANG__76176(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\r\nvar state_75190__$1 = (function (){var statearr_75194 = state_75190;\r\n(statearr_75194[(7)] = inst_75187);\r\n\r\nreturn statearr_75194;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_75190__$1,inst_75188);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n});\r\nreturn (function() {\r\nvar taoensso$sente$state_machine__73645__auto__ = null;\r\nvar taoensso$sente$state_machine__73645__auto____0 = (function (){\r\nvar statearr_75196 = [null,null,null,null,null,null,null,null];\r\n(statearr_75196[(0)] = taoensso$sente$state_machine__73645__auto__);\r\n\r\n(statearr_75196[(1)] = (1));\r\n\r\nreturn statearr_75196;\r\n});\r\nvar taoensso$sente$state_machine__73645__auto____1 = (function (state_75190){\r\nwhile(true){\r\nvar ret_value__73646__auto__ = (function (){try{while(true){\r\nvar result__73647__auto__ = switch__73644__auto__(state_75190);\r\nif(cljs.core.keyword_identical_QMARK_(result__73647__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__73647__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e75197){var ex__73648__auto__ = e75197;\r\nvar statearr_75198_76286 = state_75190;\r\n(statearr_75198_76286[(2)] = ex__73648__auto__);\r\n\r\n\r\nif(cljs.core.seq((state_75190[(4)]))){\r\nvar statearr_75199_76287 = state_75190;\r\n(statearr_75199_76287[(1)] = cljs.core.first((state_75190[(4)])));\r\n\r\n} else {\r\nthrow ex__73648__auto__;\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__73646__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__76288 = state_75190;\r\nstate_75190 = G__76288;\r\ncontinue;\r\n} else {\r\nreturn ret_value__73646__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\ntaoensso$sente$state_machine__73645__auto__ = function(state_75190){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn taoensso$sente$state_machine__73645__auto____0.call(this);\r\ncase 1:\r\nreturn taoensso$sente$state_machine__73645__auto____1.call(this,state_75190);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__73645__auto____0;\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__73645__auto____1;\r\nreturn taoensso$sente$state_machine__73645__auto__;\r\n})()\r\n})();\r\nvar state__73716__auto__ = (function (){var statearr_75203 = f__73715__auto__();\r\n(statearr_75203[(6)] = c__73714__auto___76285);\r\n\r\nreturn statearr_75203;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__73716__auto__);\r\n}));\r\n\r\n}\r\n}\r\n\r\nreturn null;\r\n};\r\nvar G__76170 = function (user_id,ev,var_args){\r\nvar p__75083 = null;\r\nif (arguments.length > 2) {\r\nvar G__76289__i = 0, G__76289__a = new Array(arguments.length -  2);\r\nwhile (G__76289__i < G__76289__a.length) {G__76289__a[G__76289__i] = arguments[G__76289__i + 2]; ++G__76289__i;}\r\n  p__75083 = new cljs.core.IndexedSeq(G__76289__a,0,null);\r\n} \r\nreturn G__76170__delegate.call(this,user_id,ev,p__75083);};\r\nG__76170.cljs$lang$maxFixedArity = 2;\r\nG__76170.cljs$lang$applyTo = (function (arglist__76290){\r\nvar user_id = cljs.core.first(arglist__76290);\r\narglist__76290 = cljs.core.next(arglist__76290);\r\nvar ev = cljs.core.first(arglist__76290);\r\nvar p__75083 = cljs.core.rest(arglist__76290);\r\nreturn G__76170__delegate(user_id,ev,p__75083);\r\n});\r\nG__76170.cljs$core$IFn$_invoke$arity$variadic = G__76170__delegate;\r\nreturn G__76170;\r\n})()\r\n;\r\nvar bad_csrf_QMARK_ = (function (ring_req){\r\nif((csrf_token_fn == null)){\r\nreturn false;\r\n} else {\r\nvar temp__5733__auto__ = (csrf_token_fn.cljs$core$IFn$_invoke$arity$1 ? csrf_token_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : csrf_token_fn.call(null,ring_req));\r\nif(cljs.core.truth_(temp__5733__auto__)){\r\nvar reference_csrf_token = temp__5733__auto__;\r\nvar csrf_token_from_client = (function (){var or__4126__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856)], null));\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nvar or__4126__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),\"x-csrf-token\"], null));\r\nif(cljs.core.truth_(or__4126__auto____$1)){\r\nreturn or__4126__auto____$1;\r\n} else {\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),\"x-xsrf-token\"], null));\r\n}\r\n}\r\n})();\r\nreturn cljs.core.not(taoensso.encore.const_str_EQ_(reference_csrf_token,csrf_token_from_client));\r\n} else {\r\nreturn true;\r\n}\r\n}\r\n});\r\nvar unauthorized_QMARK_ = (function (ring_req){\r\nif((authorized_QMARK__fn == null)){\r\nreturn false;\r\n} else {\r\nreturn cljs.core.not((authorized_QMARK__fn.cljs$core$IFn$_invoke$arity$0 ? authorized_QMARK__fn.cljs$core$IFn$_invoke$arity$0() : authorized_QMARK__fn.call(null)));\r\n}\r\n});\r\nvar possible_rejection_resp = (function (ring_req){\r\nif(bad_csrf_QMARK_(ring_req)){\r\nreturn (bad_csrf_fn.cljs$core$IFn$_invoke$arity$1 ? bad_csrf_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_csrf_fn.call(null,ring_req));\r\n} else {\r\nif(taoensso.sente.bad_origin_QMARK_(allowed_origins__$1,ring_req)){\r\nreturn (bad_origin_fn.cljs$core$IFn$_invoke$arity$1 ? bad_origin_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_origin_fn.call(null,ring_req));\r\n} else {\r\nif(unauthorized_QMARK_(ring_req)){\r\nreturn (unauthorized_fn.cljs$core$IFn$_invoke$arity$1 ? unauthorized_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : unauthorized_fn.call(null,ring_req));\r\n} else {\r\nreturn null;\r\n\r\n}\r\n}\r\n}\r\n});\r\nvar ev_msg_const = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ch_recv,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),connected_uids_,new cljs.core.Keyword(null,\"send-buffers\",\"send-buffers\",-1788003787),send_buffers_], null);\r\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ch_recv,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),connected_uids_,new cljs.core.Keyword(null,\"send-buffers\",\"send-buffers\",-1788003787),send_buffers_,new cljs.core.Keyword(null,\"ajax-post-fn\",\"ajax-post-fn\",1830071264),(function (ring_req){\r\nvar b2__26857__auto__ = possible_rejection_resp(ring_req);\r\nif(cljs.core.truth_(b2__26857__auto__)){\r\nvar resp = b2__26857__auto__;\r\nreturn resp;\r\n} else {\r\nreturn taoensso.sente.interfaces.ring_req__GT_server_ch_resp(web_server_ch_adapter,ring_req,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"on-open\",\"on-open\",-1391088163),(function (server_ch,websocket_QMARK_){\r\nif(cljs.core.not(websocket_QMARK_)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (not websocket?)\"));\r\n}\r\n\r\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\r\nvar ppstr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"ppstr\",\"ppstr\",1557495252));\r\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\r\nvar vec__75204 = taoensso.sente.unpack(packer__$1,ppstr);\r\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75204,(0),null);\r\nvar has_cb_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75204,(1),null);\r\nvar reply_fn = (function (){var replied_QMARK__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\r\nreturn (function (resp_clj){\r\nif(cljs.core.compare_and_set_BANG_(replied_QMARK__,false,true)){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,615,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send (ajax post reply): %s\",resp_clj], null);\r\n}),null)),null,-1336654133);\r\n\r\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,resp_clj));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n})();\r\ntaoensso.sente.put_server_event_msg_GT_ch_recv_BANG_(ch_recv,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg_const,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req,new cljs.core.Keyword(null,\"event\",\"event\",301435442),clj,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),user_id_fn__$1(ring_req,client_id),new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),(cljs.core.truth_(has_cb_QMARK_)?reply_fn:null)], null)], 0)));\r\n\r\nif(cljs.core.truth_(has_cb_QMARK_)){\r\nvar temp__5735__auto__ = lp_timeout_ms;\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar ms = temp__5735__auto__;\r\nvar c__73714__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run((function (){\r\nvar f__73715__auto__ = (function (){var switch__73644__auto__ = (function (state_75212){\r\nvar state_val_75213 = (state_75212[(1)]);\r\nif((state_val_75213 === (1))){\r\nvar inst_75207 = cljs.core.async.timeout(ms);\r\nvar state_75212__$1 = state_75212;\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_75212__$1,(2),inst_75207);\r\n} else {\r\nif((state_val_75213 === (2))){\r\nvar inst_75209 = (state_75212[(2)]);\r\nvar inst_75210 = reply_fn(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489));\r\nvar state_75212__$1 = (function (){var statearr_75214 = state_75212;\r\n(statearr_75214[(7)] = inst_75209);\r\n\r\nreturn statearr_75214;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_75212__$1,inst_75210);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n});\r\nreturn (function() {\r\nvar taoensso$sente$state_machine__73645__auto__ = null;\r\nvar taoensso$sente$state_machine__73645__auto____0 = (function (){\r\nvar statearr_75215 = [null,null,null,null,null,null,null,null];\r\n(statearr_75215[(0)] = taoensso$sente$state_machine__73645__auto__);\r\n\r\n(statearr_75215[(1)] = (1));\r\n\r\nreturn statearr_75215;\r\n});\r\nvar taoensso$sente$state_machine__73645__auto____1 = (function (state_75212){\r\nwhile(true){\r\nvar ret_value__73646__auto__ = (function (){try{while(true){\r\nvar result__73647__auto__ = switch__73644__auto__(state_75212);\r\nif(cljs.core.keyword_identical_QMARK_(result__73647__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__73647__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e75216){var ex__73648__auto__ = e75216;\r\nvar statearr_75217_76294 = state_75212;\r\n(statearr_75217_76294[(2)] = ex__73648__auto__);\r\n\r\n\r\nif(cljs.core.seq((state_75212[(4)]))){\r\nvar statearr_75218_76295 = state_75212;\r\n(statearr_75218_76295[(1)] = cljs.core.first((state_75212[(4)])));\r\n\r\n} else {\r\nthrow ex__73648__auto__;\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__73646__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__76296 = state_75212;\r\nstate_75212 = G__76296;\r\ncontinue;\r\n} else {\r\nreturn ret_value__73646__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\ntaoensso$sente$state_machine__73645__auto__ = function(state_75212){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn taoensso$sente$state_machine__73645__auto____0.call(this);\r\ncase 1:\r\nreturn taoensso$sente$state_machine__73645__auto____1.call(this,state_75212);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__73645__auto____0;\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__73645__auto____1;\r\nreturn taoensso$sente$state_machine__73645__auto__;\r\n})()\r\n})();\r\nvar state__73716__auto__ = (function (){var statearr_75219 = f__73715__auto__();\r\n(statearr_75219[(6)] = c__73714__auto__);\r\n\r\nreturn statearr_75219;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__73716__auto__);\r\n}));\r\n\r\nreturn c__73714__auto__;\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn reply_fn(new cljs.core.Keyword(\"chsk\",\"dummy-cb-200\",\"chsk/dummy-cb-200\",-1663130337));\r\n}\r\n})], null));\r\n}\r\n}),new cljs.core.Keyword(null,\"ajax-get-or-ws-handshake-fn\",\"ajax-get-or-ws-handshake-fn\",-1210409233),(function (ring_req){\r\nvar sch_uuid = taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1((6));\r\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\r\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\r\nvar uid = user_id_fn__$1(ring_req,client_id);\r\nvar receive_event_msg_BANG_ = (function() {\r\nvar taoensso$sente$self = null;\r\nvar taoensso$sente$self__1 = (function (event){\r\nreturn taoensso$sente$self.cljs$core$IFn$_invoke$arity$2(event,null);\r\n});\r\nvar taoensso$sente$self__2 = (function (event,_QMARK_reply_fn){\r\nreturn taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_(ch_recv,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg_const,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req,new cljs.core.Keyword(null,\"event\",\"event\",301435442),event,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),_QMARK_reply_fn,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),uid], null)], 0)));\r\n});\r\ntaoensso$sente$self = function(event,_QMARK_reply_fn){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn taoensso$sente$self__1.call(this,event);\r\ncase 2:\r\nreturn taoensso$sente$self__2.call(this,event,_QMARK_reply_fn);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\ntaoensso$sente$self.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$self__1;\r\ntaoensso$sente$self.cljs$core$IFn$_invoke$arity$2 = taoensso$sente$self__2;\r\nreturn taoensso$sente$self;\r\n})()\r\n;\r\nvar send_handshake_BANG_ = (function (server_ch,websocket_QMARK_){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,659,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-handshake!\"], null);\r\n}),null)),null,597145170);\r\n\r\nvar _QMARK_handshake_data = (handshake_data_fn.cljs$core$IFn$_invoke$arity$1 ? handshake_data_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : handshake_data_fn.call(null,ring_req));\r\nvar handshake_ev = (((_QMARK_handshake_data == null))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid,null], null)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid,null,_QMARK_handshake_data], null)], null));\r\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,handshake_ev));\r\n});\r\nif(clojure.string.blank_QMARK_(client_id)){\r\nvar err_msg = \"Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` & `wrap-keyword-params`)?\";\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,672,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[err_msg,\": %s\"].join(''),ring_req], null);\r\n}),null)),null,936174934);\r\n\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(err_msg,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req], null));\r\n} else {\r\nvar b2__26857__auto__ = possible_rejection_resp(ring_req);\r\nif(cljs.core.truth_(b2__26857__auto__)){\r\nvar resp = b2__26857__auto__;\r\nreturn resp;\r\n} else {\r\nreturn taoensso.sente.interfaces.ring_req__GT_server_ch_resp(web_server_ch_adapter,ring_req,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"on-open\",\"on-open\",-1391088163),(function (server_ch,websocket_QMARK_){\r\nif(cljs.core.truth_(websocket_QMARK_)){\r\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,683,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"New WebSocket channel: %s (%s)\",uid,sch_uuid], null);\r\n}),null)),null,418671428);\r\nvar updated_conn = upd_conn_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id,server_ch);\r\nvar udt_open = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\r\nif(cljs.core.truth_(connect_uid_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid))){\r\nreceive_event_msg_BANG_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"uidport-open\",\"chsk/uidport-open\",1685786954),uid], null));\r\n} else {\r\n}\r\n\r\nsend_handshake_BANG_(server_ch,websocket_QMARK_);\r\n\r\nvar temp__5735__auto__ = ws_kalive_ms;\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar ms = temp__5735__auto__;\r\nvar c__73714__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run((function (){\r\nvar f__73715__auto__ = (function (){var switch__73644__auto__ = (function (state_75271){\r\nvar state_val_75272 = (state_75271[(1)]);\r\nif((state_val_75272 === (7))){\r\nvar inst_75266 = (state_75271[(2)]);\r\nvar state_75271__$1 = state_75271;\r\nvar statearr_75275_76297 = state_75271__$1;\r\n(statearr_75275_76297[(2)] = inst_75266);\r\n\r\n(statearr_75275_76297[(1)] = (3));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75272 === (1))){\r\nvar inst_75226 = udt_open;\r\nvar inst_75228 = inst_75226;\r\nvar state_75271__$1 = (function (){var statearr_75276 = state_75271;\r\n(statearr_75276[(7)] = inst_75228);\r\n\r\nreturn statearr_75276;\r\n})();\r\nvar statearr_75277_76298 = state_75271__$1;\r\n(statearr_75277_76298[(2)] = null);\r\n\r\n(statearr_75277_76298[(1)] = (2));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75272 === (4))){\r\nvar inst_75240 = (state_75271[(8)]);\r\nvar inst_75232 = (state_75271[(2)]);\r\nvar inst_75235 = cljs.core.deref(conns_);\r\nvar inst_75237 = cljs.core.PersistentVector.EMPTY_NODE;\r\nvar inst_75238 = [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id];\r\nvar inst_75239 = (new cljs.core.PersistentVector(null,3,(5),inst_75237,inst_75238,null));\r\nvar inst_75240__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_75235,inst_75239);\r\nvar state_75271__$1 = (function (){var statearr_75279 = state_75271;\r\n(statearr_75279[(8)] = inst_75240__$1);\r\n\r\n(statearr_75279[(9)] = inst_75232);\r\n\r\nreturn statearr_75279;\r\n})();\r\nif(cljs.core.truth_(inst_75240__$1)){\r\nvar statearr_75280_76299 = state_75271__$1;\r\n(statearr_75280_76299[(1)] = (5));\r\n\r\n} else {\r\nvar statearr_75281_76300 = state_75271__$1;\r\n(statearr_75281_76300[(1)] = (6));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75272 === (13))){\r\nvar inst_75248 = (state_75271[(10)]);\r\nvar inst_75258 = (state_75271[(2)]);\r\nvar inst_75228 = inst_75248;\r\nvar state_75271__$1 = (function (){var statearr_75282 = state_75271;\r\n(statearr_75282[(7)] = inst_75228);\r\n\r\n(statearr_75282[(11)] = inst_75258);\r\n\r\nreturn statearr_75282;\r\n})();\r\nvar statearr_75283_76301 = state_75271__$1;\r\n(statearr_75283_76301[(2)] = null);\r\n\r\n(statearr_75283_76301[(1)] = (2));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75272 === (6))){\r\nvar state_75271__$1 = state_75271;\r\nvar statearr_75284_76302 = state_75271__$1;\r\n(statearr_75284_76302[(2)] = null);\r\n\r\n(statearr_75284_76302[(1)] = (7));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75272 === (3))){\r\nvar inst_75268 = (state_75271[(2)]);\r\nvar state_75271__$1 = state_75271;\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_75271__$1,inst_75268);\r\n} else {\r\nif((state_val_75272 === (12))){\r\nvar state_75271__$1 = state_75271;\r\nvar statearr_75286_76303 = state_75271__$1;\r\n(statearr_75286_76303[(2)] = null);\r\n\r\n(statearr_75286_76303[(1)] = (13));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75272 === (2))){\r\nvar inst_75230 = cljs.core.async.timeout(ms);\r\nvar state_75271__$1 = state_75271;\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_75271__$1,(4),inst_75230);\r\n} else {\r\nif((state_val_75272 === (11))){\r\nvar inst_75253 = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304));\r\nvar inst_75254 = taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,inst_75253);\r\nvar state_75271__$1 = state_75271;\r\nvar statearr_75289_76304 = state_75271__$1;\r\n(statearr_75289_76304[(2)] = inst_75254);\r\n\r\n(statearr_75289_76304[(1)] = (13));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75272 === (9))){\r\nvar state_75271__$1 = state_75271;\r\nvar statearr_75290_76305 = state_75271__$1;\r\n(statearr_75290_76305[(2)] = null);\r\n\r\n(statearr_75290_76305[(1)] = (10));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75272 === (5))){\r\nvar inst_75240 = (state_75271[(8)]);\r\nvar inst_75247 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_75240,(0),null);\r\nvar inst_75248 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_75240,(1),null);\r\nvar inst_75249 = taoensso.sente.interfaces.sch_open_QMARK_(server_ch);\r\nvar state_75271__$1 = (function (){var statearr_75293 = state_75271;\r\n(statearr_75293[(10)] = inst_75248);\r\n\r\n(statearr_75293[(12)] = inst_75247);\r\n\r\nreturn statearr_75293;\r\n})();\r\nif(cljs.core.truth_(inst_75249)){\r\nvar statearr_75294_76306 = state_75271__$1;\r\n(statearr_75294_76306[(1)] = (8));\r\n\r\n} else {\r\nvar statearr_75295_76307 = state_75271__$1;\r\n(statearr_75295_76307[(1)] = (9));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75272 === (10))){\r\nvar inst_75263 = (state_75271[(2)]);\r\nvar state_75271__$1 = state_75271;\r\nvar statearr_75296_76308 = state_75271__$1;\r\n(statearr_75296_76308[(2)] = inst_75263);\r\n\r\n(statearr_75296_76308[(1)] = (7));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75272 === (8))){\r\nvar inst_75248 = (state_75271[(10)]);\r\nvar inst_75228 = (state_75271[(7)]);\r\nvar inst_75251 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_75248,inst_75228);\r\nvar state_75271__$1 = state_75271;\r\nif(inst_75251){\r\nvar statearr_75297_76309 = state_75271__$1;\r\n(statearr_75297_76309[(1)] = (11));\r\n\r\n} else {\r\nvar statearr_75298_76310 = state_75271__$1;\r\n(statearr_75298_76310[(1)] = (12));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreturn (function() {\r\nvar taoensso$sente$state_machine__73645__auto__ = null;\r\nvar taoensso$sente$state_machine__73645__auto____0 = (function (){\r\nvar statearr_75299 = [null,null,null,null,null,null,null,null,null,null,null,null,null];\r\n(statearr_75299[(0)] = taoensso$sente$state_machine__73645__auto__);\r\n\r\n(statearr_75299[(1)] = (1));\r\n\r\nreturn statearr_75299;\r\n});\r\nvar taoensso$sente$state_machine__73645__auto____1 = (function (state_75271){\r\nwhile(true){\r\nvar ret_value__73646__auto__ = (function (){try{while(true){\r\nvar result__73647__auto__ = switch__73644__auto__(state_75271);\r\nif(cljs.core.keyword_identical_QMARK_(result__73647__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__73647__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e75300){var ex__73648__auto__ = e75300;\r\nvar statearr_75301_76311 = state_75271;\r\n(statearr_75301_76311[(2)] = ex__73648__auto__);\r\n\r\n\r\nif(cljs.core.seq((state_75271[(4)]))){\r\nvar statearr_75302_76312 = state_75271;\r\n(statearr_75302_76312[(1)] = cljs.core.first((state_75271[(4)])));\r\n\r\n} else {\r\nthrow ex__73648__auto__;\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__73646__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__76313 = state_75271;\r\nstate_75271 = G__76313;\r\ncontinue;\r\n} else {\r\nreturn ret_value__73646__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\ntaoensso$sente$state_machine__73645__auto__ = function(state_75271){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn taoensso$sente$state_machine__73645__auto____0.call(this);\r\ncase 1:\r\nreturn taoensso$sente$state_machine__73645__auto____1.call(this,state_75271);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__73645__auto____0;\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__73645__auto____1;\r\nreturn taoensso$sente$state_machine__73645__auto__;\r\n})()\r\n})();\r\nvar state__73716__auto__ = (function (){var statearr_75303 = f__73715__auto__();\r\n(statearr_75303[(6)] = c__73714__auto__);\r\n\r\nreturn statearr_75303;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__73716__auto__);\r\n}));\r\n\r\nreturn c__73714__auto__;\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,712,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"New Ajax handshake/poll: %s (%s)\",uid,sch_uuid], null);\r\n}),null)),null,649919173);\r\nvar updated_conn = upd_conn_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid,client_id,server_ch);\r\nvar udt_open = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\r\nvar handshake_QMARK_ = (function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"init?\",\"init?\",438181499).cljs$core$IFn$_invoke$arity$1(updated_conn);\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"handshake?\",\"handshake?\",-423743093).cljs$core$IFn$_invoke$arity$1(params);\r\n}\r\n})();\r\nif(cljs.core.truth_(connect_uid_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid))){\r\nreceive_event_msg_BANG_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"uidport-open\",\"chsk/uidport-open\",1685786954),uid], null));\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(handshake_QMARK_)){\r\nreturn send_handshake_BANG_(server_ch,websocket_QMARK_);\r\n} else {\r\nvar temp__5735__auto__ = lp_timeout_ms;\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar ms = temp__5735__auto__;\r\nvar c__73714__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run((function (){\r\nvar f__73715__auto__ = (function (){var switch__73644__auto__ = (function (state_75333){\r\nvar state_val_75334 = (state_75333[(1)]);\r\nif((state_val_75334 === (1))){\r\nvar inst_75306 = cljs.core.async.timeout(ms);\r\nvar state_75333__$1 = state_75333;\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_75333__$1,(2),inst_75306);\r\n} else {\r\nif((state_val_75334 === (2))){\r\nvar inst_75313 = (state_75333[(7)]);\r\nvar inst_75308 = (state_75333[(2)]);\r\nvar inst_75309 = cljs.core.deref(conns_);\r\nvar inst_75310 = cljs.core.PersistentVector.EMPTY_NODE;\r\nvar inst_75311 = [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid,client_id];\r\nvar inst_75312 = (new cljs.core.PersistentVector(null,3,(5),inst_75310,inst_75311,null));\r\nvar inst_75313__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_75309,inst_75312);\r\nvar state_75333__$1 = (function (){var statearr_75338 = state_75333;\r\n(statearr_75338[(8)] = inst_75308);\r\n\r\n(statearr_75338[(7)] = inst_75313__$1);\r\n\r\nreturn statearr_75338;\r\n})();\r\nif(cljs.core.truth_(inst_75313__$1)){\r\nvar statearr_75339_76314 = state_75333__$1;\r\n(statearr_75339_76314[(1)] = (3));\r\n\r\n} else {\r\nvar statearr_75340_76315 = state_75333__$1;\r\n(statearr_75340_76315[(1)] = (4));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75334 === (3))){\r\nvar inst_75313 = (state_75333[(7)]);\r\nvar inst_75320 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_75313,(0),null);\r\nvar inst_75321 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_75313,(1),null);\r\nvar inst_75322 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_75321,udt_open);\r\nvar state_75333__$1 = (function (){var statearr_75342 = state_75333;\r\n(statearr_75342[(9)] = inst_75320);\r\n\r\nreturn statearr_75342;\r\n})();\r\nif(inst_75322){\r\nvar statearr_75343_76316 = state_75333__$1;\r\n(statearr_75343_76316[(1)] = (6));\r\n\r\n} else {\r\nvar statearr_75344_76317 = state_75333__$1;\r\n(statearr_75344_76317[(1)] = (7));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75334 === (4))){\r\nvar state_75333__$1 = state_75333;\r\nvar statearr_75345_76318 = state_75333__$1;\r\n(statearr_75345_76318[(2)] = null);\r\n\r\n(statearr_75345_76318[(1)] = (5));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75334 === (5))){\r\nvar inst_75331 = (state_75333[(2)]);\r\nvar state_75333__$1 = state_75333;\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_75333__$1,inst_75331);\r\n} else {\r\nif((state_val_75334 === (6))){\r\nvar inst_75324 = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489));\r\nvar inst_75325 = taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,inst_75324);\r\nvar state_75333__$1 = state_75333;\r\nvar statearr_75347_76319 = state_75333__$1;\r\n(statearr_75347_76319[(2)] = inst_75325);\r\n\r\n(statearr_75347_76319[(1)] = (8));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75334 === (7))){\r\nvar state_75333__$1 = state_75333;\r\nvar statearr_75350_76320 = state_75333__$1;\r\n(statearr_75350_76320[(2)] = null);\r\n\r\n(statearr_75350_76320[(1)] = (8));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75334 === (8))){\r\nvar inst_75328 = (state_75333[(2)]);\r\nvar state_75333__$1 = state_75333;\r\nvar statearr_75352_76321 = state_75333__$1;\r\n(statearr_75352_76321[(2)] = inst_75328);\r\n\r\n(statearr_75352_76321[(1)] = (5));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreturn (function() {\r\nvar taoensso$sente$state_machine__73645__auto__ = null;\r\nvar taoensso$sente$state_machine__73645__auto____0 = (function (){\r\nvar statearr_75353 = [null,null,null,null,null,null,null,null,null,null];\r\n(statearr_75353[(0)] = taoensso$sente$state_machine__73645__auto__);\r\n\r\n(statearr_75353[(1)] = (1));\r\n\r\nreturn statearr_75353;\r\n});\r\nvar taoensso$sente$state_machine__73645__auto____1 = (function (state_75333){\r\nwhile(true){\r\nvar ret_value__73646__auto__ = (function (){try{while(true){\r\nvar result__73647__auto__ = switch__73644__auto__(state_75333);\r\nif(cljs.core.keyword_identical_QMARK_(result__73647__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__73647__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e75354){var ex__73648__auto__ = e75354;\r\nvar statearr_75355_76322 = state_75333;\r\n(statearr_75355_76322[(2)] = ex__73648__auto__);\r\n\r\n\r\nif(cljs.core.seq((state_75333[(4)]))){\r\nvar statearr_75356_76323 = state_75333;\r\n(statearr_75356_76323[(1)] = cljs.core.first((state_75333[(4)])));\r\n\r\n} else {\r\nthrow ex__73648__auto__;\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__73646__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__76324 = state_75333;\r\nstate_75333 = G__76324;\r\ncontinue;\r\n} else {\r\nreturn ret_value__73646__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\ntaoensso$sente$state_machine__73645__auto__ = function(state_75333){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn taoensso$sente$state_machine__73645__auto____0.call(this);\r\ncase 1:\r\nreturn taoensso$sente$state_machine__73645__auto____1.call(this,state_75333);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__73645__auto____0;\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__73645__auto____1;\r\nreturn taoensso$sente$state_machine__73645__auto__;\r\n})()\r\n})();\r\nvar state__73716__auto__ = (function (){var statearr_75357 = f__73715__auto__();\r\n(statearr_75357[(6)] = c__73714__auto__);\r\n\r\nreturn statearr_75357;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__73716__auto__);\r\n}));\r\n\r\nreturn c__73714__auto__;\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}),new cljs.core.Keyword(null,\"on-msg\",\"on-msg\",-2021925279),(function (server_ch,websocket_QMARK_,req_ppstr){\r\nif(cljs.core.truth_(websocket_QMARK_)){\r\n} else {\r\nthrow (new Error(\"Assert failed: websocket?\"));\r\n}\r\n\r\nupd_conn_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id);\r\n\r\nvar vec__75360 = taoensso.sente.unpack(packer__$1,req_ppstr);\r\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75360,(0),null);\r\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75360,(1),null);\r\nreturn receive_event_msg_BANG_(clj,(cljs.core.truth_(_QMARK_cb_uuid)?(function taoensso$sente$reply_fn(resp_clj){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,742,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send (ws reply): %s\",resp_clj], null);\r\n}),null)),null,-940062435);\r\n\r\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(packer__$1,resp_clj,_QMARK_cb_uuid));\r\n}):null));\r\n}),new cljs.core.Keyword(null,\"on-close\",\"on-close\",-761178394),(function (server_ch,websocket_QMARK_,_status){\r\nvar conn_type = (cljs.core.truth_(websocket_QMARK_)?new cljs.core.Keyword(null,\"ws\",\"ws\",86841443):new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\r\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,751,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"%s channel closed: %s (%s)\",(cljs.core.truth_(websocket_QMARK_)?\"WebSocket\":\"Ajax\"),uid,sch_uuid], null);\r\n}),null)),null,-1738650998);\r\nvar updated_conn = upd_conn_BANG_(conn_type,uid,client_id,null);\r\nvar udt_close = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\r\nvar c__73714__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run((function (){\r\nvar f__73715__auto__ = (function (){var switch__73644__auto__ = (function (state_75418){\r\nvar state_val_75419 = (state_75418[(1)]);\r\nif((state_val_75419 === (7))){\r\nvar state_75418__$1 = state_75418;\r\nvar statearr_75420_76325 = state_75418__$1;\r\n(statearr_75420_76325[(2)] = null);\r\n\r\n(statearr_75420_76325[(1)] = (8));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75419 === (1))){\r\nvar inst_75366 = cljs.core.async.timeout((5000));\r\nvar state_75418__$1 = state_75418;\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_75418__$1,(2),inst_75366);\r\n} else {\r\nif((state_val_75419 === (4))){\r\nvar state_75418__$1 = state_75418;\r\nvar statearr_75421_76326 = state_75418__$1;\r\n(statearr_75421_76326[(2)] = null);\r\n\r\n(statearr_75421_76326[(1)] = (5));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75419 === (13))){\r\nvar state_75418__$1 = state_75418;\r\nvar statearr_75422_76327 = state_75418__$1;\r\n(statearr_75422_76327[(2)] = null);\r\n\r\n(statearr_75422_76327[(1)] = (14));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75419 === (6))){\r\nvar inst_75378 = (state_75418[(7)]);\r\nvar inst_75376 = (state_75418[(8)]);\r\nvar inst_75395 = (state_75418[(9)]);\r\nvar inst_75377 = (state_75418[(10)]);\r\nvar inst_75389 = cljs.core.PersistentVector.EMPTY_NODE;\r\nvar inst_75390 = [conn_type,uid,client_id];\r\nvar inst_75391 = (new cljs.core.PersistentVector(null,3,(5),inst_75389,inst_75390,null));\r\nvar inst_75394 = (function (){var vec__75369 = inst_75376;\r\nvar __QMARK_sch = inst_75377;\r\nvar udt_t1 = inst_75378;\r\nreturn (function (p__75393){\r\nvar vec__75423 = p__75393;\r\nvar _sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75423,(0),null);\r\nvar udt_t1__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75423,(1),null);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(udt_t1__$1,udt_close)){\r\nreturn taoensso.encore.swapped(new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782),true);\r\n} else {\r\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_sch,udt_t1__$1], null),false);\r\n}\r\n});\r\n})();\r\nvar inst_75395__$1 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_75391,inst_75394);\r\nvar state_75418__$1 = (function (){var statearr_75426 = state_75418;\r\n(statearr_75426[(9)] = inst_75395__$1);\r\n\r\nreturn statearr_75426;\r\n})();\r\nif(cljs.core.truth_(inst_75395__$1)){\r\nvar statearr_75427_76328 = state_75418__$1;\r\n(statearr_75427_76328[(1)] = (9));\r\n\r\n} else {\r\nvar statearr_75428_76329 = state_75418__$1;\r\n(statearr_75428_76329[(1)] = (10));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75419 === (3))){\r\nvar inst_75378 = (state_75418[(7)]);\r\nvar inst_75376 = (state_75418[(8)]);\r\nvar inst_75377 = (state_75418[(10)]);\r\nvar inst_75381 = (function (){var vec__75369 = inst_75376;\r\nvar __QMARK_sch = inst_75377;\r\nvar udt_t1 = inst_75378;\r\nreturn (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"close-timeout: %s %s %s %s\",conn_type,uid,sch_uuid,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(udt_t1,udt_close),udt_t1,udt_close], null)], null);\r\n});\r\n})();\r\nvar inst_75382 = (new cljs.core.Delay(inst_75381,null));\r\nvar inst_75383 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,765,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_75382,null,-1554140001);\r\nvar state_75418__$1 = state_75418;\r\nvar statearr_75429_76330 = state_75418__$1;\r\n(statearr_75429_76330[(2)] = inst_75383);\r\n\r\n(statearr_75429_76330[(1)] = (5));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75419 === (12))){\r\nvar inst_75404 = cljs.core.PersistentVector.EMPTY_NODE;\r\nvar inst_75405 = [new cljs.core.Keyword(\"chsk\",\"uidport-close\",\"chsk/uidport-close\",901058678),uid];\r\nvar inst_75406 = (new cljs.core.PersistentVector(null,2,(5),inst_75404,inst_75405,null));\r\nvar inst_75407 = receive_event_msg_BANG_(inst_75406);\r\nvar state_75418__$1 = state_75418;\r\nvar statearr_75430_76331 = state_75418__$1;\r\n(statearr_75430_76331[(2)] = inst_75407);\r\n\r\n(statearr_75430_76331[(1)] = (14));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75419 === (2))){\r\nvar inst_75376 = (state_75418[(8)]);\r\nvar inst_75368 = (state_75418[(2)]);\r\nvar inst_75372 = cljs.core.deref(conns_);\r\nvar inst_75373 = cljs.core.PersistentVector.EMPTY_NODE;\r\nvar inst_75374 = [conn_type,uid,client_id];\r\nvar inst_75375 = (new cljs.core.PersistentVector(null,3,(5),inst_75373,inst_75374,null));\r\nvar inst_75376__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_75372,inst_75375);\r\nvar inst_75377 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_75376__$1,(0),null);\r\nvar inst_75378 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_75376__$1,(1),null);\r\nvar inst_75379 = cljs.core.deref(taoensso.sente.debug_mode_QMARK__);\r\nvar state_75418__$1 = (function (){var statearr_75431 = state_75418;\r\n(statearr_75431[(7)] = inst_75378);\r\n\r\n(statearr_75431[(8)] = inst_75376__$1);\r\n\r\n(statearr_75431[(11)] = inst_75368);\r\n\r\n(statearr_75431[(10)] = inst_75377);\r\n\r\nreturn statearr_75431;\r\n})();\r\nif(cljs.core.truth_(inst_75379)){\r\nvar statearr_75432_76332 = state_75418__$1;\r\n(statearr_75432_76332[(1)] = (3));\r\n\r\n} else {\r\nvar statearr_75434_76333 = state_75418__$1;\r\n(statearr_75434_76333[(1)] = (4));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75419 === (11))){\r\nvar inst_75413 = (state_75418[(2)]);\r\nvar state_75418__$1 = state_75418;\r\nvar statearr_75435_76334 = state_75418__$1;\r\n(statearr_75435_76334[(2)] = inst_75413);\r\n\r\n(statearr_75435_76334[(1)] = (8));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75419 === (9))){\r\nvar inst_75378 = (state_75418[(7)]);\r\nvar inst_75376 = (state_75418[(8)]);\r\nvar inst_75395 = (state_75418[(9)]);\r\nvar inst_75377 = (state_75418[(10)]);\r\nvar inst_75397 = cljs.core.PersistentVector.EMPTY_NODE;\r\nvar inst_75398 = [conn_type,uid];\r\nvar inst_75399 = (new cljs.core.PersistentVector(null,2,(5),inst_75397,inst_75398,null));\r\nvar inst_75400 = (function (){var vec__75369 = inst_75376;\r\nvar __QMARK_sch = inst_75377;\r\nvar udt_t1 = inst_75378;\r\nvar disconnect_QMARK_ = inst_75395;\r\nreturn (function (_QMARK_m){\r\nif(cljs.core.empty_QMARK_(_QMARK_m)){\r\nreturn new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782);\r\n} else {\r\nreturn _QMARK_m;\r\n}\r\n});\r\n})();\r\nvar inst_75401 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_75399,inst_75400);\r\nvar inst_75402 = upd_connected_uid_BANG_(uid);\r\nvar state_75418__$1 = (function (){var statearr_75436 = state_75418;\r\n(statearr_75436[(12)] = inst_75401);\r\n\r\nreturn statearr_75436;\r\n})();\r\nif(cljs.core.truth_(inst_75402)){\r\nvar statearr_75437_76335 = state_75418__$1;\r\n(statearr_75437_76335[(1)] = (12));\r\n\r\n} else {\r\nvar statearr_75438_76336 = state_75418__$1;\r\n(statearr_75438_76336[(1)] = (13));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75419 === (5))){\r\nvar inst_75378 = (state_75418[(7)]);\r\nvar inst_75386 = (state_75418[(2)]);\r\nvar inst_75387 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_75378,udt_close);\r\nvar state_75418__$1 = (function (){var statearr_75439 = state_75418;\r\n(statearr_75439[(13)] = inst_75386);\r\n\r\nreturn statearr_75439;\r\n})();\r\nif(inst_75387){\r\nvar statearr_75440_76337 = state_75418__$1;\r\n(statearr_75440_76337[(1)] = (6));\r\n\r\n} else {\r\nvar statearr_75441_76338 = state_75418__$1;\r\n(statearr_75441_76338[(1)] = (7));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75419 === (14))){\r\nvar inst_75410 = (state_75418[(2)]);\r\nvar state_75418__$1 = state_75418;\r\nvar statearr_75442_76339 = state_75418__$1;\r\n(statearr_75442_76339[(2)] = inst_75410);\r\n\r\n(statearr_75442_76339[(1)] = (11));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75419 === (10))){\r\nvar state_75418__$1 = state_75418;\r\nvar statearr_75443_76340 = state_75418__$1;\r\n(statearr_75443_76340[(2)] = null);\r\n\r\n(statearr_75443_76340[(1)] = (11));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75419 === (8))){\r\nvar inst_75416 = (state_75418[(2)]);\r\nvar state_75418__$1 = state_75418;\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_75418__$1,inst_75416);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreturn (function() {\r\nvar taoensso$sente$state_machine__73645__auto__ = null;\r\nvar taoensso$sente$state_machine__73645__auto____0 = (function (){\r\nvar statearr_75444 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null];\r\n(statearr_75444[(0)] = taoensso$sente$state_machine__73645__auto__);\r\n\r\n(statearr_75444[(1)] = (1));\r\n\r\nreturn statearr_75444;\r\n});\r\nvar taoensso$sente$state_machine__73645__auto____1 = (function (state_75418){\r\nwhile(true){\r\nvar ret_value__73646__auto__ = (function (){try{while(true){\r\nvar result__73647__auto__ = switch__73644__auto__(state_75418);\r\nif(cljs.core.keyword_identical_QMARK_(result__73647__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__73647__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e75445){var ex__73648__auto__ = e75445;\r\nvar statearr_75446_76341 = state_75418;\r\n(statearr_75446_76341[(2)] = ex__73648__auto__);\r\n\r\n\r\nif(cljs.core.seq((state_75418[(4)]))){\r\nvar statearr_75448_76342 = state_75418;\r\n(statearr_75448_76342[(1)] = cljs.core.first((state_75418[(4)])));\r\n\r\n} else {\r\nthrow ex__73648__auto__;\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__73646__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__76343 = state_75418;\r\nstate_75418 = G__76343;\r\ncontinue;\r\n} else {\r\nreturn ret_value__73646__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\ntaoensso$sente$state_machine__73645__auto__ = function(state_75418){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn taoensso$sente$state_machine__73645__auto____0.call(this);\r\ncase 1:\r\nreturn taoensso$sente$state_machine__73645__auto____1.call(this,state_75418);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__73645__auto____0;\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__73645__auto____1;\r\nreturn taoensso$sente$state_machine__73645__auto__;\r\n})()\r\n})();\r\nvar state__73716__auto__ = (function (){var statearr_75452 = f__73715__auto__();\r\n(statearr_75452[(6)] = c__73714__auto__);\r\n\r\nreturn statearr_75452;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__73716__auto__);\r\n}));\r\n\r\nreturn c__73714__auto__;\r\n}),new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),(function (server_ch,websocket_QMARK_,error){\r\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,787,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"ring-req->server-ch-resp error: %s (%s)\",error,uid,sch_uuid], null);\r\n}),null)),null,1768703298);\r\n})], null));\r\n}\r\n}\r\n})], null);\r\n}));\r\n\r\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$applyTo = (function (seq75032){\r\nvar G__75033 = cljs.core.first(seq75032);\r\nvar seq75032__$1 = cljs.core.next(seq75032);\r\nvar self__4723__auto__ = this;\r\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__75033,seq75032__$1);\r\n}));\r\n\r\n/**\r\n * Actually pushes buffered events (as packed-str) to all uid's WebSocket conns.\r\n */\r\ntaoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_ = (function taoensso$sente$send_buffered_server_evs_GT_ws_clients_BANG_(conns_,uid,buffered_evs_pstr,upd_conn_BANG_){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,793,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-buffered-server-evs>ws-clients!: %s\",buffered_evs_pstr], null);\r\n}),null)),null,351292004);\r\n\r\nvar seq__75455 = cljs.core.seq(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid], null)));\r\nvar chunk__75456 = null;\r\nvar count__75457 = (0);\r\nvar i__75458 = (0);\r\nwhile(true){\r\nif((i__75458 < count__75457)){\r\nvar vec__75473 = chunk__75456.cljs$core$IIndexed$_nth$arity$2(null,i__75458);\r\nvar client_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75473,(0),null);\r\nvar vec__75476 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75473,(1),null);\r\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75476,(0),null);\r\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75476,(1),null);\r\nvar temp__5735__auto___76346 = _QMARK_sch;\r\nif(cljs.core.truth_(temp__5735__auto___76346)){\r\nvar sch_76347 = temp__5735__auto___76346;\r\n(upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3 ? upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id) : upd_conn_BANG_.call(null,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id));\r\n\r\ntaoensso.sente.interfaces.sch_send_BANG_(sch_76347,new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101),buffered_evs_pstr);\r\n} else {\r\n}\r\n\r\n\r\nvar G__76348 = seq__75455;\r\nvar G__76349 = chunk__75456;\r\nvar G__76350 = count__75457;\r\nvar G__76351 = (i__75458 + (1));\r\nseq__75455 = G__76348;\r\nchunk__75456 = G__76349;\r\ncount__75457 = G__76350;\r\ni__75458 = G__76351;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto__ = cljs.core.seq(seq__75455);\r\nif(temp__5735__auto__){\r\nvar seq__75455__$1 = temp__5735__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__75455__$1)){\r\nvar c__4556__auto__ = cljs.core.chunk_first(seq__75455__$1);\r\nvar G__76353 = cljs.core.chunk_rest(seq__75455__$1);\r\nvar G__76354 = c__4556__auto__;\r\nvar G__76355 = cljs.core.count(c__4556__auto__);\r\nvar G__76356 = (0);\r\nseq__75455 = G__76353;\r\nchunk__75456 = G__76354;\r\ncount__75457 = G__76355;\r\ni__75458 = G__76356;\r\ncontinue;\r\n} else {\r\nvar vec__75482 = cljs.core.first(seq__75455__$1);\r\nvar client_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75482,(0),null);\r\nvar vec__75485 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75482,(1),null);\r\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75485,(0),null);\r\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75485,(1),null);\r\nvar temp__5735__auto___76359__$1 = _QMARK_sch;\r\nif(cljs.core.truth_(temp__5735__auto___76359__$1)){\r\nvar sch_76360 = temp__5735__auto___76359__$1;\r\n(upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3 ? upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id) : upd_conn_BANG_.call(null,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id));\r\n\r\ntaoensso.sente.interfaces.sch_send_BANG_(sch_76360,new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101),buffered_evs_pstr);\r\n} else {\r\n}\r\n\r\n\r\nvar G__76361 = cljs.core.next(seq__75455__$1);\r\nvar G__76362 = null;\r\nvar G__76363 = (0);\r\nvar G__76364 = (0);\r\nseq__75455 = G__76361;\r\nchunk__75456 = G__76362;\r\ncount__75457 = G__76363;\r\ni__75458 = G__76364;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\r\n *   Allows some time for possible Ajax poller reconnects.\r\n */\r\ntaoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_ = (function taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG_(conns_,uid,buffered_evs_pstr){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,803,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-buffered-server-evs>ajax-clients!: %s\",buffered_evs_pstr], null);\r\n}),null)),null,-993432510);\r\n\r\nvar ms_backoffs = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(90),(180),(360),(720),(1440)], null);\r\nvar client_ids_unsatisfied = cljs.core.keys(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid], null)));\r\nif(cljs.core.empty_QMARK_(client_ids_unsatisfied)){\r\nreturn null;\r\n} else {\r\nvar c__73714__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run((function (){\r\nvar f__73715__auto__ = (function (){var switch__73644__auto__ = (function (state_75541){\r\nvar state_val_75542 = (state_75541[(1)]);\r\nif((state_val_75542 === (7))){\r\nvar inst_75499 = (state_75541[(7)]);\r\nvar inst_75492 = (state_75541[(8)]);\r\nvar inst_75493 = (state_75541[(9)]);\r\nvar inst_75512 = (function (){var n = inst_75492;\r\nvar client_ids_satisfied = inst_75493;\r\nvar _QMARK_pulled = inst_75499;\r\nreturn (function (s,client_id,p__75511){\r\nvar vec__75544 = p__75511;\r\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75544,(0),null);\r\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75544,(1),null);\r\nvar sent_QMARK_ = (function (){var temp__5735__auto__ = _QMARK_sch;\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar sch = temp__5735__auto__;\r\nreturn taoensso.sente.interfaces.sch_send_BANG_(_QMARK_sch,cljs.core.not(new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101)),buffered_evs_pstr);\r\n} else {\r\nreturn null;\r\n}\r\n})();\r\nif(cljs.core.truth_(sent_QMARK_)){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,client_id);\r\n} else {\r\nreturn s;\r\n}\r\n});\r\n})();\r\nvar inst_75513 = cljs.core.PersistentHashSet.EMPTY;\r\nvar inst_75514 = cljs.core.reduce_kv(inst_75512,inst_75513,inst_75499);\r\nvar state_75541__$1 = state_75541;\r\nvar statearr_75549_76368 = state_75541__$1;\r\n(statearr_75549_76368[(2)] = inst_75514);\r\n\r\n(statearr_75549_76368[(1)] = (9));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75542 === (1))){\r\nvar inst_75491 = cljs.core.PersistentHashSet.EMPTY;\r\nvar inst_75492 = (0);\r\nvar inst_75493 = inst_75491;\r\nvar state_75541__$1 = (function (){var statearr_75550 = state_75541;\r\n(statearr_75550[(8)] = inst_75492);\r\n\r\n(statearr_75550[(9)] = inst_75493);\r\n\r\nreturn statearr_75550;\r\n})();\r\nvar statearr_75551_76371 = state_75541__$1;\r\n(statearr_75551_76371[(2)] = null);\r\n\r\n(statearr_75551_76371[(1)] = (2));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75542 === (4))){\r\nvar state_75541__$1 = state_75541;\r\nvar statearr_75552_76372 = state_75541__$1;\r\n(statearr_75552_76372[(2)] = true);\r\n\r\n(statearr_75552_76372[(1)] = (6));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75542 === (15))){\r\nvar inst_75533 = (state_75541[(2)]);\r\nvar state_75541__$1 = state_75541;\r\nvar statearr_75553_76373 = state_75541__$1;\r\n(statearr_75553_76373[(2)] = inst_75533);\r\n\r\n(statearr_75553_76373[(1)] = (12));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75542 === (13))){\r\nvar inst_75519 = (state_75541[(10)]);\r\nvar inst_75524 = cljs.core.rand_int(inst_75519);\r\nvar inst_75525 = (inst_75519 + inst_75524);\r\nvar inst_75526 = cljs.core.async.timeout(inst_75525);\r\nvar state_75541__$1 = state_75541;\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_75541__$1,(16),inst_75526);\r\n} else {\r\nif((state_val_75542 === (6))){\r\nvar inst_75499 = (state_75541[(7)]);\r\nvar inst_75509 = (state_75541[(2)]);\r\nvar state_75541__$1 = (function (){var statearr_75554 = state_75541;\r\n(statearr_75554[(11)] = inst_75509);\r\n\r\nreturn statearr_75554;\r\n})();\r\nif(cljs.core.truth_(inst_75499)){\r\nvar statearr_75555_76374 = state_75541__$1;\r\n(statearr_75555_76374[(1)] = (7));\r\n\r\n} else {\r\nvar statearr_75556_76375 = state_75541__$1;\r\n(statearr_75556_76375[(1)] = (8));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75542 === (3))){\r\nvar inst_75538 = (state_75541[(2)]);\r\nvar state_75541__$1 = state_75541;\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_75541__$1,inst_75538);\r\n} else {\r\nif((state_val_75542 === (12))){\r\nvar inst_75536 = (state_75541[(2)]);\r\nvar state_75541__$1 = state_75541;\r\nvar statearr_75557_76376 = state_75541__$1;\r\n(statearr_75557_76376[(2)] = inst_75536);\r\n\r\n(statearr_75557_76376[(1)] = (3));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75542 === (2))){\r\nvar inst_75499 = (state_75541[(7)]);\r\nvar inst_75492 = (state_75541[(8)]);\r\nvar inst_75493 = (state_75541[(9)]);\r\nvar inst_75495 = cljs.core.PersistentVector.EMPTY_NODE;\r\nvar inst_75496 = [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid];\r\nvar inst_75497 = (new cljs.core.PersistentVector(null,2,(5),inst_75495,inst_75496,null));\r\nvar inst_75498 = (function (){var n = inst_75492;\r\nvar client_ids_satisfied = inst_75493;\r\nreturn (function (m){\r\nvar ks_to_pull = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(client_ids_satisfied,cljs.core.keys(m));\r\nif(cljs.core.empty_QMARK_(ks_to_pull)){\r\nreturn taoensso.encore.swapped(m,null);\r\n} else {\r\nreturn taoensso.encore.swapped(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m__$1,k){\r\nvar vec__75558 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1,k);\r\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75558,(0),null);\r\nvar udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75558,(1),null);\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,udt], null));\r\n}),m,ks_to_pull),cljs.core.select_keys(m,ks_to_pull));\r\n}\r\n});\r\n})();\r\nvar inst_75499__$1 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_75497,inst_75498);\r\nvar inst_75502 = (function (){var n = inst_75492;\r\nvar client_ids_satisfied = inst_75493;\r\nvar _QMARK_pulled = inst_75499__$1;\r\nreturn (function (x){\r\nvar or__4126__auto__ = (x == null);\r\nif(or__4126__auto__){\r\nreturn or__4126__auto__;\r\n} else {\r\nreturn taoensso.truss.impl.non_throwing(cljs.core.map_QMARK_)(x);\r\n}\r\n});\r\n})();\r\nvar inst_75503 = inst_75502(inst_75499__$1);\r\nvar state_75541__$1 = (function (){var statearr_75564 = state_75541;\r\n(statearr_75564[(7)] = inst_75499__$1);\r\n\r\nreturn statearr_75564;\r\n})();\r\nif(cljs.core.truth_(inst_75503)){\r\nvar statearr_75565_76378 = state_75541__$1;\r\n(statearr_75565_76378[(1)] = (4));\r\n\r\n} else {\r\nvar statearr_75566_76379 = state_75541__$1;\r\n(statearr_75566_76379[(1)] = (5));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75542 === (11))){\r\nvar state_75541__$1 = state_75541;\r\nvar statearr_75567_76380 = state_75541__$1;\r\n(statearr_75567_76380[(2)] = null);\r\n\r\n(statearr_75567_76380[(1)] = (12));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75542 === (9))){\r\nvar inst_75519 = (state_75541[(10)]);\r\nvar inst_75492 = (state_75541[(8)]);\r\nvar inst_75493 = (state_75541[(9)]);\r\nvar inst_75517 = (state_75541[(2)]);\r\nvar inst_75518 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(inst_75493,inst_75517);\r\nvar inst_75519__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ms_backoffs,inst_75492);\r\nvar state_75541__$1 = (function (){var statearr_75571 = state_75541;\r\n(statearr_75571[(10)] = inst_75519__$1);\r\n\r\n(statearr_75571[(12)] = inst_75518);\r\n\r\nreturn statearr_75571;\r\n})();\r\nif(cljs.core.truth_(inst_75519__$1)){\r\nvar statearr_75572_76381 = state_75541__$1;\r\n(statearr_75572_76381[(1)] = (10));\r\n\r\n} else {\r\nvar statearr_75574_76382 = state_75541__$1;\r\n(statearr_75574_76382[(1)] = (11));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75542 === (5))){\r\nvar inst_75499 = (state_75541[(7)]);\r\nvar inst_75507 = taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",830,\"([:or nil? map?] ?pulled)\",inst_75499,null,null);\r\nvar state_75541__$1 = state_75541;\r\nvar statearr_75575_76384 = state_75541__$1;\r\n(statearr_75575_76384[(2)] = inst_75507);\r\n\r\n(statearr_75575_76384[(1)] = (6));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75542 === (14))){\r\nvar state_75541__$1 = state_75541;\r\nvar statearr_75576_76388 = state_75541__$1;\r\n(statearr_75576_76388[(2)] = null);\r\n\r\n(statearr_75576_76388[(1)] = (15));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75542 === (16))){\r\nvar inst_75518 = (state_75541[(12)]);\r\nvar inst_75492 = (state_75541[(8)]);\r\nvar inst_75528 = (state_75541[(2)]);\r\nvar inst_75529 = (inst_75492 + (1));\r\nvar inst_75492__$1 = inst_75529;\r\nvar inst_75493 = inst_75518;\r\nvar state_75541__$1 = (function (){var statearr_75577 = state_75541;\r\n(statearr_75577[(13)] = inst_75528);\r\n\r\n(statearr_75577[(8)] = inst_75492__$1);\r\n\r\n(statearr_75577[(9)] = inst_75493);\r\n\r\nreturn statearr_75577;\r\n})();\r\nvar statearr_75578_76389 = state_75541__$1;\r\n(statearr_75578_76389[(2)] = null);\r\n\r\n(statearr_75578_76389[(1)] = (2));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75542 === (10))){\r\nvar inst_75518 = (state_75541[(12)]);\r\nvar inst_75521 = cljs.core.complement(inst_75518);\r\nvar inst_75522 = taoensso.encore.rsome(inst_75521,client_ids_unsatisfied);\r\nvar state_75541__$1 = state_75541;\r\nif(cljs.core.truth_(inst_75522)){\r\nvar statearr_75580_76390 = state_75541__$1;\r\n(statearr_75580_76390[(1)] = (13));\r\n\r\n} else {\r\nvar statearr_75581_76391 = state_75541__$1;\r\n(statearr_75581_76391[(1)] = (14));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75542 === (8))){\r\nvar state_75541__$1 = state_75541;\r\nvar statearr_75582_76392 = state_75541__$1;\r\n(statearr_75582_76392[(2)] = null);\r\n\r\n(statearr_75582_76392[(1)] = (9));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreturn (function() {\r\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__73645__auto__ = null;\r\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__73645__auto____0 = (function (){\r\nvar statearr_75583 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null];\r\n(statearr_75583[(0)] = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__73645__auto__);\r\n\r\n(statearr_75583[(1)] = (1));\r\n\r\nreturn statearr_75583;\r\n});\r\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__73645__auto____1 = (function (state_75541){\r\nwhile(true){\r\nvar ret_value__73646__auto__ = (function (){try{while(true){\r\nvar result__73647__auto__ = switch__73644__auto__(state_75541);\r\nif(cljs.core.keyword_identical_QMARK_(result__73647__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__73647__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e75584){var ex__73648__auto__ = e75584;\r\nvar statearr_75585_76394 = state_75541;\r\n(statearr_75585_76394[(2)] = ex__73648__auto__);\r\n\r\n\r\nif(cljs.core.seq((state_75541[(4)]))){\r\nvar statearr_75587_76395 = state_75541;\r\n(statearr_75587_76395[(1)] = cljs.core.first((state_75541[(4)])));\r\n\r\n} else {\r\nthrow ex__73648__auto__;\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__73646__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__76396 = state_75541;\r\nstate_75541 = G__76396;\r\ncontinue;\r\n} else {\r\nreturn ret_value__73646__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__73645__auto__ = function(state_75541){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__73645__auto____0.call(this);\r\ncase 1:\r\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__73645__auto____1.call(this,state_75541);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__73645__auto____0;\r\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__73645__auto____1;\r\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__73645__auto__;\r\n})()\r\n})();\r\nvar state__73716__auto__ = (function (){var statearr_75588 = f__73715__auto__();\r\n(statearr_75588[(6)] = c__73714__auto__);\r\n\r\nreturn statearr_75588;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__73716__auto__);\r\n}));\r\n\r\nreturn c__73714__auto__;\r\n}\r\n});\r\n/**\r\n * Alias of `taoensso.encore/ajax-lite`\r\n */\r\ntaoensso.sente.ajax_lite = taoensso.encore.ajax_lite;\r\n\r\n/**\r\n * @interface\r\n */\r\ntaoensso.sente.IChSocket = function(){};\r\n\r\nvar taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn_76397 = (function (chsk){\r\nvar x__4428__auto__ = (((chsk == null))?null:chsk);\r\nvar m__4429__auto__ = (taoensso.sente._chsk_connect_BANG_[goog.typeOf(x__4428__auto__)]);\r\nif((!((m__4429__auto__ == null)))){\r\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4429__auto__.call(null,chsk));\r\n} else {\r\nvar m__4426__auto__ = (taoensso.sente._chsk_connect_BANG_[\"_\"]);\r\nif((!((m__4426__auto__ == null)))){\r\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4426__auto__.call(null,chsk));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-connect!\",chsk);\r\n}\r\n}\r\n});\r\ntaoensso.sente._chsk_connect_BANG_ = (function taoensso$sente$_chsk_connect_BANG_(chsk){\r\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 == null)))))){\r\nreturn chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(chsk);\r\n} else {\r\nreturn taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn_76397(chsk);\r\n}\r\n});\r\n\r\nvar taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn_76401 = (function (chsk,reason){\r\nvar x__4428__auto__ = (((chsk == null))?null:chsk);\r\nvar m__4429__auto__ = (taoensso.sente._chsk_disconnect_BANG_[goog.typeOf(x__4428__auto__)]);\r\nif((!((m__4429__auto__ == null)))){\r\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(chsk,reason) : m__4429__auto__.call(null,chsk,reason));\r\n} else {\r\nvar m__4426__auto__ = (taoensso.sente._chsk_disconnect_BANG_[\"_\"]);\r\nif((!((m__4426__auto__ == null)))){\r\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(chsk,reason) : m__4426__auto__.call(null,chsk,reason));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-disconnect!\",chsk);\r\n}\r\n}\r\n});\r\ntaoensso.sente._chsk_disconnect_BANG_ = (function taoensso$sente$_chsk_disconnect_BANG_(chsk,reason){\r\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 == null)))))){\r\nreturn chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(chsk,reason);\r\n} else {\r\nreturn taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn_76401(chsk,reason);\r\n}\r\n});\r\n\r\nvar taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn_76402 = (function (chsk){\r\nvar x__4428__auto__ = (((chsk == null))?null:chsk);\r\nvar m__4429__auto__ = (taoensso.sente._chsk_reconnect_BANG_[goog.typeOf(x__4428__auto__)]);\r\nif((!((m__4429__auto__ == null)))){\r\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4429__auto__.call(null,chsk));\r\n} else {\r\nvar m__4426__auto__ = (taoensso.sente._chsk_reconnect_BANG_[\"_\"]);\r\nif((!((m__4426__auto__ == null)))){\r\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4426__auto__.call(null,chsk));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-reconnect!\",chsk);\r\n}\r\n}\r\n});\r\ntaoensso.sente._chsk_reconnect_BANG_ = (function taoensso$sente$_chsk_reconnect_BANG_(chsk){\r\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 == null)))))){\r\nreturn chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1(chsk);\r\n} else {\r\nreturn taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn_76402(chsk);\r\n}\r\n});\r\n\r\nvar taoensso$sente$IChSocket$_chsk_send_BANG_$dyn_76411 = (function (chsk,ev,opts){\r\nvar x__4428__auto__ = (((chsk == null))?null:chsk);\r\nvar m__4429__auto__ = (taoensso.sente._chsk_send_BANG_[goog.typeOf(x__4428__auto__)]);\r\nif((!((m__4429__auto__ == null)))){\r\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(chsk,ev,opts) : m__4429__auto__.call(null,chsk,ev,opts));\r\n} else {\r\nvar m__4426__auto__ = (taoensso.sente._chsk_send_BANG_[\"_\"]);\r\nif((!((m__4426__auto__ == null)))){\r\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(chsk,ev,opts) : m__4426__auto__.call(null,chsk,ev,opts));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-send!\",chsk);\r\n}\r\n}\r\n});\r\ntaoensso.sente._chsk_send_BANG_ = (function taoensso$sente$_chsk_send_BANG_(chsk,ev,opts){\r\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 == null)))))){\r\nreturn chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(chsk,ev,opts);\r\n} else {\r\nreturn taoensso$sente$IChSocket$_chsk_send_BANG_$dyn_76411(chsk,ev,opts);\r\n}\r\n});\r\n\r\ntaoensso.sente.chsk_connect_BANG_ = (function taoensso$sente$chsk_connect_BANG_(chsk){\r\nreturn taoensso.sente._chsk_connect_BANG_(chsk);\r\n});\r\ntaoensso.sente.chsk_disconnect_BANG_ = (function taoensso$sente$chsk_disconnect_BANG_(chsk){\r\nreturn taoensso.sente._chsk_disconnect_BANG_(chsk,new cljs.core.Keyword(null,\"requested-disconnect\",\"requested-disconnect\",1037120641));\r\n});\r\n/**\r\n * Useful for reauthenticating after login/logout, etc.\r\n */\r\ntaoensso.sente.chsk_reconnect_BANG_ = (function taoensso$sente$chsk_reconnect_BANG_(chsk){\r\nreturn taoensso.sente._chsk_reconnect_BANG_(chsk);\r\n});\r\n/**\r\n * Deprecated\r\n */\r\ntaoensso.sente.chsk_destroy_BANG_ = taoensso.sente.chsk_disconnect_BANG_;\r\n/**\r\n * Sends `[ev-id ev-?data :as event]`, returns true on apparent success.\r\n */\r\ntaoensso.sente.chsk_send_BANG_ = (function taoensso$sente$chsk_send_BANG_(var_args){\r\nvar G__75633 = arguments.length;\r\nswitch (G__75633) {\r\ncase 2:\r\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (chsk,ev){\r\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(chsk,ev,cljs.core.PersistentArrayMap.EMPTY);\r\n}));\r\n\r\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4 = (function (chsk,ev,_QMARK_timeout_ms,_QMARK_cb){\r\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(chsk,ev,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),_QMARK_timeout_ms,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841),_QMARK_cb], null));\r\n}));\r\n\r\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (chsk,ev,opts){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,877,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send: (%s) %s\",cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841),cljs.core.boolean$(new cljs.core.Keyword(null,\"cb\",\"cb\",589947841).cljs$core$IFn$_invoke$arity$1(opts))),ev], null);\r\n}),null)),null,1352520438);\r\n\r\nreturn taoensso.sente._chsk_send_BANG_(chsk,ev,opts);\r\n}));\r\n\r\n(taoensso.sente.chsk_send_BANG_.cljs$lang$maxFixedArity = 4);\r\n\r\ntaoensso.sente.chsk_send__GT_closed_BANG_ = (function taoensso$sente$chsk_send__GT_closed_BANG_(_QMARK_cb_fn){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,881,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send against closed chsk.\"], null);\r\n}),null)),null,-1744497546);\r\n\r\nif(cljs.core.truth_(_QMARK_cb_fn)){\r\n(_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264)) : _QMARK_cb_fn.call(null,new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264)));\r\n} else {\r\n}\r\n\r\nreturn false;\r\n});\r\ntaoensso.sente.assert_send_args = (function taoensso$sente$assert_send_args(x,_QMARK_timeout_ms,_QMARK_cb){\r\ntaoensso.sente.assert_event(x);\r\n\r\nif((((((_QMARK_timeout_ms == null)) && ((_QMARK_cb == null)))) || (taoensso.encore.nat_int_QMARK_(_QMARK_timeout_ms)))){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",[\"cb requires a timeout; timeout-ms should be a +ive integer: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(_QMARK_timeout_ms)].join(''),\"\\n\",\"(or (and (nil? ?timeout-ms) (nil? ?cb)) (and (enc/nat-int? ?timeout-ms)))\"].join('')));\r\n}\r\n\r\nif((((_QMARK_cb == null)) || (cljs.core.ifn_QMARK_(_QMARK_cb)) || (taoensso.encore.chan_QMARK_(_QMARK_cb)))){\r\nreturn null;\r\n} else {\r\nthrow (new Error([\"Assert failed: \",[\"cb should be nil, an ifn, or a channel: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(_QMARK_cb))].join(''),\"\\n\",\"(or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))\"].join('')));\r\n}\r\n});\r\ntaoensso.sente.pull_unused_cb_fn_BANG_ = (function taoensso$sente$pull_unused_cb_fn_BANG_(cbs_waiting_,_QMARK_cb_uuid){\r\nvar temp__5735__auto__ = _QMARK_cb_uuid;\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar cb_uuid = temp__5735__auto__;\r\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(cbs_waiting_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid], null),(function (_QMARK_f){\r\nreturn taoensso.encore.swapped(new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782),_QMARK_f);\r\n}));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Atomically swaps the value of chk's :state_ atom.\r\n */\r\ntaoensso.sente.swap_chsk_state_BANG_ = (function taoensso$sente$swap_chsk_state_BANG_(chsk,f){\r\nvar vec__75642 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk),(function (old_state){\r\nvar new_state = (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(old_state) : f.call(null,old_state));\r\nvar new_state__$1 = (cljs.core.truth_(new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530).cljs$core$IFn$_invoke$arity$1(old_state))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new_state,new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530),false):new_state);\r\nvar new_state__$2 = (cljs.core.truth_(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(new_state__$1))?cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new_state__$1,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733)):new_state__$1);\r\nreturn taoensso.encore.swapped(new_state__$2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state,new_state__$2], null));\r\n}));\r\nvar old_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75642,(0),null);\r\nvar new_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75642,(1),null);\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(old_state,new_state)){\r\nvar output = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state,new_state], null);\r\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(chsk,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099)], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"state\",\"chsk/state\",-1991397620),output], null));\r\n\r\nreturn output;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ntaoensso.sente.chsk_state__GT_closed = (function taoensso$sente$chsk_state__GT_closed(state,reason){\r\nvar e_76426 = (function (){try{if(cljs.core.map_QMARK_(state)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e75645){if((e75645 instanceof Error)){\r\nvar e_76426 = e75645;\r\nreturn e_76426;\r\n} else {\r\nthrow e75645;\r\n\r\n}\r\n}})();\r\nif((e_76426 == null)){\r\n} else {\r\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",924,\"(map? state)\",state,e_76426,null);\r\n}\r\n\r\nvar e_76430 = (function (){try{if((function (x){\r\nreturn cljs.core.contains_QMARK_((function (){var G__75649 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"requested-disconnect\",\"requested-disconnect\",1037120641),null,new cljs.core.Keyword(null,\"downgrading-ws-to-ajax\",\"downgrading-ws-to-ajax\",402136720),null,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424),null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707),null], null), null);\r\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__75649) : taoensso.truss.impl.set_STAR_.call(null,G__75649));\r\n})(),x);\r\n})(reason)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e75647){if((e75647 instanceof Error)){\r\nvar e_76430 = e75647;\r\nreturn e_76430;\r\n} else {\r\nthrow e75647;\r\n\r\n}\r\n}})();\r\nif((e_76430 == null)){\r\n} else {\r\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",925,\"([:el #{:requested-disconnect :downgrading-ws-to-ajax :unexpected :requested-reconnect}] reason)\",reason,e_76430,null);\r\n}\r\n\r\nif(cljs.core.truth_((function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(state);\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(reason,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\r\n}\r\n})())){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733)),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"last-close\",\"last-close\",-2054255782),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),reason], null)], 0));\r\n} else {\r\nreturn state;\r\n}\r\n});\r\n/**\r\n * Experimental, undocumented. Allows a core.async channel to be provided\r\n *   instead of a cb-fn. The channel will receive values of form\r\n *   [<event-id>.cb <reply>].\r\n */\r\ntaoensso.sente.cb_chan_as_fn = (function taoensso$sente$cb_chan_as_fn(_QMARK_cb,ev){\r\nif((((_QMARK_cb == null)) || (cljs.core.ifn_QMARK_(_QMARK_cb)))){\r\nreturn _QMARK_cb;\r\n} else {\r\nvar e_76441 = (function (){try{if(taoensso.encore.chan_QMARK_(_QMARK_cb)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e75653){if((e75653 instanceof Error)){\r\nvar e_76441 = e75653;\r\nreturn e_76441;\r\n} else {\r\nthrow e75653;\r\n\r\n}\r\n}})();\r\nif((e_76441 == null)){\r\n} else {\r\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",945,\"(enc/chan? ?cb)\",_QMARK_cb,e_76441,null);\r\n}\r\n\r\ntaoensso.sente.assert_event(ev);\r\n\r\nvar vec__75654 = ev;\r\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75654,(0),null);\r\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75654,(1),null);\r\nvar cb_ch = _QMARK_cb;\r\nreturn (function (reply){\r\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(cb_ch,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1([taoensso.encore.as_qname(ev_id),\".cb\"].join('')),reply], null));\r\n});\r\n}\r\n});\r\ntaoensso.sente.receive_buffered_evs_BANG_ = (function taoensso$sente$receive_buffered_evs_BANG_(chs,clj){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,955,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"receive-buffered-evs!: %s\",clj], null);\r\n}),null)),null,-987501798);\r\n\r\nvar buffered_evs = ((cljs.core.vector_QMARK_(clj))?clj:taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",956,\"(vector? clj)\",clj,null,null));\r\nvar seq__75659 = cljs.core.seq(buffered_evs);\r\nvar chunk__75660 = null;\r\nvar count__75661 = (0);\r\nvar i__75662 = (0);\r\nwhile(true){\r\nif((i__75662 < count__75661)){\r\nvar ev = chunk__75660.cljs$core$IIndexed$_nth$arity$2(null,i__75662);\r\ntaoensso.sente.assert_event(ev);\r\n\r\nvar vec__75673_76449 = ev;\r\nvar id_76450 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75673_76449,(0),null);\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(id_76450),\"chsk\")){\r\n} else {\r\nthrow (new Error(\"Assert failed: (not= (namespace id) \\\"chsk\\\")\"));\r\n}\r\n\r\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(chs),ev);\r\n\r\n\r\nvar G__76451 = seq__75659;\r\nvar G__76452 = chunk__75660;\r\nvar G__76453 = count__75661;\r\nvar G__76454 = (i__75662 + (1));\r\nseq__75659 = G__76451;\r\nchunk__75660 = G__76452;\r\ncount__75661 = G__76453;\r\ni__75662 = G__76454;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto__ = cljs.core.seq(seq__75659);\r\nif(temp__5735__auto__){\r\nvar seq__75659__$1 = temp__5735__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__75659__$1)){\r\nvar c__4556__auto__ = cljs.core.chunk_first(seq__75659__$1);\r\nvar G__76455 = cljs.core.chunk_rest(seq__75659__$1);\r\nvar G__76456 = c__4556__auto__;\r\nvar G__76457 = cljs.core.count(c__4556__auto__);\r\nvar G__76458 = (0);\r\nseq__75659 = G__76455;\r\nchunk__75660 = G__76456;\r\ncount__75661 = G__76457;\r\ni__75662 = G__76458;\r\ncontinue;\r\n} else {\r\nvar ev = cljs.core.first(seq__75659__$1);\r\ntaoensso.sente.assert_event(ev);\r\n\r\nvar vec__75676_76459 = ev;\r\nvar id_76460 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75676_76459,(0),null);\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(id_76460),\"chsk\")){\r\n} else {\r\nthrow (new Error(\"Assert failed: (not= (namespace id) \\\"chsk\\\")\"));\r\n}\r\n\r\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(chs),ev);\r\n\r\n\r\nvar G__76461 = cljs.core.next(seq__75659__$1);\r\nvar G__76462 = null;\r\nvar G__76463 = (0);\r\nvar G__76464 = (0);\r\nseq__75659 = G__76461;\r\nchunk__75660 = G__76462;\r\ncount__75661 = G__76463;\r\ni__75662 = G__76464;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ntaoensso.sente.handshake_QMARK_ = (function taoensso$sente$handshake_QMARK_(x){\r\nif(cljs.core.vector_QMARK_(x)){\r\nvar vec__75682 = x;\r\nvar x1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75682,(0),null);\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x1,new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686));\r\n} else {\r\nreturn false;\r\n}\r\n});\r\ntaoensso.sente.receive_handshake_BANG_ = (function taoensso$sente$receive_handshake_BANG_(chsk_type,chsk,clj){\r\nvar e_76469 = (function (){try{if((function (x){\r\nreturn cljs.core.contains_QMARK_((function (){var G__75694 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),null,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),null], null), null);\r\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__75694) : taoensso.truss.impl.set_STAR_.call(null,G__75694));\r\n})(),x);\r\n})(chsk_type)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e75689){if((e75689 instanceof Error)){\r\nvar e_76469 = e75689;\r\nreturn e_76469;\r\n} else {\r\nthrow e75689;\r\n\r\n}\r\n}})();\r\nif((e_76469 == null)){\r\n} else {\r\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",968,\"([:el #{:ws :ajax}] chsk-type)\",chsk_type,e_76469,null);\r\n}\r\n\r\nvar e_76470 = (function (){try{if(taoensso.sente.handshake_QMARK_(clj)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e75695){if((e75695 instanceof Error)){\r\nvar e_76470 = e75695;\r\nreturn e_76470;\r\n} else {\r\nthrow e75695;\r\n\r\n}\r\n}})();\r\nif((e_76470 == null)){\r\n} else {\r\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",969,\"(handshake? clj)\",clj,e_76470,null);\r\n}\r\n\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,970,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"receive-handshake! (%s): %s\",chsk_type,clj], null);\r\n}),null)),null,-1334709958);\r\n\r\nvar vec__75700 = clj;\r\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75700,(0),null);\r\nvar vec__75703 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75700,(1),null);\r\nvar _QMARK_uid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75703,(0),null);\r\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75703,(1),null);\r\nvar _QMARK_handshake_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75703,(2),null);\r\nvar map__75706 = chsk;\r\nvar map__75706__$1 = (((((!((map__75706 == null))))?(((((map__75706.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75706.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75706):map__75706);\r\nvar chs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75706__$1,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120));\r\nvar ever_opened_QMARK__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75706__$1,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913));\r\nvar first_handshake_QMARK_ = cljs.core.compare_and_set_BANG_(ever_opened_QMARK__,false,true);\r\nvar new_state = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),chsk_type,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),true,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),_QMARK_uid,new cljs.core.Keyword(null,\"handshake-data\",\"handshake-data\",-278378864),_QMARK_handshake_data,new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530),first_handshake_QMARK_], null);\r\nvar handshake_ev = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_uid,null,_QMARK_handshake_data,first_handshake_QMARK_], null)], null);\r\ntaoensso.sente.assert_event(handshake_ev);\r\n\r\ntaoensso.sente.swap_chsk_state_BANG_(chsk,(function (p1__75685_SHARP_){\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__75685_SHARP_,new_state], 0));\r\n}));\r\n\r\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(chs),handshake_ev);\r\n\r\nreturn new cljs.core.Keyword(null,\"handled\",\"handled\",1889700151);\r\n});\r\n/**\r\n * nnil iff the websocket npm library[1] is available.\r\n *   Easiest way to install:\r\n *     1. Add the lein-npm[2] plugin to your `project.clj`,\r\n *     2. Add: `:npm {:dependencies [[websocket \"1.0.23\"]]}`\r\n * \r\n *   [1] Ref. https://www.npmjs.com/package/websocket\r\n *   [2] Ref. https://github.com/RyanMcG/lein-npm\r\n */\r\ntaoensso.sente._QMARK_node_npm_websocket_ = (function (){var make_package_name = (function (prefix){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),\"socket\"].join('');\r\n});\r\nvar require_fn = (((typeof require !== 'undefined'))?require:cljs.core.constantly(new cljs.core.Keyword(null,\"no-op\",\"no-op\",-93046065)));\r\nreturn (new cljs.core.Delay((function (){\r\nif(((taoensso.sente.node_target_QMARK_) && ((typeof require !== 'undefined')))){\r\ntry{var G__75709 = make_package_name(\"web\");\r\nreturn (require_fn.cljs$core$IFn$_invoke$arity$1 ? require_fn.cljs$core$IFn$_invoke$arity$1(G__75709) : require_fn.call(null,G__75709));\r\n}catch (e75708){var e = e75708;\r\nreturn null;\r\n}} else {\r\nreturn null;\r\n}\r\n}),null));\r\n})();\r\ntaoensso.sente.create_js_client_websocket_BANG_ = (function taoensso$sente$create_js_client_websocket_BANG_(p__75710){\r\nvar map__75711 = p__75710;\r\nvar map__75711__$1 = (((((!((map__75711 == null))))?(((((map__75711.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75711.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75711):map__75711);\r\nvar opts = map__75711__$1;\r\nvar onerror_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75711__$1,new cljs.core.Keyword(null,\"onerror-fn\",\"onerror-fn\",1069372505));\r\nvar onmessage_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75711__$1,new cljs.core.Keyword(null,\"onmessage-fn\",\"onmessage-fn\",1633804172));\r\nvar onclose_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75711__$1,new cljs.core.Keyword(null,\"onclose-fn\",\"onclose-fn\",-1388163785));\r\nvar uri_str = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75711__$1,new cljs.core.Keyword(null,\"uri-str\",\"uri-str\",304128675));\r\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75711__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\r\nvar temp__5735__auto__ = (function (){var or__4126__auto__ = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(goog.global,\"WebSocket\");\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nvar or__4126__auto____$1 = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(goog.global,\"MozWebSocket\");\r\nif(cljs.core.truth_(or__4126__auto____$1)){\r\nreturn or__4126__auto____$1;\r\n} else {\r\nreturn taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(taoensso.sente._QMARK_node_npm_websocket_),\"w3cwebsocket\");\r\n}\r\n}\r\n})();\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar WebSocket = temp__5735__auto__;\r\nvar socket = (new WebSocket(uri_str));\r\nvar G__75715_76476 = socket;\r\n(G__75715_76476[\"onerror\"] = onerror_fn);\r\n\r\n(G__75715_76476[\"onmessage\"] = onmessage_fn);\r\n\r\n(G__75715_76476[\"onclose\"] = onclose_fn);\r\n\r\n\r\nreturn socket;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ntaoensso.sente.create_websocket_BANG_ = (function taoensso$sente$create_websocket_BANG_(p__75716){\r\nvar map__75717 = p__75716;\r\nvar map__75717__$1 = (((((!((map__75717 == null))))?(((((map__75717.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75717.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75717):map__75717);\r\nvar opts = map__75717__$1;\r\nvar onerror_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75717__$1,new cljs.core.Keyword(null,\"onerror-fn\",\"onerror-fn\",1069372505));\r\nvar onmessage_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75717__$1,new cljs.core.Keyword(null,\"onmessage-fn\",\"onmessage-fn\",1633804172));\r\nvar onclose_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75717__$1,new cljs.core.Keyword(null,\"onclose-fn\",\"onclose-fn\",-1388163785));\r\nvar uri_str = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75717__$1,new cljs.core.Keyword(null,\"uri-str\",\"uri-str\",304128675));\r\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75717__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\r\nreturn taoensso.sente.create_js_client_websocket_BANG_(opts);\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {taoensso.sente.IChSocket}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ntaoensso.sente.ChWebSocket = (function (client_id,chs,params,headers,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_,__meta,__extmap,__hash){\r\nthis.client_id = client_id;\r\nthis.chs = chs;\r\nthis.params = params;\r\nthis.headers = headers;\r\nthis.packer = packer;\r\nthis.url = url;\r\nthis.ws_kalive_ms = ws_kalive_ms;\r\nthis.state_ = state_;\r\nthis.instance_handle_ = instance_handle_;\r\nthis.retry_count_ = retry_count_;\r\nthis.ever_opened_QMARK__ = ever_opened_QMARK__;\r\nthis.backoff_ms_fn = backoff_ms_fn;\r\nthis.cbs_waiting_ = cbs_waiting_;\r\nthis.socket_ = socket_;\r\nthis.udt_last_comms_ = udt_last_comms_;\r\nthis.__meta = __meta;\r\nthis.__extmap = __extmap;\r\nthis.__hash = __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\r\n});\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4380__auto__,k__4381__auto__){\r\nvar self__ = this;\r\nvar this__4380__auto____$1 = this;\r\nreturn this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4381__auto__,null);\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4382__auto__,k75731,else__4383__auto__){\r\nvar self__ = this;\r\nvar this__4382__auto____$1 = this;\r\nvar G__75737 = k75731;\r\nvar G__75737__$1 = (((G__75737 instanceof cljs.core.Keyword))?G__75737.fqn:null);\r\nswitch (G__75737__$1) {\r\ncase \"client-id\":\r\nreturn self__.client_id;\r\n\r\nbreak;\r\ncase \"chs\":\r\nreturn self__.chs;\r\n\r\nbreak;\r\ncase \"params\":\r\nreturn self__.params;\r\n\r\nbreak;\r\ncase \"headers\":\r\nreturn self__.headers;\r\n\r\nbreak;\r\ncase \"packer\":\r\nreturn self__.packer;\r\n\r\nbreak;\r\ncase \"url\":\r\nreturn self__.url;\r\n\r\nbreak;\r\ncase \"ws-kalive-ms\":\r\nreturn self__.ws_kalive_ms;\r\n\r\nbreak;\r\ncase \"state_\":\r\nreturn self__.state_;\r\n\r\nbreak;\r\ncase \"instance-handle_\":\r\nreturn self__.instance_handle_;\r\n\r\nbreak;\r\ncase \"retry-count_\":\r\nreturn self__.retry_count_;\r\n\r\nbreak;\r\ncase \"ever-opened?_\":\r\nreturn self__.ever_opened_QMARK__;\r\n\r\nbreak;\r\ncase \"backoff-ms-fn\":\r\nreturn self__.backoff_ms_fn;\r\n\r\nbreak;\r\ncase \"cbs-waiting_\":\r\nreturn self__.cbs_waiting_;\r\n\r\nbreak;\r\ncase \"socket_\":\r\nreturn self__.socket_;\r\n\r\nbreak;\r\ncase \"udt-last-comms_\":\r\nreturn self__.udt_last_comms_;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k75731,else__4383__auto__);\r\n\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4399__auto__,f__4400__auto__,init__4401__auto__){\r\nvar self__ = this;\r\nvar this__4399__auto____$1 = this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4402__auto__,p__75739){\r\nvar vec__75740 = p__75739;\r\nvar k__4403__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75740,(0),null);\r\nvar v__4404__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75740,(1),null);\r\nreturn (f__4400__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4400__auto__.cljs$core$IFn$_invoke$arity$3(ret__4402__auto__,k__4403__auto__,v__4404__auto__) : f__4400__auto__.call(null,ret__4402__auto__,k__4403__auto__,v__4404__auto__));\r\n}),init__4401__auto__,this__4399__auto____$1);\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4394__auto__,writer__4395__auto__,opts__4396__auto__){\r\nvar self__ = this;\r\nvar this__4394__auto____$1 = this;\r\nvar pr_pair__4397__auto__ = (function (keyval__4398__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4395__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4396__auto__,keyval__4398__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4395__auto__,pr_pair__4397__auto__,\"#taoensso.sente.ChWebSocket{\",\", \",\"}\",opts__4396__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),self__.headers],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),self__.ws_kalive_ms],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),self__.retry_count_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),self__.cbs_waiting_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),self__.socket_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),self__.udt_last_comms_],null))], null),self__.__extmap));\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__75730){\r\nvar self__ = this;\r\nvar G__75730__$1 = this;\r\nreturn (new cljs.core.RecordIter((0),G__75730__$1,15,new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4378__auto__){\r\nvar self__ = this;\r\nvar this__4378__auto____$1 = this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4375__auto__){\r\nvar self__ = this;\r\nvar this__4375__auto____$1 = this;\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4384__auto__){\r\nvar self__ = this;\r\nvar this__4384__auto____$1 = this;\r\nreturn (15 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4376__auto__){\r\nvar self__ = this;\r\nvar this__4376__auto____$1 = this;\r\nvar h__4238__auto__ = self__.__hash;\r\nif((!((h__4238__auto__ == null)))){\r\nreturn h__4238__auto__;\r\n} else {\r\nvar h__4238__auto____$1 = (function (coll__4377__auto__){\r\nreturn (1998688700 ^ cljs.core.hash_unordered_coll(coll__4377__auto__));\r\n})(this__4376__auto____$1);\r\n(self__.__hash = h__4238__auto____$1);\r\n\r\nreturn h__4238__auto____$1;\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this75732,other75733){\r\nvar self__ = this;\r\nvar this75732__$1 = this;\r\nreturn (((!((other75733 == null)))) && ((this75732__$1.constructor === other75733.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.client_id,other75733.client_id)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.chs,other75733.chs)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.params,other75733.params)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.headers,other75733.headers)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.packer,other75733.packer)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.url,other75733.url)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.ws_kalive_ms,other75733.ws_kalive_ms)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.state_,other75733.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.instance_handle_,other75733.instance_handle_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.retry_count_,other75733.retry_count_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.ever_opened_QMARK__,other75733.ever_opened_QMARK__)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.backoff_ms_fn,other75733.backoff_ms_fn)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.cbs_waiting_,other75733.cbs_waiting_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.socket_,other75733.socket_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.udt_last_comms_,other75733.udt_last_comms_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75732__$1.__extmap,other75733.__extmap)));\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4389__auto__,k__4390__auto__){\r\nvar self__ = this;\r\nvar this__4389__auto____$1 = this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 15, [new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),null,new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),null,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),null,new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),null,new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null], null), null),k__4390__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4389__auto____$1),self__.__meta),k__4390__auto__);\r\n} else {\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4390__auto__)),null));\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4387__auto__,k__4388__auto__,G__75730){\r\nvar self__ = this;\r\nvar this__4387__auto____$1 = this;\r\nvar pred__75765 = cljs.core.keyword_identical_QMARK_;\r\nvar expr__75766 = k__4388__auto__;\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(G__75730,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,G__75730,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,G__75730,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,G__75730,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,G__75730,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,G__75730,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,G__75730,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,G__75730,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,G__75730,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,G__75730,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,G__75730,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,G__75730,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,G__75730,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,G__75730,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75765.cljs$core$IFn$_invoke$arity$2 ? pred__75765.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),expr__75766) : pred__75765.call(null,new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),expr__75766)))){\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,G__75730,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4388__auto__,G__75730),null));\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4392__auto__){\r\nvar self__ = this;\r\nvar this__4392__auto____$1 = this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),self__.headers,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),self__.ws_kalive_ms,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),self__.retry_count_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),self__.cbs_waiting_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),self__.socket_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),self__.udt_last_comms_,null))], null),self__.__extmap));\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4379__auto__,G__75730){\r\nvar self__ = this;\r\nvar this__4379__auto____$1 = this;\r\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,G__75730,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4385__auto__,entry__4386__auto__){\r\nvar self__ = this;\r\nvar this__4385__auto____$1 = this;\r\nif(cljs.core.vector_QMARK_(entry__4386__auto__)){\r\nreturn this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4386__auto__,(0)),cljs.core._nth(entry__4386__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4385__auto____$1,entry__4386__auto__);\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\r\nvar self__ = this;\r\nvar chsk__$1 = this;\r\ncljs.core.reset_BANG_(self__.instance_handle_,null);\r\n\r\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__75721_SHARP_){\r\nreturn taoensso.sente.chsk_state__GT_closed(p1__75721_SHARP_,reason);\r\n}));\r\n\r\nvar temp__5735__auto__ = cljs.core.deref(self__.socket_);\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar s = temp__5735__auto__;\r\nreturn s.close((1000),\"CLOSE_NORMAL\");\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\r\nvar self__ = this;\r\nvar chsk__$1 = this;\r\nchsk__$1.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\r\n\r\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\r\nvar self__ = this;\r\nvar chsk__$1 = this;\r\nvar map__75784 = opts;\r\nvar map__75784__$1 = (((((!((map__75784 == null))))?(((((map__75784.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75784.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75784):map__75784);\r\nvar _QMARK_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75784__$1,new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406));\r\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75784__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\r\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75784__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\r\nvar _ = taoensso.sente.assert_send_args(ev,_QMARK_timeout_ms,_QMARK_cb);\r\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\r\nif(cljs.core.not(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))){\r\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\r\n} else {\r\nvar _QMARK_cb_uuid = (cljs.core.truth_(_QMARK_cb_fn)?taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1((6)):null);\r\nvar ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(self__.packer,ev,_QMARK_cb_uuid);\r\nvar temp__5735__auto___76482 = _QMARK_cb_uuid;\r\nif(cljs.core.truth_(temp__5735__auto___76482)){\r\nvar cb_uuid_76483 = temp__5735__auto___76482;\r\ntaoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3(self__.cbs_waiting_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid_76483], null),(function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(_QMARK_cb_fn)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e75790){if((e75790 instanceof Error)){\r\nvar e = e75790;\r\nreturn e;\r\n} else {\r\nthrow e75790;\r\n\r\n}\r\n}})();\r\nif((e == null)){\r\nreturn _QMARK_cb_fn;\r\n} else {\r\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1114,\"(taoensso.truss.impl/some? ?cb-fn)\",_QMARK_cb_fn,e,null);\r\n}\r\n})());\r\n\r\nvar temp__5735__auto___76484__$1 = _QMARK_timeout_ms;\r\nif(cljs.core.truth_(temp__5735__auto___76484__$1)){\r\nvar timeout_ms_76485 = temp__5735__auto___76484__$1;\r\nvar c__73714__auto___76486 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run((function (){\r\nvar f__73715__auto__ = (function (){var switch__73644__auto__ = (function (state_75805){\r\nvar state_val_75806 = (state_75805[(1)]);\r\nif((state_val_75806 === (1))){\r\nvar inst_75795 = cljs.core.async.timeout(timeout_ms_76485);\r\nvar state_75805__$1 = state_75805;\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_75805__$1,(2),inst_75795);\r\n} else {\r\nif((state_val_75806 === (2))){\r\nvar inst_75798 = (state_75805[(7)]);\r\nvar inst_75797 = (state_75805[(2)]);\r\nvar inst_75798__$1 = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,_QMARK_cb_uuid);\r\nvar state_75805__$1 = (function (){var statearr_75811 = state_75805;\r\n(statearr_75811[(8)] = inst_75797);\r\n\r\n(statearr_75811[(7)] = inst_75798__$1);\r\n\r\nreturn statearr_75811;\r\n})();\r\nif(cljs.core.truth_(inst_75798__$1)){\r\nvar statearr_75812_76487 = state_75805__$1;\r\n(statearr_75812_76487[(1)] = (3));\r\n\r\n} else {\r\nvar statearr_75813_76488 = state_75805__$1;\r\n(statearr_75813_76488[(1)] = (4));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75806 === (3))){\r\nvar inst_75798 = (state_75805[(7)]);\r\nvar inst_75800 = (inst_75798.cljs$core$IFn$_invoke$arity$1 ? inst_75798.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)) : inst_75798.call(null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)));\r\nvar state_75805__$1 = state_75805;\r\nvar statearr_75817_76489 = state_75805__$1;\r\n(statearr_75817_76489[(2)] = inst_75800);\r\n\r\n(statearr_75817_76489[(1)] = (5));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75806 === (4))){\r\nvar state_75805__$1 = state_75805;\r\nvar statearr_75819_76490 = state_75805__$1;\r\n(statearr_75819_76490[(2)] = null);\r\n\r\n(statearr_75819_76490[(1)] = (5));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75806 === (5))){\r\nvar inst_75803 = (state_75805[(2)]);\r\nvar state_75805__$1 = state_75805;\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_75805__$1,inst_75803);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreturn (function() {\r\nvar taoensso$sente$state_machine__73645__auto__ = null;\r\nvar taoensso$sente$state_machine__73645__auto____0 = (function (){\r\nvar statearr_75820 = [null,null,null,null,null,null,null,null,null];\r\n(statearr_75820[(0)] = taoensso$sente$state_machine__73645__auto__);\r\n\r\n(statearr_75820[(1)] = (1));\r\n\r\nreturn statearr_75820;\r\n});\r\nvar taoensso$sente$state_machine__73645__auto____1 = (function (state_75805){\r\nwhile(true){\r\nvar ret_value__73646__auto__ = (function (){try{while(true){\r\nvar result__73647__auto__ = switch__73644__auto__(state_75805);\r\nif(cljs.core.keyword_identical_QMARK_(result__73647__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__73647__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e75821){var ex__73648__auto__ = e75821;\r\nvar statearr_75822_76491 = state_75805;\r\n(statearr_75822_76491[(2)] = ex__73648__auto__);\r\n\r\n\r\nif(cljs.core.seq((state_75805[(4)]))){\r\nvar statearr_75823_76492 = state_75805;\r\n(statearr_75823_76492[(1)] = cljs.core.first((state_75805[(4)])));\r\n\r\n} else {\r\nthrow ex__73648__auto__;\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__73646__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__76493 = state_75805;\r\nstate_75805 = G__76493;\r\ncontinue;\r\n} else {\r\nreturn ret_value__73646__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\ntaoensso$sente$state_machine__73645__auto__ = function(state_75805){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn taoensso$sente$state_machine__73645__auto____0.call(this);\r\ncase 1:\r\nreturn taoensso$sente$state_machine__73645__auto____1.call(this,state_75805);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__73645__auto____0;\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__73645__auto____1;\r\nreturn taoensso$sente$state_machine__73645__auto__;\r\n})()\r\n})();\r\nvar state__73716__auto__ = (function (){var statearr_75827 = f__73715__auto__();\r\n(statearr_75827[(6)] = c__73714__auto___76486);\r\n\r\nreturn statearr_75827;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__73716__auto__);\r\n}));\r\n\r\n} else {\r\n}\r\n} else {\r\n}\r\n\r\ntry{cljs.core.deref(self__.socket_).send(ppstr);\r\n\r\ncljs.core.reset_BANG_(self__.udt_last_comms_,taoensso.encore.now_udt());\r\n\r\nreturn new cljs.core.Keyword(null,\"apparent-success\",\"apparent-success\",242592222);\r\n}catch (e75831){var t = e75831;\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1128,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t,\"Chsk send error\"], null);\r\n}),null)),null,-373891631);\r\n\r\nvar temp__5735__auto___76494 = _QMARK_cb_uuid;\r\nif(cljs.core.truth_(temp__5735__auto___76494)){\r\nvar cb_uuid_76495 = temp__5735__auto___76494;\r\nvar cb_fn_STAR__76496 = (function (){var or__4126__auto__ = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,cb_uuid_76495);\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nvar e = (function (){try{if(taoensso.truss.impl.some_QMARK_(_QMARK_cb_fn)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e75832){if((e75832 instanceof Error)){\r\nvar e = e75832;\r\nreturn e;\r\n} else {\r\nthrow e75832;\r\n\r\n}\r\n}})();\r\nif((e == null)){\r\nreturn _QMARK_cb_fn;\r\n} else {\r\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1131,\"(taoensso.truss.impl/some? ?cb-fn)\",_QMARK_cb_fn,e,null);\r\n}\r\n}\r\n})();\r\n(cb_fn_STAR__76496.cljs$core$IFn$_invoke$arity$1 ? cb_fn_STAR__76496.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)) : cb_fn_STAR__76496.call(null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)));\r\n} else {\r\n}\r\n\r\nreturn false;\r\n}}\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\r\nvar self__ = this;\r\nvar chsk__$1 = this;\r\nvar instance_handle = cljs.core.reset_BANG_(self__.instance_handle_,taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0());\r\nvar have_handle_QMARK_ = (function (){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.instance_handle_),instance_handle);\r\n});\r\nvar connect_fn = (function taoensso$sente$connect_fn(){\r\nif(have_handle_QMARK_()){\r\nvar retry_fn = (function (){\r\nif(have_handle_QMARK_()){\r\nvar retry_count_STAR_ = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.retry_count_,cljs.core.inc);\r\nvar backoff_ms = (self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1 ? self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1(retry_count_STAR_) : self__.backoff_ms_fn.call(null,retry_count_STAR_));\r\nvar udt_next_reconnect = (taoensso.encore.now_udt() + backoff_ms);\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1147,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk is closed: will try reconnect attempt (%s) in %s ms\",retry_count_STAR_,backoff_ms], null);\r\n}),null)),null,-1706114369);\r\n\r\ngoog.global.setTimeout(taoensso$sente$connect_fn,backoff_ms);\r\n\r\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__75723_SHARP_){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__75723_SHARP_,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733),udt_next_reconnect);\r\n}));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nvar onerror_fn = (function (ws_ev){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1160,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"WebSocket error: %s\",(function (){try{return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(ws_ev);\r\n}catch (e75843){var _ = e75843;\r\nreturn ws_ev;\r\n}})()], null);\r\n}),null)),null,-567105657);\r\n\r\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__75724_SHARP_){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__75724_SHARP_,new cljs.core.Keyword(null,\"last-ws-error\",\"last-ws-error\",-820288502),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ws_ev], null));\r\n}));\r\n});\r\nvar onmessage_fn = (function (ws_ev){\r\nvar ppstr = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"data\");\r\nvar vec__75845 = taoensso.sente.unpack(self__.packer,ppstr);\r\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75845,(0),null);\r\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75845,(1),null);\r\ncljs.core.reset_BANG_(self__.udt_last_comms_,taoensso.encore.now_udt());\r\n\r\nvar or__4126__auto__ = ((taoensso.sente.handshake_QMARK_(clj))?(function (){\r\ntaoensso.sente.receive_handshake_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),chsk__$1,clj);\r\n\r\ncljs.core.reset_BANG_(self__.retry_count_,(0));\r\n\r\nreturn new cljs.core.Keyword(null,\"handshake\",\"handshake\",68079331);\r\n})()\r\n:null);\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nvar or__4126__auto____$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clj,new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)))?(function (){\r\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(self__.chs),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)], null));\r\n\r\nreturn new cljs.core.Keyword(null,\"noop\",\"noop\",-673731258);\r\n})()\r\n:null);\r\nif(cljs.core.truth_(or__4126__auto____$1)){\r\nreturn or__4126__auto____$1;\r\n} else {\r\nvar temp__5733__auto__ = _QMARK_cb_uuid;\r\nif(cljs.core.truth_(temp__5733__auto__)){\r\nvar cb_uuid = temp__5733__auto__;\r\nvar temp__5733__auto____$1 = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,cb_uuid);\r\nif(cljs.core.truth_(temp__5733__auto____$1)){\r\nvar cb_fn = temp__5733__auto____$1;\r\nreturn (cb_fn.cljs$core$IFn$_invoke$arity$1 ? cb_fn.cljs$core$IFn$_invoke$arity$1(clj) : cb_fn.call(null,clj));\r\n} else {\r\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1204,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cb reply w/o local cb-fn: %s\",clj], null);\r\n}),null)),null,1883290784);\r\n}\r\n} else {\r\nvar buffered_evs = clj;\r\nreturn taoensso.sente.receive_buffered_evs_BANG_(self__.chs,buffered_evs);\r\n}\r\n}\r\n}\r\n});\r\nvar onclose_fn = (function (ws_ev){\r\nvar last_ws_close = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ws_ev,new cljs.core.Keyword(null,\"clean?\",\"clean?\",-1675631009),taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"wasClean\"),new cljs.core.Keyword(null,\"code\",\"code\",1586293142),taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"code\"),new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"reason\")], null);\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"clean?\",\"clean?\",-1675631009).cljs$core$IFn$_invoke$arity$1(last_ws_close))){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,1230,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Clean WebSocket close, will not attempt reconnect\"], null);\r\n}),null)),null,-777761116);\r\n\r\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__75727_SHARP_){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__75727_SHARP_,new cljs.core.Keyword(null,\"last-ws-close\",\"last-ws-close\",-798104932),last_ws_close);\r\n}));\r\n} else {\r\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__75728_SHARP_){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(taoensso.sente.chsk_state__GT_closed(p1__75728_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424)),new cljs.core.Keyword(null,\"last-ws-close\",\"last-ws-close\",-798104932),last_ws_close);\r\n}));\r\n\r\nreturn retry_fn();\r\n}\r\n});\r\nvar _QMARK_socket = (function (){try{return taoensso.sente.create_websocket_BANG_(new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"onerror-fn\",\"onerror-fn\",1069372505),onerror_fn,new cljs.core.Keyword(null,\"onmessage-fn\",\"onmessage-fn\",1633804172),onmessage_fn,new cljs.core.Keyword(null,\"onclose-fn\",\"onclose-fn\",-1388163785),onclose_fn,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),self__.headers,new cljs.core.Keyword(null,\"uri-str\",\"uri-str\",304128675),taoensso.encore.merge_url_with_query_string(self__.url,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))], null)], 0)))], null));\r\n}catch (e75852){var t = e75852;\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1253,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t,\"WebSocket error\"], null);\r\n}),null)),null,-1847920487);\r\n\r\nreturn null;\r\n}})();\r\nif(cljs.core.not(_QMARK_socket)){\r\nreturn retry_fn();\r\n} else {\r\nvar temp__5735__auto___76498 = cljs.core.deref(self__.socket_);\r\nif(cljs.core.truth_(temp__5735__auto___76498)){\r\nvar old_socket_76499 = temp__5735__auto___76498;\r\nold_socket_76499.close();\r\n} else {\r\n}\r\n\r\nreturn cljs.core.reset_BANG_(self__.socket_,_QMARK_socket);\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nvar temp__5735__auto___76500 = self__.ws_kalive_ms;\r\nif(cljs.core.truth_(temp__5735__auto___76500)){\r\nvar ms_76501 = temp__5735__auto___76500;\r\nvar c__73714__auto___76502 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run((function (){\r\nvar f__73715__auto__ = (function (){var switch__73644__auto__ = (function (state_75892){\r\nvar state_val_75893 = (state_75892[(1)]);\r\nif((state_val_75893 === (7))){\r\nvar inst_75886 = (state_75892[(2)]);\r\nvar state_75892__$1 = state_75892;\r\nvar statearr_75894_76503 = state_75892__$1;\r\n(statearr_75894_76503[(2)] = inst_75886);\r\n\r\n(statearr_75894_76503[(1)] = (3));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75893 === (1))){\r\nvar state_75892__$1 = state_75892;\r\nvar statearr_75895_76504 = state_75892__$1;\r\n(statearr_75895_76504[(2)] = null);\r\n\r\n(statearr_75895_76504[(1)] = (2));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75893 === (4))){\r\nvar inst_75864 = (state_75892[(2)]);\r\nvar inst_75865 = have_handle_QMARK_();\r\nvar state_75892__$1 = (function (){var statearr_75896 = state_75892;\r\n(statearr_75896[(7)] = inst_75864);\r\n\r\nreturn statearr_75896;\r\n})();\r\nif(inst_75865){\r\nvar statearr_75897_76505 = state_75892__$1;\r\n(statearr_75897_76505[(1)] = (5));\r\n\r\n} else {\r\nvar statearr_75898_76506 = state_75892__$1;\r\n(statearr_75898_76506[(1)] = (6));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75893 === (6))){\r\nvar state_75892__$1 = state_75892;\r\nvar statearr_75900_76507 = state_75892__$1;\r\n(statearr_75900_76507[(2)] = null);\r\n\r\n(statearr_75900_76507[(1)] = (7));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75893 === (3))){\r\nvar inst_75889 = (state_75892[(2)]);\r\nvar state_75892__$1 = state_75892;\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_75892__$1,inst_75889);\r\n} else {\r\nif((state_val_75893 === (2))){\r\nvar inst_75861 = cljs.core.deref(self__.udt_last_comms_);\r\nvar inst_75862 = cljs.core.async.timeout(ms_76501);\r\nvar state_75892__$1 = (function (){var statearr_75903 = state_75892;\r\n(statearr_75903[(8)] = inst_75861);\r\n\r\nreturn statearr_75903;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_75892__$1,(4),inst_75862);\r\n} else {\r\nif((state_val_75893 === (9))){\r\nvar state_75892__$1 = state_75892;\r\nvar statearr_75904_76508 = state_75892__$1;\r\n(statearr_75904_76508[(2)] = null);\r\n\r\n(statearr_75904_76508[(1)] = (10));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75893 === (5))){\r\nvar inst_75861 = (state_75892[(8)]);\r\nvar inst_75867 = cljs.core.deref(self__.udt_last_comms_);\r\nvar inst_75868 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_75861,inst_75867);\r\nvar state_75892__$1 = state_75892;\r\nif(inst_75868){\r\nvar statearr_75908_76509 = state_75892__$1;\r\n(statearr_75908_76509[(1)] = (8));\r\n\r\n} else {\r\nvar statearr_75909_76510 = state_75892__$1;\r\n(statearr_75909_76510[(1)] = (9));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75893 === (10))){\r\nvar inst_75881 = (state_75892[(2)]);\r\nvar state_75892__$1 = (function (){var statearr_75910 = state_75892;\r\n(statearr_75910[(9)] = inst_75881);\r\n\r\nreturn statearr_75910;\r\n})();\r\nvar statearr_75911_76511 = state_75892__$1;\r\n(statearr_75911_76511[(2)] = null);\r\n\r\n(statearr_75911_76511[(1)] = (2));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_75893 === (8))){\r\nvar inst_75871 = cljs.core.PersistentVector.EMPTY_NODE;\r\nvar inst_75872 = [new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)];\r\nvar inst_75873 = (new cljs.core.PersistentVector(null,1,(5),inst_75871,inst_75872,null));\r\nvar inst_75875 = [new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231)];\r\nvar inst_75876 = [true];\r\nvar inst_75877 = cljs.core.PersistentHashMap.fromArrays(inst_75875,inst_75876);\r\nvar inst_75878 = chsk__$1.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(null,inst_75873,inst_75877);\r\nvar state_75892__$1 = state_75892;\r\nvar statearr_75915_76512 = state_75892__$1;\r\n(statearr_75915_76512[(2)] = inst_75878);\r\n\r\n(statearr_75915_76512[(1)] = (10));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreturn (function() {\r\nvar taoensso$sente$state_machine__73645__auto__ = null;\r\nvar taoensso$sente$state_machine__73645__auto____0 = (function (){\r\nvar statearr_75916 = [null,null,null,null,null,null,null,null,null,null];\r\n(statearr_75916[(0)] = taoensso$sente$state_machine__73645__auto__);\r\n\r\n(statearr_75916[(1)] = (1));\r\n\r\nreturn statearr_75916;\r\n});\r\nvar taoensso$sente$state_machine__73645__auto____1 = (function (state_75892){\r\nwhile(true){\r\nvar ret_value__73646__auto__ = (function (){try{while(true){\r\nvar result__73647__auto__ = switch__73644__auto__(state_75892);\r\nif(cljs.core.keyword_identical_QMARK_(result__73647__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__73647__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e75920){var ex__73648__auto__ = e75920;\r\nvar statearr_75921_76513 = state_75892;\r\n(statearr_75921_76513[(2)] = ex__73648__auto__);\r\n\r\n\r\nif(cljs.core.seq((state_75892[(4)]))){\r\nvar statearr_75922_76514 = state_75892;\r\n(statearr_75922_76514[(1)] = cljs.core.first((state_75892[(4)])));\r\n\r\n} else {\r\nthrow ex__73648__auto__;\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__73646__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__76515 = state_75892;\r\nstate_75892 = G__76515;\r\ncontinue;\r\n} else {\r\nreturn ret_value__73646__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\ntaoensso$sente$state_machine__73645__auto__ = function(state_75892){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn taoensso$sente$state_machine__73645__auto____0.call(this);\r\ncase 1:\r\nreturn taoensso$sente$state_machine__73645__auto____1.call(this,state_75892);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__73645__auto____0;\r\ntaoensso$sente$state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__73645__auto____1;\r\nreturn taoensso$sente$state_machine__73645__auto__;\r\n})()\r\n})();\r\nvar state__73716__auto__ = (function (){var statearr_75923 = f__73715__auto__();\r\n(statearr_75923[(6)] = c__73714__auto___76502);\r\n\r\nreturn statearr_75923;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__73716__auto__);\r\n}));\r\n\r\n} else {\r\n}\r\n\r\ncljs.core.reset_BANG_(self__.retry_count_,(0));\r\n\r\nconnect_fn();\r\n\r\nreturn chsk__$1;\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"client-id\",\"client-id\",1175909387,null),new cljs.core.Symbol(null,\"chs\",\"chs\",2017417647,null),new cljs.core.Symbol(null,\"params\",\"params\",-1943919534,null),new cljs.core.Symbol(null,\"headers\",\"headers\",805501398,null),new cljs.core.Symbol(null,\"packer\",\"packer\",1706609071,null),new cljs.core.Symbol(null,\"url\",\"url\",1916828573,null),new cljs.core.Symbol(null,\"ws-kalive-ms\",\"ws-kalive-ms\",-1212255801,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"instance-handle_\",\"instance-handle_\",-282852930,null),new cljs.core.Symbol(null,\"retry-count_\",\"retry-count_\",1660769620,null),new cljs.core.Symbol(null,\"ever-opened?_\",\"ever-opened?_\",-1013096856,null),new cljs.core.Symbol(null,\"backoff-ms-fn\",\"backoff-ms-fn\",-1881539814,null),new cljs.core.Symbol(null,\"cbs-waiting_\",\"cbs-waiting_\",121502466,null),new cljs.core.Symbol(null,\"socket_\",\"socket_\",1279482619,null),new cljs.core.Symbol(null,\"udt-last-comms_\",\"udt-last-comms_\",1494731888,null)], null);\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.cljs$lang$type = true);\r\n\r\n(taoensso.sente.ChWebSocket.cljs$lang$ctorPrSeq = (function (this__4423__auto__){\r\nreturn (new cljs.core.List(null,\"taoensso.sente/ChWebSocket\",null,(1),null));\r\n}));\r\n\r\n(taoensso.sente.ChWebSocket.cljs$lang$ctorPrWriter = (function (this__4423__auto__,writer__4424__auto__){\r\nreturn cljs.core._write(writer__4424__auto__,\"taoensso.sente/ChWebSocket\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for taoensso.sente/ChWebSocket.\r\n */\r\ntaoensso.sente.__GT_ChWebSocket = (function taoensso$sente$__GT_ChWebSocket(client_id,chs,params,headers,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_){\r\nreturn (new taoensso.sente.ChWebSocket(client_id,chs,params,headers,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values.\r\n */\r\ntaoensso.sente.map__GT_ChWebSocket = (function taoensso$sente$map__GT_ChWebSocket(G__75735){\r\nvar extmap__4419__auto__ = (function (){var G__75930 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__75735,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639)], 0));\r\nif(cljs.core.record_QMARK_(G__75735)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__75930);\r\n} else {\r\nreturn G__75930;\r\n}\r\n})();\r\nreturn (new taoensso.sente.ChWebSocket(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140).cljs$core$IFn$_invoke$arity$1(G__75735),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120).cljs$core$IFn$_invoke$arity$1(G__75735),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(G__75735),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(G__75735),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544).cljs$core$IFn$_invoke$arity$1(G__75735),new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(G__75735),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968).cljs$core$IFn$_invoke$arity$1(G__75735),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__75735),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457).cljs$core$IFn$_invoke$arity$1(G__75735),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093).cljs$core$IFn$_invoke$arity$1(G__75735),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(G__75735),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955).cljs$core$IFn$_invoke$arity$1(G__75735),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061).cljs$core$IFn$_invoke$arity$1(G__75735),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908).cljs$core$IFn$_invoke$arity$1(G__75735),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639).cljs$core$IFn$_invoke$arity$1(G__75735),null,cljs.core.not_empty(extmap__4419__auto__),null));\r\n});\r\n\r\ntaoensso.sente.new_ChWebSocket = (function taoensso$sente$new_ChWebSocket(opts,csrf_token){\r\nreturn taoensso.sente.map__GT_ChWebSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\r\n});\r\n/**\r\n * We must set *some* client-side timeout otherwise an unpredictable (and\r\n *   probably too short) browser default will be used. Must be > server's\r\n *   :lp-timeout-ms.\r\n */\r\ntaoensso.sente.default_client_side_ajax_timeout_ms = taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(60)], 0));\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {taoensso.sente.IChSocket}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ntaoensso.sente.ChAjaxSocket = (function (client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_,__meta,__extmap,__hash){\r\nthis.client_id = client_id;\r\nthis.chs = chs;\r\nthis.params = params;\r\nthis.packer = packer;\r\nthis.url = url;\r\nthis.state_ = state_;\r\nthis.instance_handle_ = instance_handle_;\r\nthis.ever_opened_QMARK__ = ever_opened_QMARK__;\r\nthis.backoff_ms_fn = backoff_ms_fn;\r\nthis.ajax_opts = ajax_opts;\r\nthis.curr_xhr_ = curr_xhr_;\r\nthis.__meta = __meta;\r\nthis.__extmap = __extmap;\r\nthis.__hash = __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\r\n});\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4380__auto__,k__4381__auto__){\r\nvar self__ = this;\r\nvar this__4380__auto____$1 = this;\r\nreturn this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4381__auto__,null);\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4382__auto__,k75944,else__4383__auto__){\r\nvar self__ = this;\r\nvar this__4382__auto____$1 = this;\r\nvar G__75951 = k75944;\r\nvar G__75951__$1 = (((G__75951 instanceof cljs.core.Keyword))?G__75951.fqn:null);\r\nswitch (G__75951__$1) {\r\ncase \"client-id\":\r\nreturn self__.client_id;\r\n\r\nbreak;\r\ncase \"chs\":\r\nreturn self__.chs;\r\n\r\nbreak;\r\ncase \"params\":\r\nreturn self__.params;\r\n\r\nbreak;\r\ncase \"packer\":\r\nreturn self__.packer;\r\n\r\nbreak;\r\ncase \"url\":\r\nreturn self__.url;\r\n\r\nbreak;\r\ncase \"state_\":\r\nreturn self__.state_;\r\n\r\nbreak;\r\ncase \"instance-handle_\":\r\nreturn self__.instance_handle_;\r\n\r\nbreak;\r\ncase \"ever-opened?_\":\r\nreturn self__.ever_opened_QMARK__;\r\n\r\nbreak;\r\ncase \"backoff-ms-fn\":\r\nreturn self__.backoff_ms_fn;\r\n\r\nbreak;\r\ncase \"ajax-opts\":\r\nreturn self__.ajax_opts;\r\n\r\nbreak;\r\ncase \"curr-xhr_\":\r\nreturn self__.curr_xhr_;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k75944,else__4383__auto__);\r\n\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4399__auto__,f__4400__auto__,init__4401__auto__){\r\nvar self__ = this;\r\nvar this__4399__auto____$1 = this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4402__auto__,p__75954){\r\nvar vec__75955 = p__75954;\r\nvar k__4403__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75955,(0),null);\r\nvar v__4404__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75955,(1),null);\r\nreturn (f__4400__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4400__auto__.cljs$core$IFn$_invoke$arity$3(ret__4402__auto__,k__4403__auto__,v__4404__auto__) : f__4400__auto__.call(null,ret__4402__auto__,k__4403__auto__,v__4404__auto__));\r\n}),init__4401__auto__,this__4399__auto____$1);\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4394__auto__,writer__4395__auto__,opts__4396__auto__){\r\nvar self__ = this;\r\nvar this__4394__auto____$1 = this;\r\nvar pr_pair__4397__auto__ = (function (keyval__4398__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4395__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4396__auto__,keyval__4398__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4395__auto__,pr_pair__4397__auto__,\"#taoensso.sente.ChAjaxSocket{\",\", \",\"}\",opts__4396__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),self__.ajax_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),self__.curr_xhr_],null))], null),self__.__extmap));\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__75943){\r\nvar self__ = this;\r\nvar G__75943__$1 = this;\r\nreturn (new cljs.core.RecordIter((0),G__75943__$1,11,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4378__auto__){\r\nvar self__ = this;\r\nvar this__4378__auto____$1 = this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4375__auto__){\r\nvar self__ = this;\r\nvar this__4375__auto____$1 = this;\r\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4384__auto__){\r\nvar self__ = this;\r\nvar this__4384__auto____$1 = this;\r\nreturn (11 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4376__auto__){\r\nvar self__ = this;\r\nvar this__4376__auto____$1 = this;\r\nvar h__4238__auto__ = self__.__hash;\r\nif((!((h__4238__auto__ == null)))){\r\nreturn h__4238__auto__;\r\n} else {\r\nvar h__4238__auto____$1 = (function (coll__4377__auto__){\r\nreturn (-266770752 ^ cljs.core.hash_unordered_coll(coll__4377__auto__));\r\n})(this__4376__auto____$1);\r\n(self__.__hash = h__4238__auto____$1);\r\n\r\nreturn h__4238__auto____$1;\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this75945,other75946){\r\nvar self__ = this;\r\nvar this75945__$1 = this;\r\nreturn (((!((other75946 == null)))) && ((this75945__$1.constructor === other75946.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75945__$1.client_id,other75946.client_id)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75945__$1.chs,other75946.chs)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75945__$1.params,other75946.params)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75945__$1.packer,other75946.packer)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75945__$1.url,other75946.url)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75945__$1.state_,other75946.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75945__$1.instance_handle_,other75946.instance_handle_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75945__$1.ever_opened_QMARK__,other75946.ever_opened_QMARK__)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75945__$1.backoff_ms_fn,other75946.backoff_ms_fn)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75945__$1.ajax_opts,other75946.ajax_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75945__$1.curr_xhr_,other75946.curr_xhr_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this75945__$1.__extmap,other75946.__extmap)));\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4389__auto__,k__4390__auto__){\r\nvar self__ = this;\r\nvar this__4389__auto____$1 = this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),null,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null], null), null),k__4390__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4389__auto____$1),self__.__meta),k__4390__auto__);\r\n} else {\r\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4390__auto__)),null));\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4387__auto__,k__4388__auto__,G__75943){\r\nvar self__ = this;\r\nvar this__4387__auto____$1 = this;\r\nvar pred__75968 = cljs.core.keyword_identical_QMARK_;\r\nvar expr__75969 = k__4388__auto__;\r\nif(cljs.core.truth_((pred__75968.cljs$core$IFn$_invoke$arity$2 ? pred__75968.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__75969) : pred__75968.call(null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__75969)))){\r\nreturn (new taoensso.sente.ChAjaxSocket(G__75943,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75968.cljs$core$IFn$_invoke$arity$2 ? pred__75968.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__75969) : pred__75968.call(null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__75969)))){\r\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,G__75943,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75968.cljs$core$IFn$_invoke$arity$2 ? pred__75968.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__75969) : pred__75968.call(null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__75969)))){\r\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,G__75943,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75968.cljs$core$IFn$_invoke$arity$2 ? pred__75968.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__75969) : pred__75968.call(null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__75969)))){\r\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,G__75943,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75968.cljs$core$IFn$_invoke$arity$2 ? pred__75968.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__75969) : pred__75968.call(null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__75969)))){\r\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,G__75943,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75968.cljs$core$IFn$_invoke$arity$2 ? pred__75968.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__75969) : pred__75968.call(null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__75969)))){\r\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,G__75943,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75968.cljs$core$IFn$_invoke$arity$2 ? pred__75968.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__75969) : pred__75968.call(null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__75969)))){\r\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,G__75943,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75968.cljs$core$IFn$_invoke$arity$2 ? pred__75968.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__75969) : pred__75968.call(null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__75969)))){\r\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,G__75943,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75968.cljs$core$IFn$_invoke$arity$2 ? pred__75968.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__75969) : pred__75968.call(null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__75969)))){\r\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,G__75943,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75968.cljs$core$IFn$_invoke$arity$2 ? pred__75968.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),expr__75969) : pred__75968.call(null,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),expr__75969)))){\r\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,G__75943,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__75968.cljs$core$IFn$_invoke$arity$2 ? pred__75968.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),expr__75969) : pred__75968.call(null,new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),expr__75969)))){\r\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,G__75943,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4388__auto__,G__75943),null));\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4392__auto__){\r\nvar self__ = this;\r\nvar this__4392__auto____$1 = this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),self__.ajax_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),self__.curr_xhr_,null))], null),self__.__extmap));\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4379__auto__,G__75943){\r\nvar self__ = this;\r\nvar this__4379__auto____$1 = this;\r\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,G__75943,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4385__auto__,entry__4386__auto__){\r\nvar self__ = this;\r\nvar this__4385__auto____$1 = this;\r\nif(cljs.core.vector_QMARK_(entry__4386__auto__)){\r\nreturn this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4386__auto__,(0)),cljs.core._nth(entry__4386__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4385__auto____$1,entry__4386__auto__);\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\r\nvar self__ = this;\r\nvar chsk__$1 = this;\r\ncljs.core.reset_BANG_(self__.instance_handle_,null);\r\n\r\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__75934_SHARP_){\r\nreturn taoensso.sente.chsk_state__GT_closed(p1__75934_SHARP_,reason);\r\n}));\r\n\r\nvar temp__5735__auto__ = cljs.core.deref(self__.curr_xhr_);\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar x = temp__5735__auto__;\r\nreturn x.abort();\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\r\nvar self__ = this;\r\nvar chsk__$1 = this;\r\nchsk__$1.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\r\n\r\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\r\nvar self__ = this;\r\nvar chsk__$1 = this;\r\nvar map__75977 = opts;\r\nvar map__75977__$1 = (((((!((map__75977 == null))))?(((((map__75977.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75977.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75977):map__75977);\r\nvar _QMARK_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75977__$1,new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406));\r\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75977__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\r\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75977__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\r\nvar _ = taoensso.sente.assert_send_args(ev,_QMARK_timeout_ms,_QMARK_cb);\r\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\r\nif(cljs.core.not(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))){\r\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\r\n} else {\r\nvar csrf_token = new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_));\r\nvar G__75979_76520 = self__.url;\r\nvar G__75980_76521 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.ajax_opts,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"post\",\"post\",269697687),new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),(function (){var or__4126__auto__ = _QMARK_timeout_ms;\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nvar or__4126__auto____$1 = new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);\r\nif(cljs.core.truth_(or__4126__auto____$1)){\r\nreturn or__4126__auto____$1;\r\n} else {\r\nreturn taoensso.sente.default_client_side_ajax_timeout_ms;\r\n}\r\n}\r\n})(),new cljs.core.Keyword(null,\"resp-type\",\"resp-type\",1050675962),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"X-CSRF-Token\",\"X-CSRF-Token\",1562992453),csrf_token], null)], 0)),new cljs.core.Keyword(null,\"params\",\"params\",710516235),(function (){var ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(self__.packer,ev,(cljs.core.truth_(_QMARK_cb_fn)?new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321):null));\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,new cljs.core.Keyword(null,\"ppstr\",\"ppstr\",1557495252),ppstr], null)], 0));\r\n})()], null)], 0));\r\nvar G__75981_76522 = (function taoensso$sente$ajax_cb(p__75982){\r\nvar map__75983 = p__75982;\r\nvar map__75983__$1 = (((((!((map__75983 == null))))?(((((map__75983.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75983.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75983):map__75983);\r\nvar _QMARK_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75983__$1,new cljs.core.Keyword(null,\"?error\",\"?error\",1070752222));\r\nvar _QMARK_content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75983__$1,new cljs.core.Keyword(null,\"?content\",\"?content\",1697782054));\r\nif(cljs.core.truth_(_QMARK_error)){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_error,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318))){\r\nif(cljs.core.truth_(_QMARK_cb_fn)){\r\nreturn (_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)) : _QMARK_cb_fn.call(null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__75935_SHARP_){\r\nreturn taoensso.sente.chsk_state__GT_closed(p1__75935_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\r\n}));\r\n\r\nif(cljs.core.truth_(_QMARK_cb_fn)){\r\nreturn (_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)) : _QMARK_cb_fn.call(null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)));\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n} else {\r\nvar content = _QMARK_content;\r\nvar resp_ppstr = content;\r\nvar vec__75988 = taoensso.sente.unpack(self__.packer,resp_ppstr);\r\nvar resp_clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75988,(0),null);\r\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75988,(1),null);\r\nif(cljs.core.truth_(_QMARK_cb_fn)){\r\n(_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(resp_clj) : _QMARK_cb_fn.call(null,resp_clj));\r\n} else {\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(resp_clj,new cljs.core.Keyword(\"chsk\",\"dummy-cb-200\",\"chsk/dummy-cb-200\",-1663130337))){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1377,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cb reply w/o local cb-fn: %s\",resp_clj], null);\r\n}),null)),null,119825753);\r\n} else {\r\n}\r\n}\r\n\r\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__75936_SHARP_){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__75936_SHARP_,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true);\r\n}));\r\n}\r\n});\r\n(taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3(G__75979_76520,G__75980_76521,G__75981_76522) : taoensso.sente.ajax_lite.call(null,G__75979_76520,G__75980_76521,G__75981_76522));\r\n\r\nreturn new cljs.core.Keyword(null,\"apparent-success\",\"apparent-success\",242592222);\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\r\nvar self__ = this;\r\nvar chsk__$1 = this;\r\nvar instance_handle = cljs.core.reset_BANG_(self__.instance_handle_,taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0());\r\nvar have_handle_QMARK_ = (function (){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.instance_handle_),instance_handle);\r\n});\r\nvar poll_fn = (function taoensso$sente$poll_fn(retry_count){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,1387,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"async-poll-for-update!\"], null);\r\n}),null)),null,1336520456);\r\n\r\nif(have_handle_QMARK_()){\r\nvar retry_fn = (function (){\r\nif(have_handle_QMARK_()){\r\nvar retry_count_STAR_ = (retry_count + (1));\r\nvar backoff_ms = (self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1 ? self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1(retry_count_STAR_) : self__.backoff_ms_fn.call(null,retry_count_STAR_));\r\nvar udt_next_reconnect = (taoensso.encore.now_udt() + backoff_ms);\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1395,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk is closed: will try reconnect attempt (%s) in %s ms\",retry_count_STAR_,backoff_ms], null);\r\n}),null)),null,-586199204);\r\n\r\ngoog.global.setTimeout((function (){\r\nreturn taoensso$sente$poll_fn(retry_count_STAR_);\r\n}),backoff_ms);\r\n\r\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__75938_SHARP_){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__75938_SHARP_,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733),udt_next_reconnect);\r\n}));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreturn cljs.core.reset_BANG_(self__.curr_xhr_,(function (){var G__75994 = self__.url;\r\nvar G__75995 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.ajax_opts,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"get\",\"get\",1683182755),new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),(function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nreturn taoensso.sente.default_client_side_ajax_timeout_ms;\r\n}\r\n})(),new cljs.core.Keyword(null,\"resp-type\",\"resp-type\",1050675962),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id], null),(cljs.core.truth_(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))?null:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"handshake?\",\"handshake?\",-423743093),true], null))], 0)),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"X-CSRF-Token\",\"X-CSRF-Token\",1562992453),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))], null)], 0))], null)], 0));\r\nvar G__75996 = (function taoensso$sente$poll_fn_$_ajax_cb(p__75997){\r\nvar map__75998 = p__75997;\r\nvar map__75998__$1 = (((((!((map__75998 == null))))?(((((map__75998.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75998.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75998):map__75998);\r\nvar _QMARK_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75998__$1,new cljs.core.Keyword(null,\"?error\",\"?error\",1070752222));\r\nvar _QMARK_content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75998__$1,new cljs.core.Keyword(null,\"?content\",\"?content\",1697782054));\r\nif(cljs.core.truth_(_QMARK_error)){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_error,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318))){\r\nreturn taoensso$sente$poll_fn((0));\r\n} else {\r\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__75941_SHARP_){\r\nreturn taoensso.sente.chsk_state__GT_closed(p1__75941_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\r\n}));\r\n\r\nreturn retry_fn();\r\n\r\n}\r\n} else {\r\nvar content = _QMARK_content;\r\nvar ppstr = content;\r\nvar vec__76000 = taoensso.sente.unpack(self__.packer,ppstr);\r\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76000,(0),null);\r\nvar handshake_QMARK_ = taoensso.sente.handshake_QMARK_(clj);\r\nif(handshake_QMARK_){\r\ntaoensso.sente.receive_handshake_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),chsk__$1,clj);\r\n} else {\r\n}\r\n\r\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__75942_SHARP_){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__75942_SHARP_,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true);\r\n}));\r\n\r\ntaoensso$sente$poll_fn((0));\r\n\r\nif(handshake_QMARK_){\r\nreturn null;\r\n} else {\r\nvar or__4126__auto__ = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clj,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)))?(function (){\r\nif(cljs.core.truth_(cljs.core.deref(taoensso.sente.debug_mode_QMARK__))){\r\ntaoensso.sente.receive_buffered_evs_BANG_(self__.chs,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"debug\",\"timeout\",\"debug/timeout\",309499949)], null)], null));\r\n} else {\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"noop\",\"noop\",-673731258);\r\n})()\r\n:null);\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nvar buffered_evs = clj;\r\nreturn taoensso.sente.receive_buffered_evs_BANG_(self__.chs,buffered_evs);\r\n}\r\n}\r\n}\r\n});\r\nreturn (taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3(G__75994,G__75995,G__75996) : taoensso.sente.ajax_lite.call(null,G__75994,G__75995,G__75996));\r\n})());\r\n} else {\r\nreturn null;\r\n}\r\n});\r\npoll_fn((0));\r\n\r\nreturn chsk__$1;\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"client-id\",\"client-id\",1175909387,null),new cljs.core.Symbol(null,\"chs\",\"chs\",2017417647,null),new cljs.core.Symbol(null,\"params\",\"params\",-1943919534,null),new cljs.core.Symbol(null,\"packer\",\"packer\",1706609071,null),new cljs.core.Symbol(null,\"url\",\"url\",1916828573,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"instance-handle_\",\"instance-handle_\",-282852930,null),new cljs.core.Symbol(null,\"ever-opened?_\",\"ever-opened?_\",-1013096856,null),new cljs.core.Symbol(null,\"backoff-ms-fn\",\"backoff-ms-fn\",-1881539814,null),new cljs.core.Symbol(null,\"ajax-opts\",\"ajax-opts\",1122292418,null),new cljs.core.Symbol(null,\"curr-xhr_\",\"curr-xhr_\",321757831,null)], null);\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.cljs$lang$type = true);\r\n\r\n(taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrSeq = (function (this__4423__auto__){\r\nreturn (new cljs.core.List(null,\"taoensso.sente/ChAjaxSocket\",null,(1),null));\r\n}));\r\n\r\n(taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrWriter = (function (this__4423__auto__,writer__4424__auto__){\r\nreturn cljs.core._write(writer__4424__auto__,\"taoensso.sente/ChAjaxSocket\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for taoensso.sente/ChAjaxSocket.\r\n */\r\ntaoensso.sente.__GT_ChAjaxSocket = (function taoensso$sente$__GT_ChAjaxSocket(client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_){\r\nreturn (new taoensso.sente.ChAjaxSocket(client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values.\r\n */\r\ntaoensso.sente.map__GT_ChAjaxSocket = (function taoensso$sente$map__GT_ChAjaxSocket(G__75947){\r\nvar extmap__4419__auto__ = (function (){var G__76003 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__75947,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696)], 0));\r\nif(cljs.core.record_QMARK_(G__75947)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__76003);\r\n} else {\r\nreturn G__76003;\r\n}\r\n})();\r\nreturn (new taoensso.sente.ChAjaxSocket(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140).cljs$core$IFn$_invoke$arity$1(G__75947),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120).cljs$core$IFn$_invoke$arity$1(G__75947),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(G__75947),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544).cljs$core$IFn$_invoke$arity$1(G__75947),new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(G__75947),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__75947),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457).cljs$core$IFn$_invoke$arity$1(G__75947),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(G__75947),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955).cljs$core$IFn$_invoke$arity$1(G__75947),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109).cljs$core$IFn$_invoke$arity$1(G__75947),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696).cljs$core$IFn$_invoke$arity$1(G__75947),null,cljs.core.not_empty(extmap__4419__auto__),null));\r\n});\r\n\r\ntaoensso.sente.new_ChAjaxSocket = (function taoensso$sente$new_ChAjaxSocket(opts,csrf_token){\r\nreturn taoensso.sente.map__GT_ChAjaxSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {taoensso.sente.IChSocket}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ntaoensso.sente.ChAutoSocket = (function (ws_chsk_opts,ajax_chsk_opts,state_,impl_,__meta,__extmap,__hash){\r\nthis.ws_chsk_opts = ws_chsk_opts;\r\nthis.ajax_chsk_opts = ajax_chsk_opts;\r\nthis.state_ = state_;\r\nthis.impl_ = impl_;\r\nthis.__meta = __meta;\r\nthis.__extmap = __extmap;\r\nthis.__hash = __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\r\n});\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4380__auto__,k__4381__auto__){\r\nvar self__ = this;\r\nvar this__4380__auto____$1 = this;\r\nreturn this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4381__auto__,null);\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4382__auto__,k76005,else__4383__auto__){\r\nvar self__ = this;\r\nvar this__4382__auto____$1 = this;\r\nvar G__76009 = k76005;\r\nvar G__76009__$1 = (((G__76009 instanceof cljs.core.Keyword))?G__76009.fqn:null);\r\nswitch (G__76009__$1) {\r\ncase \"ws-chsk-opts\":\r\nreturn self__.ws_chsk_opts;\r\n\r\nbreak;\r\ncase \"ajax-chsk-opts\":\r\nreturn self__.ajax_chsk_opts;\r\n\r\nbreak;\r\ncase \"state_\":\r\nreturn self__.state_;\r\n\r\nbreak;\r\ncase \"impl_\":\r\nreturn self__.impl_;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k76005,else__4383__auto__);\r\n\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4399__auto__,f__4400__auto__,init__4401__auto__){\r\nvar self__ = this;\r\nvar this__4399__auto____$1 = this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4402__auto__,p__76010){\r\nvar vec__76011 = p__76010;\r\nvar k__4403__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76011,(0),null);\r\nvar v__4404__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76011,(1),null);\r\nreturn (f__4400__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4400__auto__.cljs$core$IFn$_invoke$arity$3(ret__4402__auto__,k__4403__auto__,v__4404__auto__) : f__4400__auto__.call(null,ret__4402__auto__,k__4403__auto__,v__4404__auto__));\r\n}),init__4401__auto__,this__4399__auto____$1);\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4394__auto__,writer__4395__auto__,opts__4396__auto__){\r\nvar self__ = this;\r\nvar this__4394__auto____$1 = this;\r\nvar pr_pair__4397__auto__ = (function (keyval__4398__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4395__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4396__auto__,keyval__4398__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4395__auto__,pr_pair__4397__auto__,\"#taoensso.sente.ChAutoSocket{\",\", \",\"}\",opts__4396__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),self__.ws_chsk_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),self__.ajax_chsk_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),self__.impl_],null))], null),self__.__extmap));\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__76004){\r\nvar self__ = this;\r\nvar G__76004__$1 = this;\r\nreturn (new cljs.core.RecordIter((0),G__76004__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4378__auto__){\r\nvar self__ = this;\r\nvar this__4378__auto____$1 = this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4375__auto__){\r\nvar self__ = this;\r\nvar this__4375__auto____$1 = this;\r\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4384__auto__){\r\nvar self__ = this;\r\nvar this__4384__auto____$1 = this;\r\nreturn (4 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4376__auto__){\r\nvar self__ = this;\r\nvar this__4376__auto____$1 = this;\r\nvar h__4238__auto__ = self__.__hash;\r\nif((!((h__4238__auto__ == null)))){\r\nreturn h__4238__auto__;\r\n} else {\r\nvar h__4238__auto____$1 = (function (coll__4377__auto__){\r\nreturn (-1193508708 ^ cljs.core.hash_unordered_coll(coll__4377__auto__));\r\n})(this__4376__auto____$1);\r\n(self__.__hash = h__4238__auto____$1);\r\n\r\nreturn h__4238__auto____$1;\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this76006,other76007){\r\nvar self__ = this;\r\nvar this76006__$1 = this;\r\nreturn (((!((other76007 == null)))) && ((this76006__$1.constructor === other76007.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76006__$1.ws_chsk_opts,other76007.ws_chsk_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76006__$1.ajax_chsk_opts,other76007.ajax_chsk_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76006__$1.state_,other76007.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76006__$1.impl_,other76007.impl_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this76006__$1.__extmap,other76007.__extmap)));\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4389__auto__,k__4390__auto__){\r\nvar self__ = this;\r\nvar this__4389__auto____$1 = this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),null,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),null], null), null),k__4390__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4389__auto____$1),self__.__meta),k__4390__auto__);\r\n} else {\r\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4390__auto__)),null));\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4387__auto__,k__4388__auto__,G__76004){\r\nvar self__ = this;\r\nvar this__4387__auto____$1 = this;\r\nvar pred__76014 = cljs.core.keyword_identical_QMARK_;\r\nvar expr__76015 = k__4388__auto__;\r\nif(cljs.core.truth_((pred__76014.cljs$core$IFn$_invoke$arity$2 ? pred__76014.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),expr__76015) : pred__76014.call(null,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),expr__76015)))){\r\nreturn (new taoensso.sente.ChAutoSocket(G__76004,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__76014.cljs$core$IFn$_invoke$arity$2 ? pred__76014.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),expr__76015) : pred__76014.call(null,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),expr__76015)))){\r\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,G__76004,self__.state_,self__.impl_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__76014.cljs$core$IFn$_invoke$arity$2 ? pred__76014.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__76015) : pred__76014.call(null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__76015)))){\r\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,G__76004,self__.impl_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__76014.cljs$core$IFn$_invoke$arity$2 ? pred__76014.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),expr__76015) : pred__76014.call(null,new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),expr__76015)))){\r\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,G__76004,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4388__auto__,G__76004),null));\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4392__auto__){\r\nvar self__ = this;\r\nvar this__4392__auto____$1 = this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),self__.ws_chsk_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),self__.ajax_chsk_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),self__.impl_,null))], null),self__.__extmap));\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4379__auto__,G__76004){\r\nvar self__ = this;\r\nvar this__4379__auto____$1 = this;\r\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,G__76004,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4385__auto__,entry__4386__auto__){\r\nvar self__ = this;\r\nvar this__4385__auto____$1 = this;\r\nif(cljs.core.vector_QMARK_(entry__4386__auto__)){\r\nreturn this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4386__auto__,(0)),cljs.core._nth(entry__4386__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4385__auto____$1,entry__4386__auto__);\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\r\nvar self__ = this;\r\nvar chsk__$1 = this;\r\nvar temp__5735__auto__ = cljs.core.deref(self__.impl_);\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar impl = temp__5735__auto__;\r\nreturn taoensso.sente._chsk_disconnect_BANG_(impl,reason);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\r\nvar self__ = this;\r\nvar chsk__$1 = this;\r\nvar temp__5735__auto__ = cljs.core.deref(self__.impl_);\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar impl = temp__5735__auto__;\r\ntaoensso.sente._chsk_disconnect_BANG_(impl,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\r\n\r\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\r\nvar self__ = this;\r\nvar chsk__$1 = this;\r\nvar temp__5733__auto__ = cljs.core.deref(self__.impl_);\r\nif(cljs.core.truth_(temp__5733__auto__)){\r\nvar impl = temp__5733__auto__;\r\nreturn taoensso.sente._chsk_send_BANG_(impl,ev,opts);\r\n} else {\r\nvar map__76017 = opts;\r\nvar map__76017__$1 = (((((!((map__76017 == null))))?(((((map__76017.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__76017.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__76017):map__76017);\r\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76017__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\r\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\r\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\r\n}\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\r\nvar self__ = this;\r\nvar chsk__$1 = this;\r\nvar ajax_chsk_opts__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.ajax_chsk_opts,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_);\r\nvar ws_chsk_opts__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.ws_chsk_opts,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_);\r\nvar ajax_conn_BANG_ = (function (){\r\ncljs.core.remove_watch(self__.state_,new cljs.core.Keyword(\"chsk\",\"auto-ajax-downgrade\",\"chsk/auto-ajax-downgrade\",-831528080));\r\n\r\nreturn taoensso.sente.new_ChAjaxSocket(ajax_chsk_opts__$1,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))).taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\r\n});\r\nvar ws_conn_BANG_ = (function (){\r\nvar downgraded_QMARK___76524 = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\r\ncljs.core.add_watch(self__.state_,new cljs.core.Keyword(\"chsk\",\"auto-ajax-downgrade\",\"chsk/auto-ajax-downgrade\",-831528080),(function (_,___$1,old_state,new_state){\r\nvar temp__5735__auto__ = cljs.core.deref(self__.impl_);\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar impl = temp__5735__auto__;\r\nvar temp__5735__auto____$1 = new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(impl);\r\nif(cljs.core.truth_(temp__5735__auto____$1)){\r\nvar ever_opened_QMARK__ = temp__5735__auto____$1;\r\nif(cljs.core.truth_(cljs.core.deref(ever_opened_QMARK__))){\r\nreturn null;\r\n} else {\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"last-ws-error\",\"last-ws-error\",-820288502).cljs$core$IFn$_invoke$arity$1(new_state))){\r\nif(cljs.core.compare_and_set_BANG_(downgraded_QMARK___76524,false,true)){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1528,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Permanently downgrading :auto chsk -> :ajax\"], null);\r\n}),null)),null,1689124441);\r\n\r\ntaoensso.sente._chsk_disconnect_BANG_(impl,new cljs.core.Keyword(null,\"downgrading-ws-to-ajax\",\"downgrading-ws-to-ajax\",402136720));\r\n\r\nreturn cljs.core.reset_BANG_(self__.impl_,ajax_conn_BANG_());\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\nreturn taoensso.sente.new_ChWebSocket(ws_chsk_opts__$1,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))).taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\r\n});\r\ncljs.core.reset_BANG_(self__.impl_,(function (){var or__4126__auto__ = ws_conn_BANG_();\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nreturn ajax_conn_BANG_();\r\n}\r\n})());\r\n\r\nreturn chsk__$1;\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-349638577,null),new cljs.core.Symbol(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",-1051844442,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"impl_\",\"impl_\",-1435617590,null)], null);\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.cljs$lang$type = true);\r\n\r\n(taoensso.sente.ChAutoSocket.cljs$lang$ctorPrSeq = (function (this__4423__auto__){\r\nreturn (new cljs.core.List(null,\"taoensso.sente/ChAutoSocket\",null,(1),null));\r\n}));\r\n\r\n(taoensso.sente.ChAutoSocket.cljs$lang$ctorPrWriter = (function (this__4423__auto__,writer__4424__auto__){\r\nreturn cljs.core._write(writer__4424__auto__,\"taoensso.sente/ChAutoSocket\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for taoensso.sente/ChAutoSocket.\r\n */\r\ntaoensso.sente.__GT_ChAutoSocket = (function taoensso$sente$__GT_ChAutoSocket(ws_chsk_opts,ajax_chsk_opts,state_,impl_){\r\nreturn (new taoensso.sente.ChAutoSocket(ws_chsk_opts,ajax_chsk_opts,state_,impl_,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values.\r\n */\r\ntaoensso.sente.map__GT_ChAutoSocket = (function taoensso$sente$map__GT_ChAutoSocket(G__76008){\r\nvar extmap__4419__auto__ = (function (){var G__76019 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__76008,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179)], 0));\r\nif(cljs.core.record_QMARK_(G__76008)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__76019);\r\n} else {\r\nreturn G__76019;\r\n}\r\n})();\r\nreturn (new taoensso.sente.ChAutoSocket(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104).cljs$core$IFn$_invoke$arity$1(G__76008),new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327).cljs$core$IFn$_invoke$arity$1(G__76008),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__76008),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179).cljs$core$IFn$_invoke$arity$1(G__76008),null,cljs.core.not_empty(extmap__4419__auto__),null));\r\n});\r\n\r\ntaoensso.sente.new_ChAutoSocket = (function taoensso$sente$new_ChAutoSocket(opts,csrf_token){\r\nreturn taoensso.sente.map__GT_ChAutoSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\r\n});\r\ntaoensso.sente.get_chsk_url = (function taoensso$sente$get_chsk_url(protocol,host,path,type){\r\nvar protocol__$1 = (function (){var G__76020 = protocol;\r\nvar G__76020__$1 = (((G__76020 instanceof cljs.core.Keyword))?G__76020.fqn:null);\r\nswitch (G__76020__$1) {\r\ncase \"http\":\r\nreturn \"http:\";\r\n\r\nbreak;\r\ncase \"https\":\r\nreturn \"https:\";\r\n\r\nbreak;\r\ndefault:\r\nreturn protocol;\r\n\r\n}\r\n})();\r\nvar protocol__$2 = (function (){var e = (function (){try{if((function (x){\r\nreturn cljs.core.contains_QMARK_((function (){var G__76022 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"https:\",null,\"http:\",null], null), null);\r\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__76022) : taoensso.truss.impl.set_STAR_.call(null,G__76022));\r\n})(),x);\r\n})(protocol__$1)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e76021){if((e76021 instanceof Error)){\r\nvar e = e76021;\r\nreturn e;\r\n} else {\r\nthrow e76021;\r\n\r\n}\r\n}})();\r\nif((e == null)){\r\nreturn protocol__$1;\r\n} else {\r\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1547,\"([:el #{\\\"https:\\\" \\\"http:\\\"}] protocol)\",protocol__$1,e,null);\r\n}\r\n})();\r\nvar protocol__$3 = (function (){var G__76023 = type;\r\nvar G__76023__$1 = (((G__76023 instanceof cljs.core.Keyword))?G__76023.fqn:null);\r\nswitch (G__76023__$1) {\r\ncase \"ajax\":\r\nreturn protocol__$2;\r\n\r\nbreak;\r\ncase \"ws\":\r\nvar G__76024 = protocol__$2;\r\nswitch (G__76024) {\r\ncase \"https:\":\r\nreturn \"wss:\";\r\n\r\nbreak;\r\ncase \"http:\":\r\nreturn \"ws:\";\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__76024)].join('')));\r\n\r\n}\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__76023__$1)].join('')));\r\n\r\n}\r\n})();\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol__$3),\"//\",taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([host,path], 0))].join('');\r\n});\r\n/**\r\n * Returns nil on failure, or a map with keys:\r\n *     :ch-recv ; core.async channel to receive `event-msg`s (internal or from\r\n *              ; clients). May `put!` (inject) arbitrary `event`s to this channel.\r\n *     :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\r\n *     :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\r\n *     :chsk    ; IChSocket implementer. You can usu. ignore this.\r\n * \r\n *   Common options:\r\n *     :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\r\n *     :protocol       ; Server protocol, e/o #{:http :https}.\r\n *     :host           ; Server host (defaults to current page's host).\r\n *     :port           ; Server port (defaults to current page's port).\r\n *     :params         ; Map of any params to incl. in chsk Ring requests (handy\r\n *                     ; for application-level auth, etc.).\r\n *     :headers        ; Map of additional headers to include in the initiating request\r\n *                     ; (currently only for Java clients).\r\n *     :packer         ; :edn (default), or an IPacker implementation.\r\n *     :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\r\n *     :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\r\n *     :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\r\n *                     ; w/in given msecs. Should be different to server's :ws-kalive-ms.\r\n */\r\ntaoensso.sente.make_channel_socket_client_BANG_ = (function taoensso$sente$make_channel_socket_client_BANG_(var_args){\r\nvar args__4742__auto__ = [];\r\nvar len__4736__auto___76528 = arguments.length;\r\nvar i__4737__auto___76529 = (0);\r\nwhile(true){\r\nif((i__4737__auto___76529 < len__4736__auto___76528)){\r\nargs__4742__auto__.push((arguments[i__4737__auto___76529]));\r\n\r\nvar G__76530 = (i__4737__auto___76529 + (1));\r\ni__4737__auto___76529 = G__76530;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\r\nreturn taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\r\n});\r\n\r\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (path,_QMARK_csrf_token,p__76028){\r\nvar vec__76029 = p__76028;\r\nvar map__76032 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76029,(0),null);\r\nvar map__76032__$1 = (((((!((map__76032 == null))))?(((((map__76032.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__76032.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__76032):map__76032);\r\nvar opts = map__76032__$1;\r\nvar ajax_opts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76032__$1,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109));\r\nvar ws_kalive_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__76032__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(20)], 0)));\r\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__76032__$1,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),(function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"client-uuid\",\"client-uuid\",-1717531965).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nreturn taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();\r\n}\r\n})());\r\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76032__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\r\nvar packer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__76032__$1,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885));\r\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76032__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\r\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__76032__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492));\r\nvar port = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76032__$1,new cljs.core.Keyword(null,\"port\",\"port\",1534937262));\r\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76032__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\r\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76032__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\r\nvar recv_buf_or_n = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__76032__$1,new cljs.core.Keyword(null,\"recv-buf-or-n\",\"recv-buf-or-n\",1363950355),cljs.core.async.sliding_buffer((2048)));\r\nvar backoff_ms_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__76032__$1,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),taoensso.encore.exp_backoff);\r\nvar wrap_recv_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__76032__$1,new cljs.core.Keyword(null,\"wrap-recv-evs?\",\"wrap-recv-evs?\",-1996694153),true);\r\nvar _deprecated_more_opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76029,(1),null);\r\nvar e_76531 = (function (){try{if((function (x){\r\nreturn cljs.core.contains_QMARK_((function (){var G__76035 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),null,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),null,new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),null], null), null);\r\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__76035) : taoensso.truss.impl.set_STAR_.call(null,G__76035));\r\n})(),x);\r\n})(type)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e76034){if((e76034 instanceof Error)){\r\nvar e_76531 = e76034;\r\nreturn e_76531;\r\n} else {\r\nthrow e76034;\r\n\r\n}\r\n}})();\r\nif((e_76531 == null)){\r\n} else {\r\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1591,\"([:in #{:ws :ajax :auto}] type)\",type,e_76531,null);\r\n}\r\n\r\nvar e_76532 = (function (){try{if(taoensso.encore.nblank_str_QMARK_(client_id)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e76036){if((e76036 instanceof Error)){\r\nvar e_76532 = e76036;\r\nreturn e_76532;\r\n} else {\r\nthrow e76036;\r\n\r\n}\r\n}})();\r\nif((e_76532 == null)){\r\n} else {\r\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1592,\"(enc/nblank-str? client-id)\",client_id,e_76532,null);\r\n}\r\n\r\nif((!((_deprecated_more_opts == null)))){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1594,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0.\"], null);\r\n}),null)),null,1545723396);\r\n} else {\r\n}\r\n\r\nif(cljs.core.contains_QMARK_(opts,new cljs.core.Keyword(null,\"lp-timeout\",\"lp-timeout\",1149461302))){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1595,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\":lp-timeout opt has CHANGED; please use :lp-timout-ms.\"], null);\r\n}),null)),null,-1784399423);\r\n} else {\r\n}\r\n\r\nif((((!(typeof _QMARK_csrf_token === 'string'))) || (clojure.string.blank_QMARK_(_QMARK_csrf_token)))){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1598,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"WARNING: no CSRF token provided. Connections will FAIL if server-side CSRF check is enabled (as it is by default).\"], null);\r\n}),null)),null,-1220203327);\r\n} else {\r\n}\r\n\r\nvar packer__$1 = taoensso.sente.coerce_packer(packer);\r\nvar vec__76037 = (function (){var win_loc = taoensso.encore.get_win_loc();\r\nvar path__$1 = (function (){var z = (function (){try{var or__4126__auto__ = path;\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"pathname\",\"pathname\",-1420497528).cljs$core$IFn$_invoke$arity$1(win_loc);\r\n}\r\n}catch (e76040){if((e76040 instanceof Error)){\r\nvar e = e76040;\r\nreturn (new taoensso.truss.impl.WrappedError(e));\r\n} else {\r\nthrow e76040;\r\n\r\n}\r\n}})();\r\nvar e = (function (){try{if((z instanceof taoensso.truss.impl.WrappedError)){\r\nreturn z;\r\n} else {\r\nif(taoensso.truss.impl.some_QMARK_(z)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}\r\n}catch (e76041){if((e76041 instanceof Error)){\r\nvar e = e76041;\r\nreturn e;\r\n} else {\r\nthrow e76041;\r\n\r\n}\r\n}})();\r\nif((e == null)){\r\nreturn z;\r\n} else {\r\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1606,\"(taoensso.truss.impl/some? (or path (:pathname win-loc)))\",z,e,null);\r\n}\r\n})();\r\nvar temp__5733__auto__ = new cljs.core.Keyword(null,\"chsk-url-fn\",\"chsk-url-fn\",1968894294).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(temp__5733__auto__)){\r\nvar f = temp__5733__auto__;\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(path__$1,win_loc,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443)) : f.call(null,path__$1,win_loc,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443))),(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(path__$1,win_loc,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)) : f.call(null,path__$1,win_loc,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)))], null);\r\n} else {\r\nvar protocol__$1 = (function (){var or__4126__auto__ = protocol;\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nvar or__4126__auto____$1 = new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(win_loc);\r\nif(cljs.core.truth_(or__4126__auto____$1)){\r\nreturn or__4126__auto____$1;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"http\",\"http\",382524695);\r\n}\r\n}\r\n})();\r\nvar host__$1 = (cljs.core.truth_(host)?(cljs.core.truth_(port)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(host),\":\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(port)].join(''):host):(cljs.core.truth_(port)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"hostname\",\"hostname\",2105669933).cljs$core$IFn$_invoke$arity$1(win_loc)),\":\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(port)].join(''):new cljs.core.Keyword(null,\"host\",\"host\",-1558485167).cljs$core$IFn$_invoke$arity$1(win_loc)));\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.sente.get_chsk_url(protocol__$1,host__$1,path__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443)),taoensso.sente.get_chsk_url(protocol__$1,host__$1,path__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549))], null);\r\n}\r\n})();\r\nvar ws_url = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76037,(0),null);\r\nvar ajax_url = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76037,(1),null);\r\nvar private_chs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097),cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.sliding_buffer((128))),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.sliding_buffer((10))),new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537),(function (){var buf = cljs.core.async.sliding_buffer((512));\r\nif(cljs.core.truth_(wrap_recv_evs_QMARK_)){\r\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(buf,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (ev){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"recv\",\"chsk/recv\",561097091),ev], null);\r\n})));\r\n} else {\r\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf);\r\n}\r\n})()], null);\r\nvar common_chsk_opts = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),private_chs,new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),headers,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),packer__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),ws_kalive_ms], null);\r\nvar ws_chsk_opts = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([common_chsk_opts,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),ws_url,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),backoff_ms_fn], null)], 0));\r\nvar ajax_chsk_opts = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([common_chsk_opts,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),ajax_url,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),ajax_opts,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),backoff_ms_fn], null)], 0));\r\nvar auto_chsk_opts = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),ws_chsk_opts,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),ajax_chsk_opts], null);\r\nvar _QMARK_chsk = taoensso.sente._chsk_connect_BANG_((function (){var G__76042 = type;\r\nvar G__76042__$1 = (((G__76042 instanceof cljs.core.Keyword))?G__76042.fqn:null);\r\nswitch (G__76042__$1) {\r\ncase \"ws\":\r\nreturn taoensso.sente.new_ChWebSocket(ws_chsk_opts,_QMARK_csrf_token);\r\n\r\nbreak;\r\ncase \"ajax\":\r\nreturn taoensso.sente.new_ChAjaxSocket(ajax_chsk_opts,_QMARK_csrf_token);\r\n\r\nbreak;\r\ncase \"auto\":\r\nreturn taoensso.sente.new_ChAutoSocket(auto_chsk_opts,_QMARK_csrf_token);\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__76042__$1)].join('')));\r\n\r\n}\r\n})());\r\nvar temp__5733__auto__ = _QMARK_chsk;\r\nif(cljs.core.truth_(temp__5733__auto__)){\r\nvar chsk = temp__5733__auto__;\r\nvar chsk_state_ = new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk);\r\nvar internal_ch = new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(private_chs);\r\nvar send_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(taoensso.sente.chsk_send_BANG_,chsk);\r\nvar ev_ch = cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(private_chs),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(private_chs),new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(private_chs)], null),recv_buf_or_n);\r\nvar ev_msg_ch = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2((1),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (ev){\r\nvar vec__76043 = taoensso.sente.as_event(ev);\r\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76043,(0),null);\r\nvar ev__QMARK_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76043,(1),null);\r\nvar ev__$1 = vec__76043;\r\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),internal_ch,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),chsk_state_,new cljs.core.Keyword(null,\"event\",\"event\",301435442),ev__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),ev_id,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),ev__QMARK_data], null);\r\n})));\r\ncljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(ev_ch,ev_msg_ch);\r\n\r\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"chsk\",\"chsk\",-863703081),chsk,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ev_msg_ch,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk)], null);\r\n} else {\r\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1700,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Failed to create channel socket\"], null);\r\n}),null)),null,313433032);\r\n}\r\n}));\r\n\r\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$applyTo = (function (seq76025){\r\nvar G__76026 = cljs.core.first(seq76025);\r\nvar seq76025__$1 = cljs.core.next(seq76025);\r\nvar G__76027 = cljs.core.first(seq76025__$1);\r\nvar seq76025__$2 = cljs.core.next(seq76025__$1);\r\nvar self__4723__auto__ = this;\r\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__76026,G__76027,seq76025__$2);\r\n}));\r\n\r\ntaoensso.sente._start_chsk_router_BANG_ = (function taoensso$sente$_start_chsk_router_BANG_(server_QMARK_,ch_recv,event_msg_handler,opts){\r\nvar map__76046 = opts;\r\nvar map__76046__$1 = (((((!((map__76046 == null))))?(((((map__76046.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__76046.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__76046):map__76046);\r\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76046__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\r\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76046__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\r\nvar simple_auto_threading_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76046__$1,new cljs.core.Keyword(null,\"simple-auto-threading?\",\"simple-auto-threading?\",1950754184));\r\nvar ch_ctrl = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\r\nvar execute1 = (function (f){\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n});\r\nvar c__73714__auto___76534 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run((function (){\r\nvar f__73715__auto__ = (function (){var switch__73644__auto__ = (function (state_76095){\r\nvar state_val_76096 = (state_76095[(1)]);\r\nif((state_val_76096 === (7))){\r\nvar inst_76091 = (state_76095[(2)]);\r\nvar state_76095__$1 = state_76095;\r\nvar statearr_76097_76535 = state_76095__$1;\r\n(statearr_76097_76535[(2)] = inst_76091);\r\n\r\n(statearr_76097_76535[(1)] = (3));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_76096 === (1))){\r\nvar state_76095__$1 = state_76095;\r\nvar statearr_76098_76536 = state_76095__$1;\r\n(statearr_76098_76536[(2)] = null);\r\n\r\n(statearr_76098_76536[(1)] = (2));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_76096 === (4))){\r\nvar inst_76061 = (state_76095[(7)]);\r\nvar inst_76058 = (state_76095[(8)]);\r\nvar inst_76057 = (state_76095[(9)]);\r\nvar inst_76056 = (state_76095[(10)]);\r\nvar inst_76056__$1 = (state_76095[(2)]);\r\nvar inst_76057__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_76056__$1,(0),null);\r\nvar inst_76058__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_76056__$1,(1),null);\r\nvar inst_76059 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_76058__$1,ch_ctrl);\r\nvar inst_76060 = (inst_76057__$1 == null);\r\nvar inst_76061__$1 = ((inst_76059) || (inst_76060));\r\nvar state_76095__$1 = (function (){var statearr_76099 = state_76095;\r\n(statearr_76099[(7)] = inst_76061__$1);\r\n\r\n(statearr_76099[(8)] = inst_76058__$1);\r\n\r\n(statearr_76099[(9)] = inst_76057__$1);\r\n\r\n(statearr_76099[(10)] = inst_76056__$1);\r\n\r\nreturn statearr_76099;\r\n})();\r\nif(cljs.core.truth_(inst_76061__$1)){\r\nvar statearr_76100_76537 = state_76095__$1;\r\n(statearr_76100_76537[(1)] = (5));\r\n\r\n} else {\r\nvar statearr_76101_76538 = state_76095__$1;\r\n(statearr_76101_76538[(1)] = (6));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_76096 === (15))){\r\nvar inst_76057 = (state_76095[(9)]);\r\nvar state_76095__$1 = state_76095;\r\nvar statearr_76102_76539 = state_76095__$1;\r\n(statearr_76102_76539[(2)] = inst_76057);\r\n\r\n(statearr_76102_76539[(1)] = (16));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_76096 === (13))){\r\nvar inst_76077 = (state_76095[(2)]);\r\nvar state_76095__$1 = state_76095;\r\nvar statearr_76103_76540 = state_76095__$1;\r\n(statearr_76103_76540[(2)] = inst_76077);\r\n\r\n(statearr_76103_76540[(1)] = (10));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_76096 === (6))){\r\nvar inst_76057 = (state_76095[(9)]);\r\nvar inst_76066 = (inst_76057 == null);\r\nvar inst_76067 = cljs.core.not(inst_76066);\r\nvar state_76095__$1 = state_76095;\r\nif(inst_76067){\r\nvar statearr_76104_76541 = state_76095__$1;\r\n(statearr_76104_76541[(1)] = (8));\r\n\r\n} else {\r\nvar statearr_76105_76542 = state_76095__$1;\r\n(statearr_76105_76542[(1)] = (9));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_76096 === (3))){\r\nvar inst_76093 = (state_76095[(2)]);\r\nvar state_76095__$1 = state_76095;\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_76095__$1,inst_76093);\r\n} else {\r\nif((state_val_76096 === (12))){\r\nvar state_76095__$1 = state_76095;\r\nvar statearr_76106_76543 = state_76095__$1;\r\n(statearr_76106_76543[(2)] = false);\r\n\r\n(statearr_76106_76543[(1)] = (13));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_76096 === (2))){\r\nvar inst_76052 = cljs.core.PersistentVector.EMPTY_NODE;\r\nvar inst_76053 = [ch_recv,ch_ctrl];\r\nvar inst_76054 = (new cljs.core.PersistentVector(null,2,(5),inst_76052,inst_76053,null));\r\nvar state_76095__$1 = state_76095;\r\nreturn cljs.core.async.ioc_alts_BANG_(state_76095__$1,(4),inst_76054);\r\n} else {\r\nif((state_val_76096 === (11))){\r\nvar state_76095__$1 = state_76095;\r\nvar statearr_76107_76544 = state_76095__$1;\r\n(statearr_76107_76544[(2)] = true);\r\n\r\n(statearr_76107_76544[(1)] = (13));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_76096 === (9))){\r\nvar state_76095__$1 = state_76095;\r\nvar statearr_76108_76545 = state_76095__$1;\r\n(statearr_76108_76545[(2)] = false);\r\n\r\n(statearr_76108_76545[(1)] = (10));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_76096 === (5))){\r\nvar state_76095__$1 = state_76095;\r\nvar statearr_76109_76546 = state_76095__$1;\r\n(statearr_76109_76546[(2)] = null);\r\n\r\n(statearr_76109_76546[(1)] = (7));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_76096 === (14))){\r\nvar inst_76057 = (state_76095[(9)]);\r\nvar inst_76082 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,inst_76057);\r\nvar state_76095__$1 = state_76095;\r\nvar statearr_76110_76547 = state_76095__$1;\r\n(statearr_76110_76547[(2)] = inst_76082);\r\n\r\n(statearr_76110_76547[(1)] = (16));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_76096 === (16))){\r\nvar inst_76061 = (state_76095[(7)]);\r\nvar inst_76058 = (state_76095[(8)]);\r\nvar inst_76057 = (state_76095[(9)]);\r\nvar inst_76056 = (state_76095[(10)]);\r\nvar inst_76085 = (state_76095[(2)]);\r\nvar inst_76086 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_76085,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\r\nvar inst_76087 = (function (){var vec__76049 = inst_76056;\r\nvar v = inst_76057;\r\nvar p = inst_76058;\r\nvar stop_QMARK_ = inst_76061;\r\nvar map__76064 = inst_76085;\r\nvar event_msg = inst_76085;\r\nvar event = inst_76086;\r\nreturn (function (){\r\ntry{if(cljs.core.truth_(trace_evs_QMARK_)){\r\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,1727,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Pre-handler event: %s\",event], null);\r\n}),null)),null,512724524);\r\n} else {\r\n}\r\n\r\nvar G__76113 = (cljs.core.truth_(server_QMARK_)?(function (){var e = (function (){try{if(taoensso.sente.server_event_msg_QMARK_(event_msg)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e76114){if((e76114 instanceof Error)){\r\nvar e = e76114;\r\nreturn e;\r\n} else {\r\nthrow e76114;\r\n\r\n}\r\n}})();\r\nif((e == null)){\r\nreturn event_msg;\r\n} else {\r\nreturn taoensso.truss.impl._invar_violation_BANG_(null,\"taoensso.sente\",1730,\"(server-event-msg? event-msg)\",event_msg,e,null);\r\n}\r\n})():(function (){var e = (function (){try{if(taoensso.sente.client_event_msg_QMARK_(event_msg)){\r\nreturn null;\r\n} else {\r\nreturn taoensso.truss.impl._dummy_error;\r\n}\r\n}catch (e76115){if((e76115 instanceof Error)){\r\nvar e = e76115;\r\nreturn e;\r\n} else {\r\nthrow e76115;\r\n\r\n}\r\n}})();\r\nif((e == null)){\r\nreturn event_msg;\r\n} else {\r\nreturn taoensso.truss.impl._invar_violation_BANG_(null,\"taoensso.sente\",1731,\"(client-event-msg? event-msg)\",event_msg,e,null);\r\n}\r\n})());\r\nreturn (event_msg_handler.cljs$core$IFn$_invoke$arity$1 ? event_msg_handler.cljs$core$IFn$_invoke$arity$1(G__76113) : event_msg_handler.call(null,G__76113));\r\n}catch (e76111){var e1 = e76111;\r\ntry{var temp__5733__auto__ = error_handler;\r\nif(cljs.core.truth_(temp__5733__auto__)){\r\nvar eh = temp__5733__auto__;\r\nreturn (error_handler.cljs$core$IFn$_invoke$arity$2 ? error_handler.cljs$core$IFn$_invoke$arity$2(e1,event_msg) : error_handler.call(null,e1,event_msg));\r\n} else {\r\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1736,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e1,\"Chsk router `event-msg-handler` error: %s\",event], null);\r\n}),null)),null,2107341835);\r\n}\r\n}catch (e76112){var e2 = e76112;\r\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1737,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e2,\"Chsk router `error-handler` error: %s\",event], null);\r\n}),null)),null,272611771);\r\n}}});\r\n})();\r\nvar inst_76088 = execute1(inst_76087);\r\nvar state_76095__$1 = (function (){var statearr_76116 = state_76095;\r\n(statearr_76116[(11)] = inst_76088);\r\n\r\nreturn statearr_76116;\r\n})();\r\nvar statearr_76117_76548 = state_76095__$1;\r\n(statearr_76117_76548[(2)] = null);\r\n\r\n(statearr_76117_76548[(1)] = (2));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_76096 === (10))){\r\nvar inst_76080 = (state_76095[(2)]);\r\nvar state_76095__$1 = state_76095;\r\nif(cljs.core.truth_(inst_76080)){\r\nvar statearr_76118_76549 = state_76095__$1;\r\n(statearr_76118_76549[(1)] = (14));\r\n\r\n} else {\r\nvar statearr_76119_76550 = state_76095__$1;\r\n(statearr_76119_76550[(1)] = (15));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_76096 === (8))){\r\nvar inst_76057 = (state_76095[(9)]);\r\nvar inst_76069 = inst_76057.cljs$lang$protocol_mask$partition0$;\r\nvar inst_76070 = (inst_76069 & (64));\r\nvar inst_76071 = inst_76057.cljs$core$ISeq$;\r\nvar inst_76072 = (cljs.core.PROTOCOL_SENTINEL === inst_76071);\r\nvar inst_76073 = ((inst_76070) || (inst_76072));\r\nvar state_76095__$1 = state_76095;\r\nif(cljs.core.truth_(inst_76073)){\r\nvar statearr_76120_76551 = state_76095__$1;\r\n(statearr_76120_76551[(1)] = (11));\r\n\r\n} else {\r\nvar statearr_76121_76552 = state_76095__$1;\r\n(statearr_76121_76552[(1)] = (12));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreturn (function() {\r\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__73645__auto__ = null;\r\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__73645__auto____0 = (function (){\r\nvar statearr_76122 = [null,null,null,null,null,null,null,null,null,null,null,null];\r\n(statearr_76122[(0)] = taoensso$sente$_start_chsk_router_BANG__$_state_machine__73645__auto__);\r\n\r\n(statearr_76122[(1)] = (1));\r\n\r\nreturn statearr_76122;\r\n});\r\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__73645__auto____1 = (function (state_76095){\r\nwhile(true){\r\nvar ret_value__73646__auto__ = (function (){try{while(true){\r\nvar result__73647__auto__ = switch__73644__auto__(state_76095);\r\nif(cljs.core.keyword_identical_QMARK_(result__73647__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__73647__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e76123){var ex__73648__auto__ = e76123;\r\nvar statearr_76124_76553 = state_76095;\r\n(statearr_76124_76553[(2)] = ex__73648__auto__);\r\n\r\n\r\nif(cljs.core.seq((state_76095[(4)]))){\r\nvar statearr_76125_76554 = state_76095;\r\n(statearr_76125_76554[(1)] = cljs.core.first((state_76095[(4)])));\r\n\r\n} else {\r\nthrow ex__73648__auto__;\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__73646__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__76555 = state_76095;\r\nstate_76095 = G__76555;\r\ncontinue;\r\n} else {\r\nreturn ret_value__73646__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__73645__auto__ = function(state_76095){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__73645__auto____0.call(this);\r\ncase 1:\r\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__73645__auto____1.call(this,state_76095);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__73645__auto____0;\r\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__73645__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__73645__auto____1;\r\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__73645__auto__;\r\n})()\r\n})();\r\nvar state__73716__auto__ = (function (){var statearr_76126 = f__73715__auto__();\r\n(statearr_76126[(6)] = c__73714__auto___76534);\r\n\r\nreturn statearr_76126;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__73716__auto__);\r\n}));\r\n\r\n\r\nreturn (function taoensso$sente$_start_chsk_router_BANG__$_stop_BANG_(){\r\nreturn cljs.core.async.close_BANG_(ch_ctrl);\r\n});\r\n});\r\n/**\r\n * Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\r\n *   and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\r\n *   prefer to just write their own loop against `ch-recv`.\r\n * \r\n *   Nb performance note: since your `event-msg-handler` fn will be executed\r\n *   within a simple go block, you'll want this fn to be ~non-blocking\r\n *   (you'll especially want to avoid blocking IO) to avoid starving the\r\n *   core.async thread pool under load. To avoid blocking, you can use futures,\r\n *   agents, core.async, etc. as appropriate.\r\n * \r\n *   Or for simple automatic future-based threading of every request, enable\r\n *   the `:simple-auto-threading?` opt (disabled by default).\r\n */\r\ntaoensso.sente.start_server_chsk_router_BANG_ = (function taoensso$sente$start_server_chsk_router_BANG_(var_args){\r\nvar args__4742__auto__ = [];\r\nvar len__4736__auto___76556 = arguments.length;\r\nvar i__4737__auto___76557 = (0);\r\nwhile(true){\r\nif((i__4737__auto___76557 < len__4736__auto___76556)){\r\nargs__4742__auto__.push((arguments[i__4737__auto___76557]));\r\n\r\nvar G__76558 = (i__4737__auto___76557 + (1));\r\ni__4737__auto___76557 = G__76558;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\r\nreturn taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\r\n});\r\n\r\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (ch_recv,event_msg_handler,p__76130){\r\nvar vec__76131 = p__76130;\r\nvar map__76134 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76131,(0),null);\r\nvar map__76134__$1 = (((((!((map__76134 == null))))?(((((map__76134.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__76134.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__76134):map__76134);\r\nvar opts = map__76134__$1;\r\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76134__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\r\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76134__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\r\nvar simple_auto_threading_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76134__$1,new cljs.core.Keyword(null,\"simple-auto-threading?\",\"simple-auto-threading?\",1950754184));\r\nreturn taoensso.sente._start_chsk_router_BANG_(new cljs.core.Keyword(null,\"server\",\"server\",1499190120),ch_recv,event_msg_handler,opts);\r\n}));\r\n\r\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$applyTo = (function (seq76127){\r\nvar G__76128 = cljs.core.first(seq76127);\r\nvar seq76127__$1 = cljs.core.next(seq76127);\r\nvar G__76129 = cljs.core.first(seq76127__$1);\r\nvar seq76127__$2 = cljs.core.next(seq76127__$1);\r\nvar self__4723__auto__ = this;\r\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__76128,G__76129,seq76127__$2);\r\n}));\r\n\r\n/**\r\n * Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\r\n *   and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\r\n *   prefer to just write their own loop against `ch-recv`.\r\n * \r\n *   Nb performance note: since your `event-msg-handler` fn will be executed\r\n *   within a simple go block, you'll want this fn to be ~non-blocking\r\n *   (you'll especially want to avoid blocking IO) to avoid starving the\r\n *   core.async thread pool under load. To avoid blocking, you can use futures,\r\n *   agents, core.async, etc. as appropriate.\r\n */\r\ntaoensso.sente.start_client_chsk_router_BANG_ = (function taoensso$sente$start_client_chsk_router_BANG_(var_args){\r\nvar args__4742__auto__ = [];\r\nvar len__4736__auto___76559 = arguments.length;\r\nvar i__4737__auto___76560 = (0);\r\nwhile(true){\r\nif((i__4737__auto___76560 < len__4736__auto___76559)){\r\nargs__4742__auto__.push((arguments[i__4737__auto___76560]));\r\n\r\nvar G__76561 = (i__4737__auto___76560 + (1));\r\ni__4737__auto___76560 = G__76561;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\r\nreturn taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\r\n});\r\n\r\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (ch_recv,event_msg_handler,p__76139){\r\nvar vec__76140 = p__76139;\r\nvar map__76143 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76140,(0),null);\r\nvar map__76143__$1 = (((((!((map__76143 == null))))?(((((map__76143.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__76143.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__76143):map__76143);\r\nvar opts = map__76143__$1;\r\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76143__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\r\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76143__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\r\nreturn taoensso.sente._start_chsk_router_BANG_(cljs.core.not(new cljs.core.Keyword(null,\"server\",\"server\",1499190120)),ch_recv,event_msg_handler,opts);\r\n}));\r\n\r\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$applyTo = (function (seq76136){\r\nvar G__76137 = cljs.core.first(seq76136);\r\nvar seq76136__$1 = cljs.core.next(seq76136);\r\nvar G__76138 = cljs.core.first(seq76136__$1);\r\nvar seq76136__$2 = cljs.core.next(seq76136__$1);\r\nvar self__4723__auto__ = this;\r\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__76137,G__76138,seq76136__$2);\r\n}));\r\n\r\ntaoensso.sente.event_msg_QMARK_ = taoensso.sente.client_event_msg_QMARK_;\r\n/**\r\n * Platform-specific alias for `make-channel-socket-server!` or\r\n *   `make-channel-socket-client!`. Please see the appropriate aliased fn\r\n * docstring for details.\r\n */\r\ntaoensso.sente.make_channel_socket_BANG_ = taoensso.sente.make_channel_socket_client_BANG_;\r\n/**\r\n * Platform-specific alias for `start-server-chsk-router!` or\r\n *   `start-client-chsk-router!`. Please see the appropriate aliased fn\r\n *   docstring for details.\r\n */\r\ntaoensso.sente.start_chsk_router_BANG_ = taoensso.sente.start_client_chsk_router_BANG_;\r\n/**\r\n * DEPRECATED: Please use `start-chsk-router!` instead\r\n */\r\ntaoensso.sente.start_chsk_router_loop_BANG_ = (function taoensso$sente$start_chsk_router_loop_BANG_(event_handler,ch_recv){\r\nreturn taoensso.sente.start_client_chsk_router_BANG_(ch_recv,(function (ev_msg){\r\nvar G__76145 = new cljs.core.Keyword(null,\"event\",\"event\",301435442).cljs$core$IFn$_invoke$arity$1(ev_msg);\r\nvar G__76146 = new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861).cljs$core$IFn$_invoke$arity$1(ev_msg);\r\nreturn (event_handler.cljs$core$IFn$_invoke$arity$2 ? event_handler.cljs$core$IFn$_invoke$arity$2(G__76145,G__76146) : event_handler.call(null,G__76145,G__76146));\r\n}));\r\n});\r\n\r\n/**\r\n * DEPRECATED. Please use `timbre/set-level!` instead\r\n */\r\ntaoensso.sente.set_logging_level_BANG_ = taoensso.timbre.set_level_BANG_;\r\n\r\n/**\r\n * DEPRECATED: Please use `ajax-lite` instead\r\n */\r\ntaoensso.sente.ajax_call = taoensso.encore.ajax_lite;\r\n\r\n/**\r\n * DEPRECATED\r\n */\r\ntaoensso.sente.default_chsk_url_fn = (function taoensso$sente$default_chsk_url_fn(path,p__76147,websocket_QMARK_){\r\nvar map__76148 = p__76147;\r\nvar map__76148__$1 = (((((!((map__76148 == null))))?(((((map__76148.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__76148.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__76148):map__76148);\r\nvar location = map__76148__$1;\r\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76148__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\r\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76148__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\r\nvar pathname = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76148__$1,new cljs.core.Keyword(null,\"pathname\",\"pathname\",-1420497528));\r\nvar protocol__$1 = (cljs.core.truth_(websocket_QMARK_)?((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(protocol,\"https:\"))?\"wss:\":\"ws:\"):protocol);\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol__$1),\"//\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(host),cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4126__auto__ = path;\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nreturn pathname;\r\n}\r\n})())].join('');\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:author","Peter Taoussanis (@ptaoussanis)","~:doc","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.","~:file","taoensso/sente.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$elide-require","~$taoensso.sente","~$warnf","~$taoensso.timbre","~$go","~$cljs.core.async.macros","~$have","~$taoensso.encore","~$go-loop","^P","~$have!","^R","~$have?","^R","~$debugf","^N","~$tracef","^N","~$infof","^N","~$errorf","^N"],"~:excludes",["~#set",[]],"~:macros",["^ "],"~:name","^L","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$timbre","^N","~$interfaces","~$taoensso.sente.interfaces","~$async","~$cljs.core.async","~$cljs.core","^1;","~$goog","^1<","^18","^18","^1:","^1:","~$enc","^R","^N","^N","~$str","~$clojure.string","^1?","^1?","^R","^R"],"~:seen",["^[",["~:require","~:require-macros"]],"~:uses",["^ ","~$<!","^1:","~$>!","^1:","~$put!","^1:","~$chan","^1:","~$format","^R","~$swap-in!","^R","~$reset-in!","^R","~$swapped","^R"],"^1B",["^ ","^P","^P","^16","^N","^19","^1:","^1;","^1;","^1:","^1:","^L","^L","^1=","^R","^N","^N","~$asyncm","^P","^R","^R","~$sente-macros","^L"],"~:form",["~#list",["~$ns","^L","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.",["^ ","^6","Peter Taoussanis (@ptaoussanis)"],["^1O",["^1A",["^1?","~:as","^1>"],["^1:","^1Q","^19","~:refer",["^1O",["^1D","^1E","^1F","^1G"]]],["^R","^1Q","^1=","^1R",["^1O",["^1H","^1I","^1J","^1K"]],"~:refer-macros",["^1O",["^Q","^T","^U"]]],["^N","^1Q","^16","^1S",["^1O",["^W","^V","^X","^M","^Y"]]],["^18","^1Q","^17"]]],["^1O",["^1B",["^P","^1Q","^1L","^1R",["^1O",["^O","^S"]]],["^L","^1Q","^1M","^1R",["^1O",["^K"]]]]]]],"~:flags",["^ ","^1A",["^[",[]],"^1B",["^[",[]]],"~:js-deps",["^ "],"~:deps",["^1<","^1;","^1?","^1:","^R","^N","^18"]],"^13","^L","~:resource-id",["~:shadow.build.classpath/resource","taoensso/sente.cljc"],"~:compiled-at",1662743392640,"~:resource-name","taoensso/sente.cljc","~:warnings",[],"~:source","(ns taoensso.sente\n  \"Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \\\"socket\\\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.\"\n\n  {:author \"Peter Taoussanis (@ptaoussanis)\"}\n\n  #?(:clj\n     (:require\n      [clojure.string :as str]\n      [clojure.core.async :as async :refer (<! <!! >! >!! put! chan go go-loop)]\n      [taoensso.encore :as enc :refer (swap-in! reset-in! swapped have have! have?)]\n      [taoensso.timbre :as timbre :refer (tracef debugf infof warnf errorf)]\n      [taoensso.sente.interfaces :as interfaces]))\n\n  #?(:cljs\n     (:require\n      [clojure.string :as str]\n      [cljs.core.async :as async :refer (<! >! put! chan)]\n      [taoensso.encore :as enc :refer (format swap-in! reset-in! swapped)\n       :refer-macros (have have! have?)]\n      [taoensso.timbre :as timbre :refer-macros (tracef debugf infof warnf errorf)]\n      [taoensso.sente.interfaces :as interfaces]))\n\n  #?(:cljs\n     (:require-macros\n      [cljs.core.async.macros :as asyncm :refer (go go-loop)]\n      [taoensso.sente :as sente-macros :refer (elide-require)]))\n\n  #?(:clj\n     (:import\n      [org.java_websocket.client WebSocketClient])))\n\n(if (vector? taoensso.encore/encore-version)\n  (enc/assert-min-encore-version [2 105 0])\n  (enc/assert-min-encore-version  2.105))\n\n(def sente-version \"Useful for identifying client/server mismatch\"\n  [1 11 0])\n\n#?(:cljs (def ^:private node-target? (= *target* \"nodejs\")))\n\n;; (timbre/set-level! :trace) ; Uncomment for debugging\n(defonce debug-mode?_ (atom false))\n\n;;;; Events\n;; Clients & server both send `event`s and receive (i.e. route) `event-msg`s:\n;;   - `event`s have the same form client+server side,\n;;   - `event-msg`s have a similar but not identical form\n\n(defn- expected [expected x] {:expected expected :actual {:type (type x) :value x}})\n(defn validate-event\n  \"Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`.\"\n  [x]\n  (cond\n    (not (vector? x))        {:wrong-type   (expected :vector x)}\n    (not (#{1 2} (count x))) {:wrong-length (expected #{1 2}  x)}\n    :else\n    (let [[ev-id _] x]\n      (cond\n        (not (keyword? ev-id))  {:wrong-id-type   (expected :keyword            ev-id)}\n        (not (namespace ev-id)) {:unnamespaced-id (expected :namespaced-keyword ev-id)}\n        :else nil))))\n\n(defn assert-event\n  \"Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception.\"\n  [x]\n  (when-let [errs (validate-event x)]\n    (throw (ex-info \"Invalid event\" {:given x :errors errs}))))\n\n(defn event? \"Valid [ev-id ?ev-data] form?\" [x] (nil? (validate-event x)))\n(defn as-event [x]\n  (if-let [errs (validate-event x)]\n    ;; [:chsk/bad-event {:given x :errors errs}] ; Breaking change\n    [:chsk/bad-event x]\n    x))\n\n(defn client-event-msg? [x]\n  (and\n    (map? x)\n    (enc/ks>= #{:ch-recv :send-fn :state :event :id :?data} x)\n    (let [{:keys [ch-recv send-fn state event]} x]\n      (and\n        (enc/chan? ch-recv)\n        (ifn?      send-fn)\n        (enc/atom? state)\n        (event?    event)))))\n\n(defn server-event-msg? [x]\n  (and\n    (map? x)\n    (enc/ks>= #{:ch-recv :send-fn :connected-uids :send-buffers\n                :ring-req :client-id\n                :event :id :?data :?reply-fn :uid} x)\n    (let [{:keys [ch-recv send-fn connected-uids send-buffers\n                  ring-req client-id event ?reply-fn]} x]\n      (and\n        (enc/chan?       ch-recv)\n        (ifn?            send-fn)\n        (enc/atom?       connected-uids)\n        (enc/atom?       send-buffers)\n        (map?            ring-req)\n        (enc/nblank-str? client-id)\n        (event?          event)\n        (or (nil? ?reply-fn)\n            (ifn? ?reply-fn))))))\n\n(defn- put-server-event-msg>ch-recv!\n  \"All server `event-msg`s go through this\"\n  [ch-recv {:as ev-msg :keys [event ?reply-fn]}]\n  (let [[ev-id ev-?data :as valid-event] (as-event event)\n        ev-msg* (merge ev-msg {:event     valid-event\n                               :?reply-fn ?reply-fn\n                               :id        ev-id\n                               :?data     ev-?data})]\n    (if-not (server-event-msg? ev-msg*)\n      (warnf \"Bad ev-msg: %s\" ev-msg) ; Log 'n drop\n      (put! ch-recv ev-msg*))))\n\n;;; Note that cb replys need _not_ be `event` form!\n#?(:cljs (defn cb-error? [cb-reply-clj] (#{:chsk/closed :chsk/timeout :chsk/error} cb-reply-clj)))\n#?(:cljs (defn cb-success? [cb-reply-clj] (not (cb-error? cb-reply-clj))))\n\n;;;; Packing\n;; * Client<->server payloads are arbitrary Clojure vals (cb replies or events).\n;; * Payloads are packed for client<->server transit.\n;; * Packing includes ->str encoding, and may incl. wrapping to carry cb info.\n\n(defn- unpack \"prefixed-pstr->[clj ?cb-uuid]\"\n  [packer prefixed-pstr]\n  (have? string? prefixed-pstr)\n  (let [wrapped? (enc/str-starts-with? prefixed-pstr \"+\")\n        pstr     (subs prefixed-pstr 1)\n        clj\n        (try\n          (interfaces/unpack packer pstr)\n          (catch #?(:clj Throwable :cljs :default) t\n            (debugf \"Bad package: %s (%s)\" pstr t)\n            [:chsk/bad-package pstr]))\n\n        [clj ?cb-uuid] (if wrapped? clj [clj nil])\n        ?cb-uuid (if (= 0 ?cb-uuid) :ajax-cb ?cb-uuid)]\n\n    (tracef \"Unpacking: %s -> %s\" prefixed-pstr [clj ?cb-uuid])\n    [clj ?cb-uuid]))\n\n(defn- pack \"clj->prefixed-pstr\"\n  ([packer clj]\n   (let [;; \"-\" prefix => Unwrapped (has no callback)\n         pstr (str \"-\" (interfaces/pack packer clj))]\n     (tracef \"Packing (unwrapped): %s -> %s\" clj pstr)\n     pstr))\n\n  ([packer clj ?cb-uuid]\n   (let [;;; Keep wrapping as light as possible:\n         ?cb-uuid    (if (= ?cb-uuid :ajax-cb) 0 ?cb-uuid)\n         wrapped-clj (if ?cb-uuid [clj ?cb-uuid] [clj])\n         ;; \"+\" prefix => Wrapped (has callback)\n         pstr (str \"+\" (interfaces/pack packer wrapped-clj))]\n     (tracef \"Packing (wrapped): %s -> %s\" wrapped-clj pstr)\n     pstr)))\n\n(deftype EdnPacker []\n  interfaces/IPacker\n  (pack   [_ x] (enc/pr-edn   x))\n  (unpack [_ s] (enc/read-edn s)))\n\n(def ^:private default-edn-packer (EdnPacker.))\n\n(defn- coerce-packer [x]\n  (if (= x :edn)\n    default-edn-packer\n    (have #(satisfies? interfaces/IPacker %) x)))\n\n(comment\n  (do\n    (require '[taoensso.sente.packers.transit :as transit])\n    (def ^:private default-transit-json-packer (transit/get-transit-packer)))\n\n  (let [pack   interfaces/pack\n        unpack interfaces/unpack\n        data   {:a :A :b :B :c \"hello world\"}]\n\n    (enc/qb 10000\n      (let [pk default-edn-packer]          (unpack pk (pack pk data)))\n      (let [pk default-transit-json-packer] (unpack pk (pack pk data))))))\n\n;;;; Server API\n\n(def ^:private next-idx! (enc/idx-fn))\n\n(declare\n  ^:private send-buffered-server-evs>ws-clients!\n  ^:private send-buffered-server-evs>ajax-clients!\n  ^:private default-client-side-ajax-timeout-ms)\n\n(defn- bad-origin?\n  [allowed-origins {:as ring-req :keys [headers]}]\n  (if (= allowed-origins :all)\n    false\n    (let [origin  (get headers \"origin\")\n          referer (get headers \"referer\" \"\")]\n      (cond\n        (contains? (set allowed-origins) origin) false\n        (enc/rsome #(str/starts-with? referer (str % \"/\")) allowed-origins) false\n        :else true))))\n\n(comment\n  ;; good (pass)\n  (bad-origin? :all                 {:headers {\"origin\"  \"http://site.com\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"origin\"  \"http://site.com\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://site.com/\"}})\n\n  ;; bad (fail)\n  (bad-origin? #{\"http://site.com\"} {:headers nil})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"origin\"  \"http://attacker.com\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://attacker.com/\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://site.com.attacker.com/\"}}))\n\n(defn make-channel-socket-server!\n  \"Takes a web server adapter[1] and returns a map with keys:\n\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn                     ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req])  for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req])  for Ring GET + chsk URL.\n\n    :connected-uids ;             Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n    :send-buffers   ; Implementation detail, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Security options:\n\n    :allowed-origins   ; e.g. #{\\\"http://site.com\\\" ...}, defaults to :all. ; Alpha\n\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ; CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n\n    :authorized?-fn    ; ?(fn [ring-req]) -> When non-nil, (authorized?-fn <ring-req>)\n                       ; must return truthy, otherwise connection requests will be\n                       ; rejected with (unauthorized-fn <ring-req>) response.\n                       ;\n                       ; May check Authroization HTTP header, etc.\n\n  Other common options:\n\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).\"\n\n  [web-server-ch-adapter\n   & [{:keys [recv-buf-or-n ws-kalive-ms lp-timeout-ms\n              send-buf-ms-ajax send-buf-ms-ws\n              user-id-fn bad-csrf-fn bad-origin-fn csrf-token-fn\n              handshake-data-fn packer allowed-origins\n              authorized?-fn unauthorized-fn]\n\n       :or   {recv-buf-or-n    (async/sliding-buffer 1000)\n              ws-kalive-ms     (enc/ms :secs 25) ; < Heroku 55s timeout\n              lp-timeout-ms    (enc/ms :secs 20) ; < Heroku 30s timeout\n              send-buf-ms-ajax 100\n              send-buf-ms-ws   30\n              user-id-fn      (fn [ ring-req] (get-in ring-req [:session :uid]))\n              bad-csrf-fn     (fn [_ring-req] {:status 403 :body \"Bad CSRF token\"})\n              bad-origin-fn   (fn [_ring-req] {:status 403 :body \"Unauthorized origin\"})\n              unauthorized-fn (fn [_ring-req] {:status 401 :body \"Unauthorized request\"})\n              csrf-token-fn\n              (fn [ring-req]\n                (or (:anti-forgery-token ring-req)\n                  (get-in ring-req [:session :csrf-token])\n                  (get-in ring-req [:session :ring.middleware.anti-forgery/anti-forgery-token])\n                  (get-in ring-req [:session \"__anti-forgery-token\"])\n                  #_:sente/no-reference-csrf-token\n                  ))\n\n              handshake-data-fn (fn [ring-req] nil)\n              packer :edn\n              allowed-origins :all}}]]\n\n  (have? enc/pos-int? send-buf-ms-ajax send-buf-ms-ws)\n  (have? #(satisfies? interfaces/IServerChanAdapter %) web-server-ch-adapter)\n\n  (let [max-ms default-client-side-ajax-timeout-ms]\n    (when (>= lp-timeout-ms max-ms)\n      (throw\n        (ex-info (str \":lp-timeout-ms must be < \" max-ms)\n          {:lp-timeout-ms lp-timeout-ms\n           :default-client-side-ajax-timeout-ms max-ms}))))\n\n  (let [allowed-origins (have [:or set? #{:all}] allowed-origins)\n        packer  (coerce-packer packer)\n        ch-recv (chan recv-buf-or-n)\n\n        user-id-fn\n        (fn [ring-req client-id]\n          ;; Allow uid to depend (in part or whole) on client-id. Be cautious\n          ;; of security implications.\n          (or (user-id-fn (assoc ring-req :client-id client-id)) ::nil-uid))\n\n        ;; :ws udts used for ws-kalive (to check for activity in window period)\n        ;; :ajax udts used for lp-timeout (as a way to check active conn identity)\n        conns_          (atom {:ws  {} :ajax  {}}) ; {<uid> {<client-id> [<?sch> <udt>]}}\n        send-buffers_   (atom {:ws  {} :ajax  {}}) ; {<uid> [<buffered-evs> <#{ev-uuids}>]}\n        connected-uids_ (atom {:ws #{} :ajax #{} :any #{}}) ; Public\n\n        upd-conn!\n        (fn\n          ([conn-type uid client-id] ; Update udt\n           (swap-in! conns_ [conn-type uid client-id]\n             (fn [?v]\n               (let [[?sch _udt] ?v\n                     new-udt (enc/now-udt)]\n                 (enc/swapped\n                   [?sch new-udt]\n                   {:init? (nil? ?v) :udt new-udt :?sch ?sch})))))\n\n          ([conn-type uid client-id new-?sch] ; Update sch + udt\n           (swap-in! conns_ [conn-type uid client-id]\n             (fn [?v]\n               (let [new-udt (enc/now-udt)]\n                 (enc/swapped\n                   [new-?sch new-udt]\n                   {:init? (nil? ?v) :udt new-udt :?sch new-?sch}))))))\n\n        connect-uid!\n        (fn [conn-type uid] {:pre [(have? uid)]}\n          (let [newly-connected?\n                (swap-in! connected-uids_ []\n                  (fn [{:keys [ws ajax any] :as old-m}]\n                    (let [new-m\n                          (case conn-type\n                            :ws   {:ws (conj ws uid) :ajax ajax            :any (conj any uid)}\n                            :ajax {:ws ws            :ajax (conj ajax uid) :any (conj any uid)})]\n                      (swapped new-m\n                        (let [old-any (:any old-m)\n                              new-any (:any new-m)]\n                          (when (and (not (contains? old-any uid))\n                                          (contains? new-any uid))\n                            :newly-connected))))))]\n            newly-connected?))\n\n        upd-connected-uid!\n        (fn [uid] {:pre [(have? uid)]}\n          (let [newly-disconnected?\n                (swap-in! connected-uids_ []\n                  (fn [{:keys [ws ajax any] :as old-m}]\n                    (let [conns' @conns_\n                          any-ws-clients?   (contains? (:ws   conns') uid)\n                          any-ajax-clients? (contains? (:ajax conns') uid)\n                          any-clients?      (or any-ws-clients?\n                                                any-ajax-clients?)\n                          new-m\n                          {:ws   (if any-ws-clients?   (conj ws   uid) (disj ws   uid))\n                           :ajax (if any-ajax-clients? (conj ajax uid) (disj ajax uid))\n                           :any  (if any-clients?      (conj any  uid) (disj any  uid))}]\n\n                      (swapped new-m\n                        (let [old-any (:any old-m)\n                              new-any (:any new-m)]\n                          (when (and     (contains? old-any uid)\n                                    (not (contains? new-any uid)))\n                            :newly-disconnected))))))]\n\n            newly-disconnected?))\n\n        send-fn ; server>user (by uid) push\n        (fn [user-id ev & [{:as opts :keys [flush?]}]]\n          (let [uid (if (= user-id :sente/all-users-without-uid) ::nil-uid user-id)\n                _   (tracef \"Chsk send: (->uid %s) %s\" uid ev)\n                _   (assert uid\n                      (str \"Support for sending to `nil` user-ids has been REMOVED. \"\n                           \"Please send to `:sente/all-users-without-uid` instead.\"))\n                _   (assert-event ev)\n\n                ev-uuid (enc/uuid-str)\n\n                flush-buffer!\n                (fn [conn-type]\n                  (when-let\n                      [pulled\n                       (swap-in! send-buffers_ [conn-type]\n                         (fn [m]\n                           ;; Don't actually flush unless the event buffered\n                           ;; with _this_ send call is still buffered (awaiting\n                           ;; flush). This means that we'll have many (go\n                           ;; block) buffer flush calls that'll noop. They're\n                           ;; cheap, and this approach is preferable to\n                           ;; alternatives like flush workers.\n                           (let [[_ ev-uuids] (get m uid)]\n                             (if (contains? ev-uuids ev-uuid)\n                               (swapped\n                                 (dissoc m uid)\n                                 (get    m uid))\n                               (swapped m nil)))))]\n\n                    (let [[buffered-evs ev-uuids] pulled]\n                      (have? vector? buffered-evs)\n                      (have? set?    ev-uuids)\n\n                      (let [buffered-evs-ppstr (pack packer buffered-evs)]\n                        (tracef \"buffered-evs-ppstr: %s\" buffered-evs-ppstr)\n                        (case conn-type\n                          :ws   (send-buffered-server-evs>ws-clients! conns_\n                                  uid buffered-evs-ppstr upd-conn!)\n                          :ajax (send-buffered-server-evs>ajax-clients! conns_\n                                  uid buffered-evs-ppstr))))))]\n\n            (if (= ev [:chsk/close]) ; Currently undocumented\n              (do\n                (debugf \"Chsk closing (client may reconnect): %s\" uid)\n                (when flush?\n                  (flush-buffer! :ws)\n                  (flush-buffer! :ajax))\n\n                (doseq [[?sch _udt] (vals (get-in @conns_ [:ws uid]))]\n                  (when-let [sch ?sch] (interfaces/sch-close! sch)))\n\n                (doseq [[?sch _udt] (vals (get-in @conns_ [:ajax uid]))]\n                  (when-let [sch ?sch] (interfaces/sch-close! sch))))\n\n              (do\n                ;; Buffer event\n                (doseq [conn-type [:ws :ajax]]\n                  (swap-in! send-buffers_ [conn-type uid]\n                    (fn [?v]\n                      (if-not ?v\n                        [[ev] #{ev-uuid}]\n                        (let [[buffered-evs ev-uuids] ?v]\n                          [(conj buffered-evs ev)\n                           (conj ev-uuids     ev-uuid)])))))\n\n                ;;; Flush event buffers after relevant timeouts:\n                ;; * May actually flush earlier due to another timeout.\n                ;; * We send to _all_ of a uid's connections.\n                ;; * Broadcasting is possible but I'd suggest doing it rarely,\n                ;;   and only to users we know/expect are actually online.\n                ;;\n                (if flush?\n                  (do\n                    (flush-buffer! :ws)\n                    (flush-buffer! :ajax))\n                  (let [ws-timeout   (async/timeout send-buf-ms-ws)\n                        ajax-timeout (async/timeout send-buf-ms-ajax)]\n                    (go\n                      (<! ws-timeout)\n                      (flush-buffer! :ws))\n                    (go\n                      (<! ajax-timeout)\n                      (flush-buffer! :ajax)))))))\n\n          ;; Server-side send is async so nothing useful to return (currently\n          ;; undefined):\n          nil)\n\n        bad-csrf?\n        (fn [ring-req]\n          (if (nil? csrf-token-fn) ; Provides a way to disable CSRF check\n            false\n            (if-let [reference-csrf-token (csrf-token-fn ring-req)]\n              (let [csrf-token-from-client\n                    (or\n                      (get-in ring-req [:params    :csrf-token])\n                      (get-in ring-req [:headers \"x-csrf-token\"])\n                      (get-in ring-req [:headers \"x-xsrf-token\"]))]\n\n                (not\n                  (enc/const-str=\n                    reference-csrf-token\n                    csrf-token-from-client)))\n\n              true ; By default fail if no CSRF token\n              )))\n\n        unauthorized?\n        (fn [ring-req]\n          (if (nil? authorized?-fn)\n            false\n            (not (authorized?-fn))))\n\n        ;; nnil if connection attempt should be rejected\n        possible-rejection-resp\n        (fn [ring-req]\n          (cond\n            (bad-csrf?   ring-req)\n            (bad-csrf-fn ring-req)\n\n            (bad-origin? allowed-origins ring-req)\n            (bad-origin-fn               ring-req)\n\n            (unauthorized?   ring-req)\n            (unauthorized-fn ring-req)\n\n            :else nil))\n\n        ev-msg-const\n        {:ch-recv        ch-recv\n         :send-fn        send-fn\n         :connected-uids connected-uids_\n         :send-buffers   send-buffers_}]\n\n    {:ch-recv        ch-recv\n     :send-fn        send-fn\n     :connected-uids connected-uids_\n     :send-buffers   send-buffers_\n\n     ;; Does not participate in `conns_` (has specific req->resp)\n     :ajax-post-fn\n     (fn [ring-req]\n       (enc/cond\n         :if-let [resp (possible-rejection-resp ring-req)] resp\n         :else\n         (interfaces/ring-req->server-ch-resp web-server-ch-adapter ring-req\n           {:on-open\n            (fn [server-ch websocket?]\n              (assert (not websocket?))\n              (let [params        (get ring-req :params)\n                    ppstr         (get params   :ppstr)\n                    client-id     (get params   :client-id)\n                    [clj has-cb?] (unpack packer ppstr)\n                    reply-fn\n                    (let [replied?_ (atom false)]\n                      (fn [resp-clj] ; Any clj form\n                        (when (compare-and-set! replied?_ false true)\n                          (tracef \"Chsk send (ajax post reply): %s\" resp-clj)\n                          (interfaces/sch-send! server-ch websocket?\n                            (pack packer resp-clj)))))]\n\n                (put-server-event-msg>ch-recv! ch-recv\n                  (merge ev-msg-const\n                    {;; Note that the client-id is provided here just for the\n                     ;; user's convenience. non-lp-POSTs don't actually need a\n                     ;; client-id for Sente's own implementation:\n                     :client-id client-id #_\"unnecessary-for-non-lp-POSTs\"\n                     :ring-req  ring-req\n                     :event     clj\n                     :uid       (user-id-fn ring-req client-id)\n                     :?reply-fn (when has-cb? reply-fn)}))\n\n                (if has-cb?\n                  (when-let [ms lp-timeout-ms]\n                    (go\n                      (<! (async/timeout ms))\n                      (reply-fn :chsk/timeout)))\n                  (reply-fn :chsk/dummy-cb-200))))})))\n\n     ;; Ajax handshake/poll, or WebSocket handshake\n     :ajax-get-or-ws-handshake-fn\n     (fn [ring-req]\n       (let [sch-uuid   (enc/uuid-str 6)\n             params     (get ring-req :params)\n             client-id  (get params   :client-id)\n             uid        (user-id-fn    ring-req client-id)\n\n             receive-event-msg! ; Partial\n             (fn self\n               ([event          ] (self event nil))\n               ([event ?reply-fn]\n                (put-server-event-msg>ch-recv! ch-recv\n                  (merge ev-msg-const\n                    {:client-id client-id\n                     :ring-req  ring-req\n                     :event     event\n                     :?reply-fn ?reply-fn\n                     :uid       uid}))))\n\n             send-handshake!\n             (fn [server-ch websocket?]\n               (tracef \"send-handshake!\")\n               (let [?handshake-data (handshake-data-fn ring-req)\n                     handshake-ev\n                     (if (nil? ?handshake-data) ; Micro optimization\n                       [:chsk/handshake [uid nil]]\n                       [:chsk/handshake [uid nil ?handshake-data]])]\n                 (interfaces/sch-send! server-ch websocket?\n                   (pack packer handshake-ev))))]\n\n         (enc/cond\n\n           (str/blank? client-id)\n           (let [err-msg \"Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` & `wrap-keyword-params`)?\"]\n             (errorf (str err-msg \": %s\") ring-req) ; Careful re: % in req\n             (throw (ex-info err-msg {:ring-req ring-req})))\n\n           :if-let [resp (possible-rejection-resp ring-req)] resp\n           :else\n           (interfaces/ring-req->server-ch-resp web-server-ch-adapter ring-req\n             {:on-open\n              (fn [server-ch websocket?]\n                (if websocket?\n\n                  ;; WebSocket handshake\n                  (let [_ (tracef \"New WebSocket channel: %s (%s)\" uid sch-uuid)\n                        updated-conn (upd-conn! :ws uid client-id server-ch)\n                        udt-open     (:udt updated-conn)]\n\n                    (when (connect-uid! :ws uid)\n                      (receive-event-msg! [:chsk/uidport-open uid]))\n\n                    (send-handshake! server-ch websocket?)\n\n                    ;; Start ws-kalive loop\n                    ;; This also works to gc ws conns that were suddenly\n                    ;; terminated (e.g. by turning on airplane mode)\n                    (when-let [ms ws-kalive-ms]\n                      (go-loop [udt-t0 udt-open]\n                        (<! (async/timeout ms))\n                        (when-let [[_sch udt-t1] (get-in @conns_ [:ws uid client-id])]\n                          (when (interfaces/sch-open? server-ch)\n                            ;; (assert (= _sch server-ch))\n                            (when (= udt-t1 udt-t0)\n                              ;; Ref. issue #230:\n                              ;; We've seen no send/recv activity on this\n                              ;; conn w/in our kalive window so send a ping\n                              ;; ->client (should auto-close conn if it's\n                              ;; gone dead).\n                              (interfaces/sch-send! server-ch websocket?\n                                (pack packer :chsk/ws-ping)))\n                            (recur udt-t1))))))\n\n                  ;; Ajax handshake/poll\n                  (let [_ (tracef \"New Ajax handshake/poll: %s (%s)\" uid sch-uuid)\n                        updated-conn (upd-conn! :ajax uid client-id server-ch)\n                        udt-open     (:udt updated-conn)\n                        handshake?   (or (:init? updated-conn) (:handshake? params))]\n\n                    (when (connect-uid! :ajax uid)\n                      (receive-event-msg! [:chsk/uidport-open uid]))\n\n                    (if handshake?\n                      ;; Client will immediately repoll\n                      (send-handshake! server-ch websocket?)\n\n                      (when-let [ms lp-timeout-ms]\n                        (go\n                          (<! (async/timeout ms))\n                          (when-let [[_sch udt-t1] (get-in @conns_ [:ajax uid client-id])]\n                            (when (= udt-t1 udt-open)\n                              ;; (assert (= _sch server-ch))\n                              ;; Appears to still be the active sch\n                              (interfaces/sch-send! server-ch websocket?\n                                (pack packer :chsk/timeout))))))))))\n\n              :on-msg\n              (fn [server-ch websocket? req-ppstr]\n                (assert websocket?)\n                (upd-conn! :ws uid client-id)\n                (let [[clj ?cb-uuid] (unpack packer req-ppstr)]\n                  (receive-event-msg! clj ; Should be ev\n                    (when ?cb-uuid\n                      (fn reply-fn [resp-clj] ; Any clj form\n                        (tracef \"Chsk send (ws reply): %s\" resp-clj)\n                        ;; true iff apparent success:\n                        (interfaces/sch-send! server-ch websocket?\n                          (pack packer resp-clj ?cb-uuid)))))))\n\n              :on-close ; We rely on `on-close` to trigger for _every_ conn!\n              (fn [server-ch websocket? _status]\n                ;; Note that `status` type varies with underlying web server\n                (let [conn-type (if websocket? :ws :ajax)\n                      _ (tracef \"%s channel closed: %s (%s)\"\n                          (if websocket? \"WebSocket\" \"Ajax\")\n                          uid sch-uuid)\n\n                      updated-conn (upd-conn! conn-type uid client-id nil)\n                      udt-close    (:udt updated-conn)]\n\n                  ;; Allow some time for possible reconnects (repoll,\n                  ;; sole window refresh, etc.):\n                  (go\n                    (<! (async/timeout 5000))\n                    (let [[_?sch udt-t1] (get-in @conns_ [conn-type uid client-id])]\n\n                      (when @debug-mode?_\n                        (debugf \"close-timeout: %s %s %s %s\" conn-type uid\n                          sch-uuid [(= udt-t1 udt-close) udt-t1 udt-close]))\n\n                      (when (= udt-t1 udt-close)\n                        (let [disconnect? ; Removed entry for client-id?\n                              (swap-in! conns_ [conn-type uid client-id]\n                                (fn [[_sch udt-t1]]\n                                  (if (= udt-t1 udt-close)\n                                    (swapped :swap/dissoc true)\n                                    (swapped [_sch udt-t1] false))))]\n\n                          (when disconnect?\n\n                            ;; Potentially remove entry for uid\n                            (swap-in! conns_ [conn-type uid]\n                              (fn [?m] (if (empty? ?m) :swap/dissoc ?m)))\n\n                            (when (upd-connected-uid! uid)\n                              (receive-event-msg! [:chsk/uidport-close uid])))))))))\n\n              :on-error\n              (fn [server-ch websocket? error]\n                (errorf \"ring-req->server-ch-resp error: %s (%s)\"\n                  error uid sch-uuid))}))))}))\n\n(defn- send-buffered-server-evs>ws-clients!\n  \"Actually pushes buffered events (as packed-str) to all uid's WebSocket conns.\"\n  [conns_ uid buffered-evs-pstr upd-conn!]\n  (tracef \"send-buffered-server-evs>ws-clients!: %s\" buffered-evs-pstr)\n  (doseq [[client-id [?sch _udt]] (get-in @conns_ [:ws uid])]\n    (when-let [sch ?sch]\n      (upd-conn! :ws uid client-id)\n      (interfaces/sch-send! sch :websocket buffered-evs-pstr))))\n\n(defn- send-buffered-server-evs>ajax-clients!\n  \"Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects.\"\n  [conns_ uid buffered-evs-pstr]\n  (tracef \"send-buffered-server-evs>ajax-clients!: %s\" buffered-evs-pstr)\n  (let [ms-backoffs [90 180 360 720 1440] ; Mean 2790s\n        ;; All connected/possibly-reconnecting client uuids:\n        client-ids-unsatisfied (keys (get-in @conns_ [:ajax uid]))]\n\n    (when-not (empty? client-ids-unsatisfied)\n      ;; (tracef \"client-ids-unsatisfied: %s\" client-ids-unsatisfied)\n      (go-loop [n 0 client-ids-satisfied #{}]\n        (let [?pulled ; nil or {<client-id> [<?sch> <udt>]}\n              (swap-in! conns_ [:ajax uid]\n                (fn [m] ; {<client-id> [<?sch> <udt>]}\n                  (let [ks-to-pull (remove client-ids-satisfied (keys m))]\n                    ;; (tracef \"ks-to-pull: %s\" ks-to-pull)\n                    (if (empty? ks-to-pull)\n                      (swapped m nil)\n                      (swapped\n                        (reduce\n                          (fn [m k]\n                            (let [[?sch udt] (get m k)]\n                              ;; Nb don't change udt; for Ajax conns_ we only\n                              ;; want udt updated on poll or close, not on\n                              ;; activity (as with ws conns_)\n                              (assoc m k [nil udt #_(enc/now-udt)])))\n\n                          m ks-to-pull)\n                        (select-keys m ks-to-pull))))))]\n\n          (have? [:or nil? map?] ?pulled)\n\n          (let [?newly-satisfied\n                (when ?pulled\n                  (reduce-kv\n                    (fn [s client-id [?sch _udt]]\n                      (let [sent?\n                            (when-let [sch ?sch]\n                              ;; Will noop + return false if sch already closed:\n                              (interfaces/sch-send! ?sch (not :websocket)\n                                buffered-evs-pstr))]\n\n                        (if sent? (conj s client-id) s)))\n                    #{} ?pulled))\n\n                now-satisfied (into client-ids-satisfied ?newly-satisfied)]\n\n            ;; (tracef \"now-satisfied: %s\" now-satisfied)\n            (when-let [ms-backoff (get ms-backoffs n)]\n              (when (enc/rsome (complement now-satisfied) client-ids-unsatisfied)\n                (let [ms-timeout (+ ms-backoff (rand-int ms-backoff))]\n                  ;; Allow some time for possible poller reconnects:\n                  (<! (async/timeout ms-timeout))\n                  (recur (inc n) now-satisfied))))))))))\n\n;;;; Client API\n\n#?(:cljs (def ajax-lite \"Alias of `taoensso.encore/ajax-lite`\" enc/ajax-lite))\n\n   (defprotocol IChSocket\n     (-chsk-connect!    [chsk])\n     (-chsk-disconnect! [chsk reason])\n     (-chsk-reconnect!  [chsk])\n     (-chsk-send!       [chsk ev opts]))\n\n     (defn chsk-connect!    [chsk] (-chsk-connect!    chsk))\n     (defn chsk-disconnect! [chsk] (-chsk-disconnect! chsk :requested-disconnect))\n     (defn chsk-reconnect! \"Useful for reauthenticating after login/logout, etc.\"\n       [chsk] (-chsk-reconnect! chsk))\n     (def chsk-destroy! \"Deprecated\" chsk-disconnect!)\n\n   (defn chsk-send!\n     \"Sends `[ev-id ev-?data :as event]`, returns true on apparent success.\"\n     ([chsk ev] (chsk-send! chsk ev {}))\n     ([chsk ev ?timeout-ms ?cb] (chsk-send! chsk ev {:timeout-ms ?timeout-ms\n                                                     :cb         ?cb}))\n     ([chsk ev opts]\n      (tracef \"Chsk send: (%s) %s\" (assoc opts :cb (boolean (:cb opts))) ev)\n      (-chsk-send! chsk ev opts)))\n\n   (defn- chsk-send->closed! [?cb-fn]\n     (warnf \"Chsk send against closed chsk.\")\n     (when ?cb-fn (?cb-fn :chsk/closed))\n     false)\n\n   (defn- assert-send-args [x ?timeout-ms ?cb]\n     (assert-event x)\n     (assert (or (and (nil? ?timeout-ms) (nil? ?cb))\n                 (and (enc/nat-int? ?timeout-ms)))\n       (str \"cb requires a timeout; timeout-ms should be a +ive integer: \" ?timeout-ms))\n     (assert (or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))\n       (str \"cb should be nil, an ifn, or a channel: \" (type ?cb))))\n\n   (defn- pull-unused-cb-fn! [cbs-waiting_ ?cb-uuid]\n     (when-let [cb-uuid ?cb-uuid]\n       (swap-in! cbs-waiting_ [cb-uuid]\n         (fn [?f] (swapped :swap/dissoc ?f)))))\n\n   (defn- swap-chsk-state!\n     \"Atomically swaps the value of chk's :state_ atom.\"\n     [chsk f]\n     (let [[old-state new-state]\n           (swap-in! (:state_ chsk)\n             (fn [old-state]\n               (let [new-state (f old-state)\n                     new-state\n                     (if (:first-open? old-state)\n                       (assoc new-state :first-open? false)\n                       new-state)\n\n                     new-state\n                     (if (:open? new-state)\n                       (dissoc new-state :udt-next-reconnect)\n                       new-state)]\n\n                 (swapped new-state [old-state new-state]))))]\n\n       (when (not= old-state new-state)\n         (let [output [old-state new-state]]\n           ;; (debugf \"Chsk state change: %s\" output)\n           (put! (get-in chsk [:chs :state]) [:chsk/state output])\n           output))))\n\n   (defn- chsk-state->closed [state reason]\n     (have? map? state)\n     (have? [:el #{:requested-disconnect\n                   :requested-reconnect\n                   :downgrading-ws-to-ajax\n                   :unexpected}] reason)\n     (if (or (:open? state) (not= reason :unexpected))\n       (-> state\n         (dissoc :udt-next-reconnect)\n         (assoc\n           :open? false\n           :last-close {:udt (enc/now-udt) :reason reason}))\n       state))\n\n   (defn- cb-chan-as-fn\n     \"Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>].\"\n     [?cb ev]\n     (if (or (nil? ?cb) (ifn? ?cb))\n       ?cb\n       (do\n         (have? enc/chan? ?cb)\n         (assert-event ev)\n         (let [[ev-id _] ev\n               cb-ch ?cb]\n           (fn [reply]\n             (put! cb-ch\n               [(keyword (str (enc/as-qname ev-id) \".cb\"))\n                reply]))))))\n\n   (defn- receive-buffered-evs! [chs clj]\n     (tracef \"receive-buffered-evs!: %s\" clj)\n     (let [buffered-evs (have vector? clj)]\n       (doseq [ev buffered-evs]\n         (assert-event ev)\n         ;; Should never receive :chsk/* events from server here:\n         (let [[id] ev] (assert (not= (namespace id) \"chsk\")))\n         (put! (:<server chs) ev))))\n\n   (defn- handshake? [x]\n     (and (vector? x) ; Nb support arb input (e.g. cb replies)\n       (let [[x1] x] (= x1 :chsk/handshake))))\n\n   (defn- receive-handshake! [chsk-type chsk clj]\n     (have? [:el #{:ws :ajax}] chsk-type)\n     (have? handshake? clj)\n     (tracef \"receive-handshake! (%s): %s\" chsk-type clj)\n     (let [[_ [?uid _ ?handshake-data]] clj\n           {:keys [chs ever-opened?_]} chsk\n           first-handshake? (compare-and-set! ever-opened?_ false true)\n           new-state\n           {:type           chsk-type ; :auto -> e/o #{:ws :ajax}, etc.\n            :open?          true\n            :ever-opened?   true\n            :uid            ?uid\n            :handshake-data ?handshake-data\n            :first-open?    first-handshake?}\n\n           handshake-ev\n           [:chsk/handshake\n            [?uid nil ?handshake-data first-handshake?]]]\n\n       (assert-event handshake-ev)\n       (swap-chsk-state! chsk #(merge % new-state))\n       (put! (:internal chs) handshake-ev)\n\n       :handled))\n\n#?(:clj\n   (defmacro ^:private elide-require\n     \"Experimental. The presence of `js/require` calls can cause issues with\n    React Native, even if they never execute. Currently no other known\n    workarounds. Ref. https://github.com/ptaoussanis/sente/issues/247.\"\n     [& body]\n     (when-not (enc/get-sys-val \"SENTE_ELIDE_JS_REQUIRE\")\n       `(do ~@body))))\n\n#?(:cljs\n   (def ^:private ?node-npm-websocket_\n     \"nnil iff the websocket npm library[1] is available.\n     Easiest way to install:\n       1. Add the lein-npm[2] plugin to your `project.clj`,\n       2. Add: `:npm {:dependencies [[websocket \\\"1.0.23\\\"]]}`\n\n     [1] Ref. https://www.npmjs.com/package/websocket\n     [2] Ref. https://github.com/RyanMcG/lein-npm\"\n\n     ;; This `let` silliness intended to work around React Native's\n     ;; static analysis tool, to prevent it from detecting a\n     ;; missing package.\n     ;;\n     ;; Ref. https://github.com/ptaoussanis/sente/issues/247#issuecomment-555219121\n     ;;\n     (let [make-package-name (fn [prefix] (str prefix \"socket\"))\n           require-fn\n           (if (exists? js/require)\n             js/require\n             (constantly :no-op))]\n\n       (delay ; Eager eval causes issues with React Native, Ref. #247,\n         (elide-require ; TODO is this now safe to remove?\n           (when (and node-target? (exists? js/require))\n             (try\n               (require-fn (make-package-name \"web\"))\n               ;; In particular, catch 'UnableToResolveError'\n               (catch :default e\n                 ;; (errorf e \"Unable to load npm websocket lib\")\n                 nil))))))))\n\n#?(:clj\n   (defn- create-java-client-websocket!\n     [{:as opts :keys [onerror-fn onmessage-fn onclose-fn uri-str headers]}]\n     (let [uri (java.net.URI. uri-str)\n\n           ;; headers\n           ;; (ImmutableMap/of\n           ;;   \"Origin\"  \"http://localhost:3200\"\n           ;;   \"Referer\" \"http://localhost:3200\"\n           ;;   \"Sec-WebSocket-Extensions\" \"permessage-deflate; client_max_window_bits\"\n           ;;   )\n\n           ws-client\n           (proxy [WebSocketClient] [^java.net.URI uri ^java.util.Map headers]\n             (onOpen    [^org.java_websocket.handshake.ServerHandshake handshakedata] nil)\n             (onError   [ex]                 (onerror-fn   ex))\n             (onMessage [^String message]    (onmessage-fn message))\n             (onClose   [code reason remote] (onclose-fn   code reason remote)))]\n\n       ;; JS client attempts to connect right away at construction time.\n       ;; Java client doesn't need to, but we'll do anyway for consistency.\n       (.connect ws-client)\n       (do       ws-client))))\n\n#?(:cljs\n   (defn- create-js-client-websocket!\n     [{:as opts :keys [onerror-fn onmessage-fn onclose-fn uri-str headers]}]\n     (when-let [WebSocket\n                (or\n                  (enc/oget goog/global           \"WebSocket\")\n                  (enc/oget goog/global           \"MozWebSocket\")\n                  (enc/oget @?node-npm-websocket_ \"w3cwebsocket\"))]\n\n       (let [socket (WebSocket. uri-str)]\n         (doto socket\n           (aset \"onerror\"   onerror-fn)\n           (aset \"onmessage\" onmessage-fn) ; Nb receives both push & cb evs!\n           ;; Fires repeatedly (on each connection attempt) while server is down:\n           (aset \"onclose\"   onclose-fn))\n         socket))))\n\n(defn- create-websocket! [{:as opts :keys [onerror-fn onmessage-fn onclose-fn uri-str headers]}]\n  #?(:cljs (create-js-client-websocket!   opts)\n     :clj  (create-java-client-websocket! opts)))\n\n(defrecord ChWebSocket\n    ;; WebSocket-only IChSocket implementation\n    ;; Handles (re)connections, cbs, etc.\n\n    [client-id chs params headers packer url ws-kalive-ms\n     state_ ; {:type _ :open? _ :uid _ :csrf-token _ ...}\n     instance-handle_ retry-count_ ever-opened?_\n     backoff-ms-fn ; (fn [nattempt]) -> msecs\n     cbs-waiting_ ; {<cb-uuid> <fn> ...}\n     socket_\n     udt-last-comms_]\n\n  IChSocket\n  (-chsk-disconnect! [chsk reason]\n    (reset! instance-handle_ nil) ; Disable auto retry\n    (swap-chsk-state! chsk #(chsk-state->closed % reason))\n    (when-let [s @socket_]\n      #?(:clj  (.closeBlocking ^WebSocketClient s)\n         :cljs (.close s 1000 \"CLOSE_NORMAL\"))))\n\n  (-chsk-reconnect! [chsk]\n    (-chsk-disconnect! chsk :requested-reconnect)\n    (-chsk-connect!    chsk))\n\n  (-chsk-send! [chsk ev opts]\n    (let [{?timeout-ms :timeout-ms ?cb :cb :keys [flush?]} opts\n          _ (assert-send-args ev ?timeout-ms ?cb)\n          ?cb-fn (cb-chan-as-fn ?cb ev)]\n      (if-not (:open? @state_) ; Definitely closed\n        (chsk-send->closed! ?cb-fn)\n\n        ;; TODO Buffer before sending (but honor `:flush?`)\n        (let [?cb-uuid (when ?cb-fn (enc/uuid-str 6))\n              ppstr (pack packer ev ?cb-uuid)]\n\n          (when-let [cb-uuid ?cb-uuid]\n            (reset-in! cbs-waiting_ [cb-uuid] (have ?cb-fn))\n            (when-let [timeout-ms ?timeout-ms]\n              (go\n                (<! (async/timeout timeout-ms))\n                (when-let [cb-fn* (pull-unused-cb-fn! cbs-waiting_ ?cb-uuid)]\n                  (cb-fn* :chsk/timeout)))))\n\n          (try\n            #?(:cljs (.send                  @socket_         ppstr)\n               :clj  (.send ^WebSocketClient @socket_ ^String ppstr))\n\n            (reset! udt-last-comms_ (enc/now-udt))\n            :apparent-success\n            (catch #?(:clj Throwable :cljs :default) t\n              (errorf t \"Chsk send error\")\n              (when-let [cb-uuid ?cb-uuid]\n                (let [cb-fn* (or (pull-unused-cb-fn! cbs-waiting_ cb-uuid)\n                                 (have ?cb-fn))]\n                  (cb-fn* :chsk/error)))\n              false))))))\n\n  (-chsk-connect! [chsk]\n    (let [instance-handle (reset! instance-handle_ (enc/uuid-str))\n          have-handle? (fn [] (= @instance-handle_ instance-handle))\n          connect-fn\n          (fn connect-fn []\n            (when (have-handle?)\n              (let [retry-fn\n                    (fn [] ; Backoff then recur\n                      (when (have-handle?)\n                        (let [retry-count* (swap! retry-count_ inc)\n                              backoff-ms (backoff-ms-fn retry-count*)\n                              udt-next-reconnect (+ (enc/now-udt) backoff-ms)]\n                          (warnf \"Chsk is closed: will try reconnect attempt (%s) in %s ms\"\n                            retry-count* backoff-ms)\n                          #?(:cljs (.setTimeout goog/global connect-fn backoff-ms)\n                             :clj  (go\n                                     (<! (async/timeout backoff-ms))\n                                     (connect-fn)))\n\n                          (swap-chsk-state! chsk\n                            #(assoc % :udt-next-reconnect udt-next-reconnect)))))\n\n                    onerror-fn\n                    #?(:cljs\n                       (fn [ws-ev]\n                         (errorf ; ^:meta {:raw-console? true}\n                           \"WebSocket error: %s\"\n                           (try\n                             (js->clj          ws-ev)\n                             (catch :default _ ws-ev)))\n\n                         (swap-chsk-state! chsk\n                           #(assoc % :last-ws-error\n                              {:udt (enc/now-udt), :ev ws-ev})))\n\n                       :clj\n                       (fn [ex]\n                         (errorf ex \"WebSocket error\")\n                         (swap-chsk-state! chsk\n                           #(assoc % :last-ws-error\n                              {:udt (enc/now-udt), :ex ex}))))\n\n                    onmessage-fn ; Nb receives both push & cb evs!\n                    (fn #?(:cljs [ws-ev] :clj [ppstr])\n                      (let [ppstr #?(:clj            ppstr\n                                     :cljs (enc/oget ws-ev \"data\"))\n\n                            ;; `clj` may/not satisfy `event?` since\n                            ;; we also receive cb replies here. This\n                            ;; is why we prefix pstrs to indicate\n                            ;; whether they're wrapped or not\n                            [clj ?cb-uuid] (unpack packer ppstr)]\n\n                        (reset! udt-last-comms_ (enc/now-udt))\n\n                        (or\n                          (when (handshake? clj)\n                            (receive-handshake! :ws chsk clj)\n                            (reset! retry-count_ 0)\n                            :handshake)\n\n                          (when (= clj :chsk/ws-ping)\n                            (put! (:<server chs) [:chsk/ws-ping])\n                            :noop)\n\n                          (if-let [cb-uuid ?cb-uuid]\n                            (if-let [cb-fn (pull-unused-cb-fn! cbs-waiting_\n                                             cb-uuid)]\n                              (cb-fn clj)\n                              (warnf \"Cb reply w/o local cb-fn: %s\" clj))\n                            (let [buffered-evs clj]\n                              (receive-buffered-evs! chs buffered-evs))))))\n\n                    ;; Fires repeatedly (on each connection attempt) while\n                    ;; server is down:\n                    onclose-fn\n                    (fn #?(:cljs [ws-ev] :clj [code reason remote])\n                      (let [last-ws-close\n                            #?(:clj\n                               {:udt    (enc/now-udt)\n                                :clean? (= code org.java_websocket.framing.CloseFrame/NORMAL)\n                                :code   code\n                                :reason reason}\n\n                               :cljs\n                               {:udt    (enc/now-udt)\n                                :ev     ws-ev\n                                :clean? (enc/oget ws-ev \"wasClean\")\n                                :code   (enc/oget ws-ev \"code\")\n                                :reason (enc/oget ws-ev \"reason\")})]\n\n                        ;; Firefox calls \"onclose\" while unloading,\n                        ;; Ref. http://goo.gl/G5BYbn:\n                        (if (:clean? last-ws-close)\n                          (do\n                            (debugf \"Clean WebSocket close, will not attempt reconnect\")\n                            (swap-chsk-state! chsk\n                              #(assoc % :last-ws-close last-ws-close)))\n                          (do\n                            (swap-chsk-state! chsk\n                              #(assoc (chsk-state->closed % :unexpected)\n                                 :last-ws-close last-ws-close))\n                            (retry-fn)))))\n\n                    ?socket\n                    (try\n                      (create-websocket!\n                        {:onerror-fn   onerror-fn\n                         :onmessage-fn onmessage-fn\n                         :onclose-fn   onclose-fn\n                         :headers      headers\n                         :uri-str\n                         (enc/merge-url-with-query-string url\n                           (merge params ; 1st (don't clobber impl.):\n                             {:client-id client-id\n                              :csrf-token (:csrf-token @state_)}))})\n\n                      (catch #?(:clj Throwable :cljs :default) t\n                        (errorf t \"WebSocket error\")\n                        nil))]\n\n                (if-not ?socket\n                  (retry-fn) ; Couldn't even get a socket\n                  (do\n                    ;; Clean up the old socket if any exists\n                    (when-let [old-socket @socket_]\n                      #?(:clj  (.close ^WebSocketClient old-socket)\n                         :cljs (.close                  old-socket)))\n\n                    (reset! socket_ ?socket))))))]\n\n      (when-let [ms ws-kalive-ms]\n        (go-loop []\n          (let [udt-t0 @udt-last-comms_]\n            (<! (async/timeout ms))\n            (when (have-handle?)\n              (let [udt-t1 @udt-last-comms_]\n                (when (= udt-t0 udt-t1)\n                  ;; Ref. issue #259:\n                  ;; We've seen no send/recv activity on this\n                  ;; conn w/in our kalive window so send a ping\n                  ;; ->server (should auto-close conn if it's\n                  ;; gone dead). The server generally sends pings so\n                  ;; this should be rare. Mostly here to help clients\n                  ;; identify conns that were suddenly dropped.\n\n                  (-chsk-send! chsk [:chsk/ws-ping] {:flush? true})))\n              (recur)))))\n\n      (reset! retry-count_ 0)\n      (connect-fn)\n      chsk)))\n\n(defn- new-ChWebSocket [opts csrf-token]\n  (map->ChWebSocket\n    (merge\n      {:state_ (atom {:type :ws :open? false :ever-opened? false :csrf-token csrf-token})\n       :instance-handle_ (atom nil)\n       :retry-count_     (atom 0)\n       :ever-opened?_    (atom false)\n       :cbs-waiting_     (atom {})\n       :socket_          (atom nil)\n       :udt-last-comms_  (atom nil)}\n      opts)))\n\n(def ^:private default-client-side-ajax-timeout-ms\n  \"We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms.\"\n  (enc/ms :secs 60))\n\n#?(:cljs\n   (defrecord ChAjaxSocket\n       ;; Ajax-only IChSocket implementation\n       ;; Handles (re)polling, etc.\n\n       [client-id chs params packer url state_\n        instance-handle_ ever-opened?_\n        backoff-ms-fn\n        ajax-opts curr-xhr_]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (reset! instance-handle_ nil) ; Disable auto retry\n       (swap-chsk-state! chsk #(chsk-state->closed % reason))\n       (when-let [x @curr-xhr_] (.abort x)))\n\n     (-chsk-reconnect! [chsk]\n       (-chsk-disconnect! chsk :requested-reconnect)\n       (-chsk-connect!    chsk))\n\n     (-chsk-send! [chsk ev opts]\n       (let [{?timeout-ms :timeout-ms ?cb :cb :keys [flush?]} opts\n             _ (assert-send-args ev ?timeout-ms ?cb)\n             ?cb-fn (cb-chan-as-fn ?cb ev)]\n         (if-not (:open? @state_) ; Definitely closed\n           (chsk-send->closed! ?cb-fn)\n\n           ;; TODO Buffer before sending (but honor `:flush?`)\n           (let [csrf-token (:csrf-token @state_)]\n             (ajax-lite url\n               (merge ajax-opts\n                 {:method     :post\n                  :timeout-ms (or ?timeout-ms (:timeout-ms ajax-opts)\n                                  default-client-side-ajax-timeout-ms)\n                  :resp-type  :text ; We'll do our own pstr decoding\n                  :headers\n                  (merge\n                    (:headers ajax-opts) ; 1st (don't clobber impl.)\n                    {:X-CSRF-Token csrf-token})\n\n                  :params\n                  (let [ppstr (pack packer ev (when ?cb-fn :ajax-cb))]\n                    (merge params ; 1st (don't clobber impl.):\n                      {:udt        (enc/now-udt) ; Force uncached resp\n\n                       ;; A duplicate of X-CSRF-Token for user's convenience\n                       ;; and for back compatibility with earlier CSRF docs:\n                       :csrf-token csrf-token\n\n                       ;; Just for user's convenience here. non-lp-POSTs\n                       ;; don't actually need a client-id for Sente's own\n                       ;; implementation:\n                       :client-id  client-id\n\n                       :ppstr      ppstr}))})\n\n               (fn ajax-cb [{:keys [?error ?content]}]\n                 (if ?error\n                   (if (= ?error :timeout)\n                     (when ?cb-fn (?cb-fn :chsk/timeout))\n                     (do\n                       (swap-chsk-state! chsk\n                         #(chsk-state->closed % :unexpected))\n                       (when ?cb-fn (?cb-fn :chsk/error))))\n\n                   (let [content ?content\n                         resp-ppstr content\n                         [resp-clj _] (unpack packer resp-ppstr)]\n                     (if ?cb-fn\n                       (?cb-fn resp-clj)\n                       (when (not= resp-clj :chsk/dummy-cb-200)\n                         (warnf \"Cb reply w/o local cb-fn: %s\" resp-clj)))\n                     (swap-chsk-state! chsk #(assoc % :open? true))))))\n\n             :apparent-success))))\n\n     (-chsk-connect! [chsk]\n       (let [instance-handle (reset! instance-handle_ (enc/uuid-str))\n             have-handle? (fn [] (= @instance-handle_ instance-handle))\n             poll-fn ; async-poll-for-update-fn\n             (fn poll-fn [retry-count]\n               (tracef \"async-poll-for-update!\")\n               (when (have-handle?)\n                 (let [retry-fn\n                       (fn [] ; Backoff then recur\n                         (when (have-handle?)\n                           (let [retry-count* (inc retry-count)\n                                 backoff-ms (backoff-ms-fn retry-count*)\n                                 udt-next-reconnect (+ (enc/now-udt) backoff-ms)]\n                             (warnf \"Chsk is closed: will try reconnect attempt (%s) in %s ms\"\n                               retry-count* backoff-ms)\n                             (.setTimeout goog/global\n                               (fn [] (poll-fn retry-count*))\n                               backoff-ms)\n                             (swap-chsk-state! chsk\n                               #(assoc % :udt-next-reconnect udt-next-reconnect)))))]\n\n                   (reset! curr-xhr_\n                     (ajax-lite url\n                       (merge ajax-opts\n                         {:method     :get ; :timeout-ms timeout-ms\n                          :timeout-ms (or (:timeout-ms ajax-opts)\n                                        default-client-side-ajax-timeout-ms)\n                          :resp-type  :text ; Prefer to do our own pstr reading\n                          :params\n                          (merge\n                            ;; Note that user params here are actually POST\n                            ;; params for convenience. Contrast: WebSocket\n                            ;; params sent as query params since there's no\n                            ;; other choice there.\n                            params ; 1st (don't clobber impl.):\n\n                            {:udt       (enc/now-udt) ; Force uncached resp\n                             :client-id client-id}\n\n                            ;; A truthy :handshake? param will prompt server to\n                            ;; reply immediately with a handshake response,\n                            ;; letting us confirm that our client<->server comms\n                            ;; are working:\n                            (when-not (:open? @state_) {:handshake? true}))\n\n                          :headers\n                          (merge\n                            (:headers ajax-opts) ; 1st (don't clobber impl.)\n                            {:X-CSRF-Token (:csrf-token @state_)})})\n\n                       (fn ajax-cb [{:keys [?error ?content]}]\n                         (if ?error\n                           (cond\n                             (= ?error :timeout) (poll-fn 0)\n                             ;; (= ?error :abort) ; Abort => intentional, not an error\n                             :else\n                             (do\n                               (swap-chsk-state! chsk\n                                 #(chsk-state->closed % :unexpected))\n                               (retry-fn)))\n\n                           ;; The Ajax long-poller is used only for events, never cbs:\n                           (let [content ?content\n                                 ppstr content\n                                 [clj] (unpack packer ppstr)\n                                 handshake? (handshake? clj)]\n\n                             (when handshake?\n                               (receive-handshake! :ajax chsk clj))\n\n                             (swap-chsk-state! chsk #(assoc % :open? true))\n                             (poll-fn 0) ; Repoll asap\n\n                             (when-not handshake?\n                               (or\n                                 (when (= clj :chsk/timeout)\n                                   (when @debug-mode?_\n                                     (receive-buffered-evs! chs [[:debug/timeout]]))\n                                   :noop)\n\n                                 (let [buffered-evs clj] ; An application reply\n                                   (receive-buffered-evs! chs buffered-evs))))))))))))]\n\n         (poll-fn 0)\n         chsk))))\n\n#?(:cljs\n   (defn- new-ChAjaxSocket [opts csrf-token]\n     (map->ChAjaxSocket\n       (merge\n         {:state_           (atom {:type :ajax :open? false :ever-opened? false :csrf-token csrf-token})\n          :instance-handle_ (atom nil)\n          :ever-opened?_    (atom false)\n          :curr-xhr_        (atom nil)}\n         opts))))\n\n#?(:cljs\n   (defrecord ChAutoSocket\n       ;; Dynamic WebSocket/Ajax IChSocket implementation\n       ;; Wraps a swappable ChWebSocket/ChAjaxSocket\n\n       [ws-chsk-opts ajax-chsk-opts state_\n        impl_ ; ChWebSocket or ChAjaxSocket\n        ]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (when-let [impl @impl_]\n         (-chsk-disconnect! impl reason)))\n\n     ;; Possibly reset impl type:\n     (-chsk-reconnect! [chsk]\n       (when-let [impl @impl_]\n         (-chsk-disconnect! impl :requested-reconnect)\n         (-chsk-connect!    chsk)))\n\n     (-chsk-send! [chsk ev opts]\n       (if-let [impl @impl_]\n         (-chsk-send! impl ev opts)\n         (let [{?cb :cb} opts\n               ?cb-fn (cb-chan-as-fn ?cb ev)]\n           (chsk-send->closed! ?cb-fn))))\n\n     (-chsk-connect! [chsk]\n       ;; Starting with a simple downgrade-only strategy here as a proof of concept\n       ;; TODO Later consider smarter downgrade or downgrade+upgrade strategies?\n       (let [ajax-chsk-opts (assoc ajax-chsk-opts :state_ state_)\n             ws-chsk-opts (assoc   ws-chsk-opts :state_ state_)\n\n             ajax-conn!\n             (fn []\n               ;; Remove :auto->:ajax downgrade watch\n               (remove-watch state_ :chsk/auto-ajax-downgrade)\n               (-chsk-connect! (new-ChAjaxSocket ajax-chsk-opts (:csrf-token @state_))))\n\n             ws-conn!\n             (fn []\n               ;; Configure :auto->:ajax downgrade watch\n               (let [downgraded?_ (atom false)]\n                 (add-watch state_ :chsk/auto-ajax-downgrade\n                   (fn [_ _ old-state new-state]\n                     (when-let [impl @impl_]\n                       (when-let [ever-opened?_ (:ever-opened?_ impl)]\n                         (when-not @ever-opened?_\n                           (when (:last-ws-error new-state)\n                             (when (compare-and-set! downgraded?_ false true)\n                               (warnf \"Permanently downgrading :auto chsk -> :ajax\")\n                               (-chsk-disconnect! impl :downgrading-ws-to-ajax)\n                               (reset! impl_ (ajax-conn!))))))))))\n\n               (-chsk-connect! (new-ChWebSocket ws-chsk-opts (:csrf-token @state_))))]\n\n         (reset! impl_ (or (ws-conn!) (ajax-conn!)))\n         chsk))))\n\n#?(:cljs\n   (defn- new-ChAutoSocket [opts csrf-token]\n     (map->ChAutoSocket\n       (merge\n         {:state_ (atom {:type :auto :open? false :ever-opened? false :csrf-token csrf-token})\n          :impl_  (atom nil)}\n         opts))))\n\n   (defn- get-chsk-url [protocol host path type]\n     (let [protocol (case protocol :http \"http:\" :https \"https:\" protocol)\n           protocol (have [:el #{\"http:\" \"https:\"}] protocol)\n           protocol (case type\n                      :ajax     protocol\n                      :ws (case protocol \"https:\" \"wss:\" \"http:\" \"ws:\"))]\n       (str protocol \"//\" (enc/path host path))))\n\n   (defn make-channel-socket-client!\n     \"Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :headers        ; Map of additional headers to include in the initiating request\n                       ; (currently only for Java clients).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms.\"\n\n     [path ?csrf-token &\n      [{:keys [type protocol host port params headers recv-buf-or-n packer ws-kalive-ms\n               client-id ajax-opts wrap-recv-evs? backoff-ms-fn]\n        :as   opts\n        :or   {type           :auto\n               recv-buf-or-n  (async/sliding-buffer 2048) ; Mostly for buffered-evs\n               packer         :edn\n               client-id      (or (:client-uuid opts) ; Backwards compatibility\n                                  (enc/uuid-str))\n               wrap-recv-evs? true\n               backoff-ms-fn  enc/exp-backoff\n               ws-kalive-ms   (enc/ms :secs 20)}}\n\n       _deprecated-more-opts]]\n\n     (have? [:in #{:ajax :ws :auto}] type)\n     (have? enc/nblank-str? client-id)\n\n     (when (not (nil? _deprecated-more-opts)) (warnf \"`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0.\"))\n     (when (contains? opts :lp-timeout) (warnf \":lp-timeout opt has CHANGED; please use :lp-timout-ms.\"))\n\n     (when (or (not (string? ?csrf-token)) (str/blank? ?csrf-token))\n       (warnf \"WARNING: no CSRF token provided. Connections will FAIL if server-side CSRF check is enabled (as it is by default).\"))\n\n     (let [packer (coerce-packer packer)\n\n           [ws-url ajax-url]\n           (let [;; Not available with React Native, etc.\n                 ;; Must always provide explicit path for Java client.\n                 win-loc  #?(:clj nil :cljs (enc/get-win-loc))\n                 path     (have (or path (:pathname win-loc)))]\n\n             (if-let [f (:chsk-url-fn opts)] ; Deprecated\n               [(f path win-loc :ws)\n                (f path win-loc :ajax)]\n\n               (let [protocol (or protocol (:protocol win-loc) :http)\n                     host\n                     (if host\n                       (if port (str host \":\" port) host)\n                       (if port\n                         (str (:hostname win-loc) \":\" port)\n                         (do  (:host     win-loc))))]\n\n                 [(get-chsk-url protocol host path :ws)\n                  (get-chsk-url protocol host path :ajax)])))\n\n           private-chs\n           {:internal (chan (async/sliding-buffer 128))\n            :state    (chan (async/sliding-buffer 10))\n            :<server\n            (let [;; Nb must be >= max expected buffered-evs size:\n                  buf (async/sliding-buffer 512)]\n              (if wrap-recv-evs?\n                (chan buf (map (fn [ev] [:chsk/recv ev])))\n                (chan buf)))}\n\n           common-chsk-opts\n           {:client-id    client-id\n            :chs          private-chs\n            :params       params\n            :headers      headers\n            :packer       packer\n            :ws-kalive-ms ws-kalive-ms}\n\n           ws-chsk-opts\n           (merge common-chsk-opts\n             {:url           ws-url\n              :backoff-ms-fn backoff-ms-fn})\n\n           ajax-chsk-opts\n           (merge common-chsk-opts\n             {:url           ajax-url\n              :ajax-opts     ajax-opts\n              :backoff-ms-fn backoff-ms-fn})\n\n           auto-chsk-opts\n           {:ws-chsk-opts   ws-chsk-opts\n            :ajax-chsk-opts ajax-chsk-opts}\n\n           ?chsk\n           (-chsk-connect!\n             (case type\n               :ws      (new-ChWebSocket    ws-chsk-opts ?csrf-token)\n               :ajax\n               #?(:cljs (new-ChAjaxSocket ajax-chsk-opts ?csrf-token)\n                  :clj  (throw (UnsupportedOperationException.\n                                 \"Only :ws channel socket type supported for clj\")))\n               :auto\n               #?(:cljs (new-ChAutoSocket auto-chsk-opts ?csrf-token)\n                  :clj  (throw (UnsupportedOperationException.\n                                 \"Only :ws channel socket type supported for clj\")))))]\n\n       (if-let [chsk ?chsk]\n         (let [chsk-state_ (:state_ chsk)\n               internal-ch (:internal private-chs)\n               send-fn (partial chsk-send! chsk)\n               ev-ch\n               (async/merge\n                 [(:internal private-chs)\n                  (:state    private-chs)\n                  (:<server  private-chs)]\n                 recv-buf-or-n)\n\n               ev-msg-ch\n               (async/chan 1\n                 (map\n                   (fn [ev]\n                     (let [[ev-id ev-?data :as ev] (as-event ev)]\n                       {;; Allow client to inject into router for handler:\n                        :ch-recv internal-ch\n                        :send-fn send-fn\n                        :state   chsk-state_\n                        :event   ev\n                        :id      ev-id\n                        :?data   ev-?data}))))]\n\n           (async/pipe ev-ch ev-msg-ch)\n\n           {:chsk    chsk\n            :ch-recv ev-msg-ch\n            :send-fn send-fn\n            :state   (:state_ chsk)})\n\n         (warnf \"Failed to create channel socket\"))))\n\n;;;; Event-msg routers (handler loops)\n\n(defn- -start-chsk-router!\n  [server? ch-recv event-msg-handler opts]\n  (let [{:keys [trace-evs? error-handler simple-auto-threading?]} opts\n        ch-ctrl (chan)\n\n        execute1\n        #?(:cljs (fn [f] (f))\n           :clj\n           (if simple-auto-threading?\n             (fn [f] (future-call f))\n             (fn [f] (f))))]\n\n    (go-loop []\n      (let [[v p] (async/alts! [ch-recv ch-ctrl])\n            stop? (or (= p ch-ctrl) (nil? v))]\n\n        (when-not stop?\n          (let [{:as event-msg :keys [event]} v]\n\n            (execute1\n              (fn []\n                (enc/catching\n                  (do\n                    (when trace-evs? (tracef \"Pre-handler event: %s\" event))\n                    (event-msg-handler\n                      (if server?\n                        (have! server-event-msg? event-msg)\n                        (have! client-event-msg? event-msg))))\n                  e1\n                  (enc/catching\n                    (if-let [eh error-handler]\n                      (error-handler e1 event-msg)\n                      (errorf e1 \"Chsk router `event-msg-handler` error: %s\" event))\n                    e2 (errorf e2 \"Chsk router `error-handler` error: %s\"     event)))))\n\n            (recur)))))\n\n    (fn stop! [] (async/close! ch-ctrl))))\n\n(defn start-server-chsk-router!\n  \"Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default).\"\n  [ch-recv event-msg-handler &\n   [{:as opts :keys [trace-evs? error-handler simple-auto-threading?]}]]\n  (-start-chsk-router! :server ch-recv event-msg-handler opts))\n\n(defn start-client-chsk-router!\n  \"Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\"\n  [ch-recv event-msg-handler &\n   [{:as opts :keys [trace-evs? error-handler]}]]\n  (-start-chsk-router! (not :server) ch-recv event-msg-handler opts))\n\n;;;; Platform aliases\n\n(def event-msg? #?(:clj server-event-msg? :cljs client-event-msg?))\n\n(def make-channel-socket!\n  \"Platform-specific alias for `make-channel-socket-server!` or\n  `make-channel-socket-client!`. Please see the appropriate aliased fn\n   docstring for details.\"\n  #?(:clj  make-channel-socket-server!\n     :cljs make-channel-socket-client!))\n\n(def start-chsk-router!\n  \"Platform-specific alias for `start-server-chsk-router!` or\n  `start-client-chsk-router!`. Please see the appropriate aliased fn\n  docstring for details.\"\n  #?(:clj  start-server-chsk-router!\n     :cljs start-client-chsk-router!))\n\n;;;; Deprecated\n\n(enc/deprecated\n  #?(:clj\n     (defn start-chsk-router-loop!\n       \"DEPRECATED: Please use `start-chsk-router!` instead\"\n       [event-msg-handler ch-recv]\n       (start-server-chsk-router! ch-recv\n         ;; Old handler form: (fn [ev-msg ch-recv])\n         (fn [ev-msg] (event-msg-handler ev-msg (:ch-recv ev-msg))))))\n\n  #?(:cljs\n     (defn start-chsk-router-loop!\n       \"DEPRECATED: Please use `start-chsk-router!` instead\"\n       [event-handler ch-recv]\n       (start-client-chsk-router! ch-recv\n         ;; Old handler form: (fn [ev ch-recv])\n         (fn [ev-msg] (event-handler (:event ev-msg) (:ch-recv ev-msg))))))\n\n  (def set-logging-level! \"DEPRECATED. Please use `timbre/set-level!` instead\" timbre/set-level!)\n\n  #?(:cljs (def ajax-call \"DEPRECATED: Please use `ajax-lite` instead\" enc/ajax-lite))\n  #?(:cljs\n     (def default-chsk-url-fn \"DEPRECATED\"\n       (fn [path {:as location :keys [protocol host pathname]} websocket?]\n         (let [protocol\n               (if websocket?\n                 (if (= protocol \"https:\") \"wss:\" \"ws:\")\n                 protocol)]\n           (str protocol \"//\" host (or path pathname)))))))\n","~:reader-features",["^[",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.core/vector?","taoensso.encore/encore-version","taoensso.encore/assert-min-encore-version","taoensso.sente/sente-version","taoensso.sente/node-target?","cljs.core._EQ_","cljs.core/*target*","js/taoensso","js/taoensso.sente","js/taoensso.sente.debug-mode?_","taoensso.sente/debug-mode?_","cljs.core.atom","taoensso.sente/expected","expected","x","cljs.core/type","taoensso.sente/validate-event","cljs.core/not","G__74937","fexpr__74936","cljs.core/count","vec__74938","cljs.core.nth","ev-id","_","cljs.core/Keyword","cljs.core/namespace","taoensso.sente/assert-event","temp__5735__auto__","errs","cljs.core.ex_info","taoensso.sente/event?","taoensso.sente/as-event","temp__5733__auto__","taoensso.sente/client-event-msg?","cljs.core/map?","taoensso.encore/ks>=","map__74952","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","ch-recv","send-fn","state","event","taoensso.encore/chan?","cljs.core/ifn?","taoensso.encore/atom?","taoensso.sente/server-event-msg?","map__74961","connected-uids","send-buffers","ring-req","client-id","?reply-fn","taoensso.encore/nblank-str?","p__74974","map__74975","taoensso.sente/put-server-event-msg>ch-recv!","ev-msg","vec__74985","ev-?data","valid-event","ev-msg*","cljs.core.merge","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core.async.put_BANG_","taoensso.sente/cb-error?","cb-reply-clj","fexpr__74992","taoensso.sente/cb-success?","taoensso.sente/unpack","packer","prefixed-pstr","taoensso.truss.impl/-invar-violation!","vec__74994","wrapped?","taoensso.encore/str-starts-with?","pstr","cljs.core.subs","clj","e74997","taoensso.sente.interfaces/unpack","t","?cb-uuid","var_args","G__75002","taoensso.sente/pack","js/Error","taoensso.sente.interfaces/pack","wrapped-clj","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","taoensso.sente/EdnPacker","taoensso.sente/->EdnPacker","taoensso.encore.pr_edn","s","taoensso.encore.read_edn","taoensso.sente/default-edn-packer","taoensso.sente/coerce-packer","e","p1__75007#","taoensso.truss.impl/-dummy-error","e75009","cljs.core/native-satisfies?","taoensso.sente.interfaces/IPacker","taoensso.sente/next-idx!","taoensso.encore/idx-fn","p__75015","map__75017","taoensso.sente/bad-origin?","allowed-origins","headers","origin","referer","cljs.core/contains?","cljs.core/set","p1__75014#","taoensso.encore/rsome","clojure.string/starts-with?","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","taoensso.sente/make-channel-socket-server!","p__75034","vec__75035","map__75038","seq75032","G__75033","cljs.core/first","cljs.core/next","self__4723__auto__","web-server-ch-adapter","recv-buf-or-n","ws-kalive-ms","lp-timeout-ms","send-buf-ms-ajax","send-buf-ms-ws","user-id-fn","bad-csrf-fn","bad-origin-fn","csrf-token-fn","handshake-data-fn","authorized?-fn","unauthorized-fn","cljs.core.async/sliding-buffer","taoensso.encore.ms","cljs.core.get_in","_ring-req","or__4126__auto__","e75048","e75049","taoensso.encore/pos-int?","p1__75023#","e75050","taoensso.sente.interfaces/IServerChanAdapter","max-ms","taoensso.sente/default-client-side-ajax-timeout-ms","fexpr__75057","cljs.core/set?","cljs.core.async.chan","G__75059","cljs.core.assoc","conns_","send-buffers_","connected-uids_","upd-conn!","conn-type","uid","taoensso.encore.swap_in_BANG_","?v","vec__75064","?sch","_udt","new-udt","taoensso.encore/now-udt","taoensso.encore/swapped","new-?sch","connect-uid!","taoensso.truss.impl/some?","e75067","newly-connected?","p__75069","map__75070","ws","ajax","any","old-m","new-m","G__75073","cljs.core.conj","old-any","new-any","upd-connected-uid!","e75074","newly-disconnected?","p__75075","map__75076","cljs.core/deref","conns'","any-ws-clients?","any-ajax-clients?","any-clients?","cljs.core.disj","p__75083","vec__75084","map__75087","user-id","ev","opts","flush?","ev-uuid","taoensso.encore.uuid_str","flush-buffer!","pulled","m","vec__75093","ev-uuids","cljs.core.dissoc","vec__75097","buffered-evs","buffered-evs-ppstr","taoensso.sente.pack","G__75101","taoensso.sente/send-buffered-server-evs>ws-clients!","taoensso.sente/send-buffered-server-evs>ajax-clients!","seq__75103","cljs.core/seq","chunk__75104","count__75105","i__75106","vec__75115","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__75118","cljs.core/vals","sch","taoensso.sente.interfaces/sch-close!","seq__75121","chunk__75122","count__75123","i__75124","vec__75131","vec__75134","seq__75137","chunk__75138","count__75139","i__75140","vec__75149","vec__75153","ws-timeout","cljs.core.async/timeout","ajax-timeout","c__73714__auto__","cljs.core.async.impl.dispatch/run","f__73715__auto__","switch__73644__auto__","state_75171","state_val_75172","cljs.core.async.impl.ioc-helpers/take!","inst_75165","inst_75166","statearr-75176","cljs.core.async.impl.ioc-helpers/return-chan","statearr-75178","state-machine__73645__auto__","ret-value__73646__auto__","result__73647__auto__","cljs.core/keyword-identical?","ex__73648__auto__","e75179","statearr-75180","statearr-75181","state__73716__auto__","statearr-75185","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","state_75190","state_val_75191","inst_75187","inst_75188","statearr-75194","statearr-75196","e75197","statearr-75198","statearr-75199","statearr-75203","bad-csrf?","reference-csrf-token","csrf-token-from-client","taoensso.encore/const-str=","unauthorized?","possible-rejection-resp","ev-msg-const","b2__26857__auto__","resp","taoensso.sente.interfaces/ring-req->server-ch-resp","server-ch","websocket?","vec__75204","params","ppstr","has-cb?","reply-fn","replied?_","resp-clj","cljs.core/compare-and-set!","taoensso.sente.interfaces/sch-send!","ms","state_75212","state_val_75213","inst_75207","inst_75209","inst_75210","statearr-75214","statearr-75215","e75216","statearr-75217","statearr-75218","statearr-75219","sch-uuid","receive-event-msg!","taoensso$sente$self","send-handshake!","?handshake-data","handshake-ev","clojure.string/blank?","err-msg","updated-conn","udt-open","state_75271","state_val_75272","inst_75266","statearr-75275","inst_75226","inst_75228","statearr-75276","statearr-75277","inst_75240","inst_75232","inst_75235","inst_75237","cljs.core/PersistentVector","inst_75238","inst_75239","statearr-75279","statearr-75280","statearr-75281","inst_75248","inst_75258","statearr-75282","statearr-75283","statearr-75284","inst_75268","statearr-75286","inst_75230","inst_75253","inst_75254","statearr-75289","statearr-75290","inst_75247","inst_75249","statearr-75293","statearr-75294","statearr-75295","inst_75263","statearr-75296","inst_75251","statearr-75297","statearr-75298","statearr-75299","e75300","statearr-75301","statearr-75302","statearr-75303","taoensso.sente.interfaces/sch-open?","handshake?","state_75333","state_val_75334","inst_75306","inst_75313","inst_75308","inst_75309","inst_75310","inst_75311","inst_75312","statearr-75338","statearr-75339","statearr-75340","inst_75320","inst_75321","inst_75322","statearr-75342","statearr-75343","statearr-75344","statearr-75345","inst_75331","inst_75324","inst_75325","statearr-75347","statearr-75350","inst_75328","statearr-75352","statearr-75353","e75354","statearr-75355","statearr-75356","statearr-75357","req-ppstr","vec__75360","_status","udt-close","state_75418","state_val_75419","statearr-75420","inst_75366","statearr-75421","statearr-75422","inst_75378","inst_75376","inst_75395","inst_75377","inst_75389","inst_75390","inst_75391","inst_75394","vec__75369","statearr-75426","statearr-75427","statearr-75428","inst_75381","inst_75382","inst_75383","statearr-75429","inst_75404","inst_75405","inst_75406","inst_75407","statearr-75430","inst_75368","inst_75372","inst_75373","inst_75374","inst_75375","inst_75379","statearr-75431","statearr-75432","statearr-75434","inst_75413","statearr-75435","inst_75397","inst_75398","inst_75399","inst_75400","inst_75401","inst_75402","statearr-75436","statearr-75437","statearr-75438","inst_75386","inst_75387","statearr-75439","statearr-75440","statearr-75441","inst_75410","statearr-75442","statearr-75443","inst_75416","statearr-75444","e75445","statearr-75446","statearr-75448","statearr-75452","_?sch","udt-t1","disconnect?","p__75393","vec__75423","_sch","?m","cljs.core/empty?","error","buffered-evs-pstr","seq__75455","chunk__75456","count__75457","i__75458","vec__75473","vec__75476","vec__75482","vec__75485","ms-backoffs","client-ids-unsatisfied","cljs.core/keys","state_75541","state_val_75542","inst_75499","inst_75492","inst_75493","inst_75512","inst_75513","cljs.core/PersistentHashSet","inst_75514","statearr-75549","inst_75491","statearr-75550","statearr-75551","statearr-75552","inst_75533","statearr-75553","inst_75519","inst_75524","inst_75525","inst_75526","inst_75509","statearr-75554","statearr-75555","statearr-75556","inst_75538","inst_75536","statearr-75557","inst_75495","inst_75496","inst_75497","inst_75498","inst_75502","taoensso.truss.impl/non-throwing","inst_75503","statearr-75564","statearr-75565","statearr-75566","statearr-75567","inst_75517","inst_75518","statearr-75571","statearr-75572","statearr-75574","inst_75507","statearr-75575","statearr-75576","inst_75528","inst_75529","statearr-75577","statearr-75578","inst_75521","inst_75522","statearr-75580","statearr-75581","statearr-75582","statearr-75583","e75584","statearr-75585","statearr-75587","statearr-75588","n","client-ids-satisfied","?pulled","ks-to-pull","cljs.core.remove","cljs.core.reduce","k","vec__75558","udt","cljs.core/select-keys","cljs.core/reduce-kv","p__75511","vec__75544","sent?","cljs.core.into","cljs.core/complement","cljs.core/rand-int","taoensso.sente/ajax-lite","taoensso.encore/ajax-lite","taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn","x__4428__auto__","m__4429__auto__","taoensso.sente/-chsk-connect!","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn","taoensso.sente/-chsk-disconnect!","taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn","taoensso.sente/-chsk-reconnect!","taoensso$sente$IChSocket$_chsk_send_BANG_$dyn","taoensso.sente/-chsk-send!","taoensso.sente/IChSocket","chsk","reason","taoensso.sente/chsk-connect!","taoensso.sente/chsk-disconnect!","taoensso.sente/chsk-reconnect!","taoensso.sente/chsk-destroy!","G__75633","taoensso.sente/chsk-send!","taoensso.sente.chsk_send_BANG_","?timeout-ms","?cb","cljs.core/boolean","taoensso.sente/chsk-send->closed!","?cb-fn","taoensso.sente/assert-send-args","taoensso.encore/nat-int?","taoensso.sente/pull-unused-cb-fn!","cbs-waiting_","cb-uuid","?f","taoensso.sente/swap-chsk-state!","f","vec__75642","old-state","new-state","cljs.core.not_EQ_","output","taoensso.sente/chsk-state->closed","e75645","G__75649","taoensso.truss.impl/set*","e75647","taoensso.sente/cb-chan-as-fn","e75653","vec__75654","cb-ch","reply","cljs.core.keyword","taoensso.encore/as-qname","taoensso.sente/receive-buffered-evs!","chs","seq__75659","chunk__75660","count__75661","i__75662","vec__75673","vec__75676","id","taoensso.sente/handshake?","vec__75682","x1","taoensso.sente/receive-handshake!","chsk-type","G__75694","e75689","e75695","vec__75700","vec__75703","map__75706","?uid","ever-opened?_","first-handshake?","p1__75685#","taoensso.sente/?node-npm-websocket_","make-package-name","prefix","require-fn","js/require","cljs.core/constantly","e75708","G__75709","p__75710","map__75711","taoensso.sente/create-js-client-websocket!","onerror-fn","onmessage-fn","onclose-fn","uri-str","WebSocket","taoensso.encore.oget","goog/global","socket","G__75715","p__75716","map__75717","taoensso.sente/create-websocket!","this__4380__auto__","k__4381__auto__","this__4382__auto__","k75731","else__4383__auto__","G__75737","url","state_","instance-handle_","retry-count_","backoff-ms-fn","socket_","udt-last-comms_","__extmap","this__4399__auto__","f__4400__auto__","init__4401__auto__","ret__4402__auto__","p__75739","vec__75740","k__4403__auto__","v__4404__auto__","this__4394__auto__","writer__4395__auto__","opts__4396__auto__","pr-pair__4397__auto__","keyval__4398__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","G__75730","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4378__auto__","__meta","this__4375__auto__","__hash","this__4384__auto__","this__4376__auto__","h__4238__auto__","coll__4377__auto__","cljs.core/hash-unordered-coll","this75732","other75733","this__4389__auto__","k__4390__auto__","cljs.core/-with-meta","cljs.core/not-empty","this__4387__auto__","k__4388__auto__","pred__75765","expr__75766","this__4392__auto__","cljs.core/MapEntry","this__4379__auto__","this__4385__auto__","entry__4386__auto__","cljs.core/-nth","cljs.core/-conj","taoensso.sente/ChWebSocket","this__4423__auto__","cljs.core/List","writer__4424__auto__","G__75735","extmap__4419__auto__","G__75930","cljs.core/record?","taoensso.sente/->ChWebSocket","taoensso.sente/map->ChWebSocket","cljs.core/reset!","p1__75721#","map__75784","taoensso.encore.reset_in_BANG_","e75790","timeout-ms","state_75805","state_val_75806","inst_75795","inst_75798","inst_75797","statearr-75811","statearr-75812","statearr-75813","inst_75800","statearr-75817","statearr-75819","inst_75803","statearr-75820","e75821","statearr-75822","statearr-75823","statearr-75827","e75831","cb-fn*","e75832","instance-handle","have-handle?","connect-fn","retry-fn","retry-count*","cljs.core.swap_BANG_","cljs.core/inc","backoff-ms","udt-next-reconnect","p1__75723#","ws-ev","e75843","cljs.core.js__GT_clj","p1__75724#","vec__75845","cb-fn","last-ws-close","p1__75727#","p1__75728#","?socket","e75852","taoensso.encore/merge-url-with-query-string","old-socket","state_75892","state_val_75893","inst_75886","statearr-75894","statearr-75895","inst_75864","inst_75865","statearr-75896","statearr-75897","statearr-75898","statearr-75900","inst_75889","inst_75861","inst_75862","statearr-75903","statearr-75904","inst_75867","inst_75868","statearr-75908","statearr-75909","inst_75881","statearr-75910","statearr-75911","inst_75871","inst_75872","inst_75873","inst_75875","inst_75876","inst_75877","cljs.core/PersistentHashMap","inst_75878","statearr-75915","statearr-75916","e75920","statearr-75921","statearr-75922","statearr-75923","taoensso.sente/new-ChWebSocket","csrf-token","k75944","G__75951","ajax-opts","curr-xhr_","p__75954","vec__75955","G__75943","this75945","other75946","pred__75968","expr__75969","taoensso.sente/ChAjaxSocket","G__75947","G__76003","taoensso.sente/->ChAjaxSocket","taoensso.sente/map->ChAjaxSocket","p1__75934#","map__75977","G__75979","G__75980","G__75981","p__75982","map__75983","?error","?content","p1__75935#","vec__75988","content","resp-ppstr","p1__75936#","poll-fn","retry-count","p1__75938#","G__75994","G__75995","G__75996","p__75997","map__75998","p1__75941#","vec__76000","p1__75942#","taoensso.sente/new-ChAjaxSocket","k76005","G__76009","ws-chsk-opts","ajax-chsk-opts","impl_","p__76010","vec__76011","G__76004","this76006","other76007","pred__76014","expr__76015","taoensso.sente/ChAutoSocket","G__76008","G__76019","taoensso.sente/->ChAutoSocket","taoensso.sente/map->ChAutoSocket","impl","map__76017","ajax-conn!","cljs.core/remove-watch","ws-conn!","downgraded?_","cljs.core/add-watch","taoensso.sente/new-ChAutoSocket","taoensso.sente/get-chsk-url","protocol","host","path","type","G__76020","G__76022","e76021","G__76023","G__76024","taoensso.encore.path","taoensso.sente/make-channel-socket-client!","p__76028","vec__76029","map__76032","seq76025","G__76026","G__76027","?csrf-token","port","wrap-recv-evs?","taoensso.encore/exp-backoff","_deprecated-more-opts","G__76035","e76034","e76036","vec__76037","ws-url","ajax-url","win-loc","taoensso.encore/get-win-loc","z","e76040","taoensso.truss.impl/WrappedError","e76041","private-chs","buf","cljs.core.map","common-chsk-opts","auto-chsk-opts","?chsk","G__76042","chsk-state_","internal-ch","cljs.core.partial","ev-ch","cljs.core.async.merge","ev-msg-ch","vec__76043","cljs.core.async.pipe","taoensso.sente/-start-chsk-router!","server?","event-msg-handler","map__76046","trace-evs?","error-handler","simple-auto-threading?","ch-ctrl","execute1","state_76095","state_val_76096","inst_76091","statearr-76097","statearr-76098","inst_76061","inst_76058","inst_76057","inst_76056","inst_76059","inst_76060","statearr-76099","statearr-76100","statearr-76101","statearr-76102","inst_76077","statearr-76103","inst_76066","inst_76067","statearr-76104","statearr-76105","inst_76093","statearr-76106","inst_76052","inst_76053","inst_76054","cljs.core.async/ioc-alts!","statearr-76107","statearr-76108","statearr-76109","inst_76082","statearr-76110","inst_76085","inst_76086","inst_76087","vec__76049","map__76064","inst_76088","statearr-76116","statearr-76117","inst_76080","statearr-76118","statearr-76119","inst_76069","inst_76070","inst_76071","inst_76072","inst_76073","statearr-76120","statearr-76121","statearr-76122","e76123","statearr-76124","statearr-76125","statearr-76126","v","p","stop?","event-msg","e76111","G__76113","e76114","e76115","e1","e76112","eh","e2","cljs.core.async/close!","taoensso.sente/start-server-chsk-router!","p__76130","vec__76131","map__76134","seq76127","G__76128","G__76129","taoensso.sente/start-client-chsk-router!","p__76139","vec__76140","map__76143","seq76136","G__76137","G__76138","taoensso.sente/event-msg?","taoensso.sente/make-channel-socket!","taoensso.sente/start-chsk-router!","taoensso.sente/start-chsk-router-loop!","event-handler","G__76145","G__76146","taoensso.sente/set-logging-level!","taoensso.timbre/set-level!","taoensso.sente/ajax-call","taoensso.sente/default-chsk-url-fn","p__76147","map__76148","location","pathname"]],"~:used-vars",["^[",["~$taoensso.sente/-chsk-send!","~$taoensso.encore/idx-fn","~$taoensso.sente/get-chsk-url","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/keyword","~$taoensso.encore/read-edn","~$clojure.string/starts-with?","~$taoensso.sente/->EdnPacker","~$taoensso.sente/as-event","~$taoensso.sente/pack","~$taoensso.sente/chsk-state->closed","~$cljs.core/pr-sequential-writer","~$taoensso.sente/map->ChAjaxSocket","~$taoensso.sente/receive-handshake!","~$cljs.core/vector?","~$taoensso.sente/sente-version","~$clojure.string/blank?","~$cljs.core/=","~$taoensso.sente/server-event-msg?","~$taoensso.sente/chsk-destroy!","~$taoensso.sente.interfaces/sch-send!","~$cljs.core/ifn?","~$cljs.core/-assoc","~$taoensso.truss.impl/-invar-violation!","~$taoensso.sente/node-target?","~$cljs.core/-write","~$taoensso.sente/ajax-lite","~$taoensso.timbre/-log!","~$taoensso.sente/make-channel-socket!","~$cljs.core/-iterator","~$taoensso.encore/rsome","~$cljs.core/count","~$taoensso.encore/as-qname","~$cljs.core/deref","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","~$taoensso.encore/pr-edn","~$cljs.core/Keyword","~$taoensso.sente/-chsk-disconnect!","~$taoensso.sente/event?","~$taoensso.sente/create-websocket!","~$taoensso.sente/ChWebSocket","~$cljs.core/not=","~$taoensso.sente/send-buffered-server-evs>ws-clients!","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$taoensso.sente/chsk-send!","~$cljs.core/Delay","~$cljs.core.async/put!","~$cljs.core/chunk-rest","~$cljs.core/atom","~$taoensso.sente/validate-event","~$cljs.core/-with-meta","~$cljs.core/concat","~$taoensso.encore/nat-int?","~$taoensso.sente/-chsk-reconnect!","~$taoensso.sente/ChAjaxSocket","~$taoensso.sente/-chsk-connect!","~$taoensso.sente/pull-unused-cb-fn!","~$js/taoensso.sente","~$taoensso.sente/put-server-event-msg>ch-recv!","~$taoensso.sente/make-channel-socket-server!","~$taoensso.sente/assert-event","~$cljs.core/set","~$js/taoensso","~$taoensso.sente/chsk-connect!","~$cljs.core/empty?","~$js/taoensso.sente.debug-mode?_","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/map?","~$cljs.core/reset!","~$taoensso.encore/ks>=","~$taoensso.timbre/*config*","~$taoensso.encore/nblank-str?","~$cljs.core/-conj","~$cljs.core/namespace","~$taoensso.sente/start-chsk-router!","~$taoensso.sente/default-edn-packer","~$cljs.core.async.impl.dispatch/run","~$taoensso.encore/assert-min-encore-version","~$taoensso.sente/create-js-client-websocket!","~$cljs.core.async/pipe","~$taoensso.sente/assert-send-args","~$taoensso.sente/ajax-call","~$cljs.core/PersistentVector","~$cljs.core/get-in","~$cljs.core/List","~$taoensso.sente/coerce-packer","~$taoensso.encore/swap-in!","~$taoensso.sente/expected","~$taoensso.sente/bad-origin?","~$cljs.core/get","~$taoensso.sente/handshake?","~$taoensso.sente/start-server-chsk-router!","~$taoensso.sente/receive-buffered-evs!","~$taoensso.sente/unpack","~$taoensso.encore/atom?","~$cljs.core/-nth","~$cljs.core.async/close!","~$taoensso.sente/next-idx!","~$taoensso.sente/-start-chsk-router!","~$cljs.core/not-empty","~$taoensso.sente/new-ChAjaxSocket","~$taoensso.encore/ajax-lite","~$taoensso.sente/default-chsk-url-fn","~$taoensso.sente/cb-error?","~$taoensso.sente/start-chsk-router-loop!","~$taoensso.encore/ms","~$taoensso.sente/chsk-send->closed!","~$taoensso.sente/EdnPacker","~$taoensso.sente/ChAutoSocket","~$taoensso.sente/->ChAutoSocket","~$cljs.core/-lookup","~$taoensso.encore/path","~$cljs.core/ex-info","~$taoensso.encore/chan?","~$cljs.core/nil-iter","~$taoensso.sente/send-buffered-server-evs>ajax-clients!","~$taoensso.sente/default-client-side-ajax-timeout-ms","~$taoensso.sente/set-logging-level!","~$taoensso.encore/encore-version","~$cljs.core/*target*","~$taoensso.encore/now-udt","~$cljs.core/next","~$taoensso.sente/swap-chsk-state!","~$taoensso.sente/->ChAjaxSocket","~$cljs.core/RecordIter","~$taoensso.encore/swapped","~$taoensso.sente/event-msg?","~$cljs.core/not","~$taoensso.encore/reset-in!","~$taoensso.sente/new-ChWebSocket","~$cljs.core/assoc","~$taoensso.sente/chsk-reconnect!","~$taoensso.timbre/set-level!","~$taoensso.sente/client-event-msg?","~$taoensso.sente/start-client-chsk-router!","~$js/require","~$taoensso.sente/new-ChAutoSocket","~$taoensso.sente/make-channel-socket-client!","~$cljs.core/merge","~$taoensso.sente/map->ChAutoSocket","~$taoensso.sente/debug-mode?_","~$taoensso.sente/IChSocket","~$js/Error","~$taoensso.sente/chsk-disconnect!","~$taoensso.sente/map->ChWebSocket","~$taoensso.sente/cb-success?","~$taoensso.sente/->ChWebSocket","~$cljs.core/boolean","~$taoensso.sente.interfaces/ring-req->server-ch-resp","~$cljs.core/type","~$taoensso.sente/cb-chan-as-fn","~$taoensso.sente/?node-npm-websocket_","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1X","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^[",[]],"~:deps-syms",["^1<","~$goog.dom.HtmlElement"]]],["^1X","goog/async/freelist.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","cljs/core/async/impl/ioc_helpers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","~$cljs.core.async.impl.protocols"]]],["^1X","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.labs.userAgent.util","~$goog.string"]]],["^1X","taoensso/sente/interfaces.cljc"],["c1f17aca6ea8871ecef4db45de04af627144de69","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^R"]]],["^1X","cljs/core/async.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^5X","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1X","goog/timer/timer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.Promise","~$goog.events.EventTarget"]]],["^1X","cljs/tools/reader/impl/utils.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^1?","^5Z"]]],["^1X","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","~$goog.asserts"]]],["^1X","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/string/stringformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^5Z"]]],["^1X","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1X","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^5Y","~$goog.object","~$goog.string.internal"]]],["^1X","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^6;"]]],["^1X","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67"]]],["^1X","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^5Y","~$goog.reflect","^5Z"]]],["^1X","goog/structs/prioritypool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1X","goog/async/run.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1X","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/async/workqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.async.FreeList"]]],["^1X","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^68","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1X","goog/promise/resolver.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^69"]]],["^1X","cljs/tools/reader/edn.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^5Z","~$goog.string.StringBuffer"]]],["^1X","goog/structs/priorityqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.structs.Heap"]]],["^1X","goog/net/xhrio.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.Timer","^64","^67","^6L","^66","~$goog.json.hybrid","~$goog.log","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^6:","^5Z","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","^69"]]],["^1X","goog/promise/thenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","taoensso/sente.cljc"],["c1f17aca6ea8871ecef4db45de04af627144de69","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^1?","^1:","^R","^N","^18"]]],["^1X","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","cljs/tools/reader/impl/inspect.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;"]]],["^1X","cljs/tools/reader.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^6Q","^6R","^6S","^6P","^64","^5Z","^6U"]]],["^1X","goog/net/wrapperxmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1X","goog/events/eventtarget.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.Disposable","^67","~$goog.events","~$goog.events.Event","^6N","^6O","^6:"]]],["^1X","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.disposable.IDisposable"]]],["^1X","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67"]]],["^1X","taoensso/encore.cljc"],["b3323c27a5e52116fd63b18ea4641ed8c11c9177","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^1?","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","^6:","^5Z","~$goog.string.format","^6U","^78","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","^6[","^6Z","~$taoensso.truss"]]],["^1X","goog/structs/set.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^72","~$goog.structs.Collection","^73"]]],"~:SHADOW-TIMESTAMP",[1662313924000,1662313924000,1662129148000],["^1X","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","^6E"]]],["^1X","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.events.ListenableKey"]]],["^1X","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.html.trustedtypes","^6>","^6?","^6@","^6A"]]],["^1X","cljs/core/async/impl/channels.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^5X","^62","^60"]]],["^1X","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","~$goog.events.Listener","^6:"]]],["^1X","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","taoensso/truss.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","~$taoensso.truss.impl"]]],["^1X","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","cljs/core/async/impl/dispatch.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^60","^6I"]]],["^1X","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","~$goog.html.SafeUrl","^6@","^6A","^6;"]]],["^1X","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^7I","^6=","~$goog.html.uncheckedconversions","^6@","^6;"]]],["^1X","taoensso/truss/impl.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^7;"]]],["^1X","cljs/core/async/impl/protocols.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;"]]],["^1X","goog/net/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1X","goog/net/xhriopool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^7?","~$goog.structs.PriorityPool"]]],["^1X","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","~$goog.dom.TagName","~$goog.dom.tags","^7M","^7N","~$goog.html.SafeStyleSheet","^7I","^6=","^7F","^6>","^6?","^6B","^6:","^6@","^6A","^6;"]]],["^1X","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^6:"]]],["^1X","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/structs/queue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64"]]],["^1X","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^5Y","^5Z"]]],["^1X","taoensso/timbre/appenders/core.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^1?","^R"]]],["^1X","cljs/reader.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^6:","^6T","^7=","^6U"]]],["^1X","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^7S","~$goog.dom.safe","^7L","^7O","~$goog.math.Coordinate","~$goog.math.Size","^6:","^5Z","~$goog.string.Unicode","^69"]]],["^1X","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.debug.Error","^7W"]]],["^1X","cljs/core/async/impl/buffers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^5X"]]],["^1X","goog/debug/logbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.debug.LogRecord"]]],["^1X","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","^5Z","^72","^73","^74","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1X","goog/net/errorcode.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/promise/promise.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.Thenable","^67","^6K","~$goog.async.run","^6J","^80","~$goog.promise.Resolver"]]],["^1X","cljs/core/async/impl/timers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^5X","^5[","^62"]]],["^1X","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/debug/logrecord.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",[]]],["^1X","goog/json/hybrid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.json"]]],["^1X","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^6:"]]],["^1X","cljs/tools/reader/impl/errors.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^6Q","^1?","~$cljs.tools.reader.impl.inspect"]]],["^1X","clojure/string.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^5Z","^6U"]]],["^1X","goog/structs/pool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^77","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1X","goog/net/httpstatus.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/structs/heap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^6:","~$goog.structs.Node"]]],["^1X","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67"]]],["^1X","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^7X","^7O","^6@","^6;"]]],["^1X","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^6;"]]],["^1X","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","~$goog.debug.errorcontext","^69"]]],["^1X","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.math"]]],["^1X","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","cljs/tools/reader/reader_types.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^6R","^5Z","^6U"]]],["^1X","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","^7K","^8="]]],["^1X","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^6L","~$goog.dom","^7S","^7X","^7K","^7L","^6=","^6B","^6C","^6@"]]],["^1X","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","^7L","^7M","^7N","^7U","^7I","^6=","^6@","^6;"]]],["^1X","goog/debug/logger.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","~$goog.debug","~$goog.debug.LogBuffer","^81"]]],["^1X","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^77","~$goog.events.EventId"]]],["^1X","cljs/tools/reader/impl/commons.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^6P","^6Q","^6R"]]],["^1X","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","cljs/core.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.math.Long","~$goog.math.Integer","^5Z","^6:","^64","~$goog.Uri","^6U"]]],["^1X","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","^7F","^6@","^6A"]]],["^1X","goog/log/log.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^8?","~$goog.debug.LogManager","^81","~$goog.debug.Logger"]]],["^1X","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","^7N","^6:","^6@","^6A","^6;"]]],["^1X","goog/structs/collection.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^8?","^68","^79","~$goog.events.EventType","^6E","^69"]]],["^1X","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^6E"]]],["^1X","goog/structs/node.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^69"]]],["^1X","clojure/set.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;"]]],["^1X","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","^5Z"]]],["^1X","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","^6A"]]],["^1X","taoensso/timbre.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^1?","^R","~$taoensso.timbre.appenders.core"]]],["^1X","goog/json/json.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^8A"]]],["^1X","goog/net/xmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^75"]]],["^1X","goog/net/xmlhttp.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.net.WrapperXmlHttpFactory","^76"]]],["^1X","goog/net/xhrlike.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/reader.clj",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/columns.clj",1662581421000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/mutex.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1661296752000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1661296752000,"jar:file:/C:/Users/jovan/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre/appenders/core.clj",1662581421000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1661296752000,"jar:file:/C:/Users/jovan/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre.clj",1662581421000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64.clj",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/exec/threadpool.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/com/taoensso/sente/1.16.0/sente-1.16.0.jar!/taoensso/sente/interfaces.cljc",1662581421000,"jar:file:/C:/Users/jovan/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/exception.clj",1662581421000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.analyzer.jvm/1.1.0/tools.analyzer.jvm-1.1.0.jar!/clojure/tools/analyzer/jvm/utils.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1661291812000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1661291812000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/util.cljc",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1661296752000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/timers.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/env.cljc",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss/impl.clj",1662581421000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/ast.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/env.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/js_deps.cljc",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1661291812000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async/macros.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/dispatch.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/channels.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/com/taoensso/encore/3.1.0/encore-3.1.0.jar!/taoensso/encore.cljc",1662581421000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/ioc_macros.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/edn.clj",1661296752000,"jar:file:/C:/Users/jovan/.m2/repository/com/taoensso/sente/1.16.0/sente-1.16.0.jar!/taoensso/sente.cljc",1662581421000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/concurrent.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/buffers.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/writer.clj",1662581421000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1661296752000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/tagged_literals.cljc",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/reflect.clj",1661291812000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1661291812000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.analyzer.jvm/1.1.0/tools.analyzer.jvm-1.1.0.jar!/clojure/tools/analyzer/jvm.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1661296752000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async/impl/ioc_macros.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1661296570000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/utils.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map.clj",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/analyzer.cljc",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64_vlq.clj",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/compiler.cljc",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/protocols.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/externs.clj",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1661291812000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/core.cljc",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async.clj",1661960151000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1661291812000,"jar:file:/C:/Users/jovan/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/ansi.clj",1662581421000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1661291812000,"jar:file:/C:/Users/jovan/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss.clj",1662581421000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1661291812000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Peter Taoussanis (@ptaoussanis)","^7","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.","^8","taoensso/sente.cljc","^9",1,"^:",5,"^;",1,"^<",19],"^=",["^ ","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"~:shadow/protocol-prefixes",["^[",["taoensso$sente$IChSocket$"]],"^J",["^ ","^K","^L","^M","^N","^O","^P","^Q","^R","^S","^P","^T","^R","^U","^R","^V","^N","^W","^N","^X","^N","^Y","^N"],"^Z",["^[",[]],"^10",["^ "],"^11","^L","^14",null,"^15",["^ ","^16","^N","^17","^18","^19","^1:","^1;","^1;","^1<","^1<","^18","^18","^1:","^1:","^1=","^R","^N","^N","^1>","^1?","^1?","^1?","^R","^R"],"^1@",["^[",["^1A","^1B"]],"~:shadow/js-access-global",["^[",["require","Error"]],"^1C",["^ ","^1D","^1:","^1E","^1:","^1F","^1:","^1G","^1:","^1H","^R","^1I","^R","^1J","^R","^1K","^R"],"~:defs",["^ ","~$chsk-state->closed",["^ ","~:protocol-inline",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",923,"^:",11,"^;",923,"^<",29,"~:private",true,"~:arglists",["^1O",["~$quote",["^1O",[["~$state","~$reason"]]]]]],"^:4",true,"^11","^2B","^8","taoensso/sente.cljc","^<",29,"~:method-params",["^1O",[["^:7","^:8"]]],"~:protocol-impl",null,"~:arglists-meta",["^1O",[null,null]],"^:",4,"~:variadic?",false,"^9",923,"~:ret-tag",["^[",[null,"~$clj","~$any"]],"^;",923,"~:max-fixed-arity",2,"~:fn-var",true,"^:5",["^1O",["^:6",["^1O",[["^:7","^:8"]]]]]],"~$assert-send-args",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",885,"^:",11,"^;",885,"^<",27,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["~$x","~$?timeout-ms","~$?cb"]]]]]],"^:4",true,"^11","^44","^8","taoensso/sente.cljc","^<",27,"^:9",["^1O",[["~$x","^:C","^:D"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",885,"^:=","~$clj-nil","^;",885,"^:@",3,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["~$x","^:C","^:D"]]]]]],"~$map->ChAjaxSocket",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"~:internal-ctor",true,"~:factory","~:map","^9",1307,"^;",1307,"^:5",["^1O",["^:6",["^1O",[["~$G__75947"]]]]],"^7","Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values."],"^11","^2D","^8","taoensso/sente.cljc","^<",27,"^:9",["^1O",[["^:J"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:G",true,"^:<",false,"^:H","^:I","^9",1307,"^:=","^3E","^;",1307,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^:J"]]]]],"^7","Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values."],"~$sente-version",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",113,"^:",6,"^;",113,"^<",19],"^11","^2G","^8","taoensso/sente.cljc","^<",19,"^:",1,"^9",113,"^;",113,"~:tag","~$cljs.core/IVector","^7","Useful for identifying client/server mismatch"],"~$->EdnPacker",["^ ","^:3",null,"^5",["^ ","~:protocols",["^[",["~$taoensso.sente.interfaces/IPacker"]],"^8","taoensso/sente.cljc","^<",19,"^:",10,"^:H","~:positional","^9",240,"^;",240,"^:5",["^1O",["^:6",["^1O",[[]]]]],"~:skip-protocol-flag",null,"^7","Positional factory function for taoensso.sente/EdnPacker."],"^:O",["^[",["^:P"]],"^11","^2?","^8","taoensso/sente.cljc","^<",19,"^:9",["^1O",[[]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^:H","^:Q","^9",240,"^:=","^4O","^;",240,"^:@",0,"^:A",true,"^:5",["^1O",["^:6",["^1O",[[]]]]],"^:R",null,"^7","Positional factory function for taoensso.sente/EdnPacker."],"~$as-event",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",149,"^:",7,"^;",149,"^<",15,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]]],"^11","^2@","^8","taoensso/sente.cljc","^<",15,"^:9",["^1O",[["~$x"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",149,"^:=",["^[",[null,"^:M"]],"^;",149,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]]],"~$server-event-msg?",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",166,"^:",7,"^;",166,"^<",24,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]]],"^11","^2J","^8","taoensso/sente.cljc","^<",24,"^:9",["^1O",[["~$x"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",166,"^:=","~$boolean","^;",166,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]]],"~$send-buffered-server-evs>ws-clients!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",790,"^:",8,"^;",790,"^<",44,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["~$conns_","~$uid","~$buffered-evs-pstr","~$upd-conn!"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"^:4",true,"^11","^38","^8","taoensso/sente.cljc","^<",44,"^:9",["^1O",[["^:W","^:X","^:Y","^:Z"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",790,"^:=","^:E","^;",790,"^:@",4,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^:W","^:X","^:Y","^:Z"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"~$pack",["^ ","^:3",null,"^5",["^ ","^:4",true,"^8","taoensso/sente.cljc","^<",12,"~:top-fn",["^ ","^:<",false,"~:fixed-arity",3,"^:@",3,"^:9",[["~$packer","^:>"],["^;2","^:>","~$?cb-uuid"]],"^:5",["^1O",[["^;2","^:>"],["^;2","^:>","^;3"]]],"^:;",["^1O",[null,null]]],"^:",8,"^9",224,"^;",224,"^:5",["^1O",["^:6",["^1O",[["^;2","^:>"],["^;2","^:>","^;3"]]]]],"^7","clj->prefixed-pstr"],"^:4",true,"^11","^2A","^8","taoensso/sente.cljc","^<",12,"^;0",["^ ","^:<",false,"^;1",3,"^:@",3,"^:9",[["^;2","^:>"],["^;2","^:>","^;3"]],"^:5",["^1O",[["^;2","^:>"],["^;2","^:>","^;3"]]],"^:;",["^1O",[null,null]]],"^:9",[["^;2","^:>"],["^;2","^:>","^;3"]],"^::",null,"^;1",3,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"~:methods",[["^ ","^;1",2,"^:<",false,"^:L","~$string"],["^ ","^;1",3,"^:<",false,"^:L","^;5"]],"^9",224,"^;",224,"^:@",3,"^:A",true,"^:5",["^1O",[["^;2","^:>"],["^;2","^:>","^;3"]]],"^7","clj->prefixed-pstr"],"~$chsk-send!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",871,"^:",10,"^;",871,"^<",20,"^:5",["^1O",["^:6",["^1O",[["~$chsk","~$ev"],["^;7","^;8","^:C","^:D"],["^;7","^;8","~$opts"]]]]],"^7","Sends `[ev-id ev-?data :as event]`, returns true on apparent success.","^;0",["^ ","^:<",false,"^;1",4,"^:@",4,"^:9",[["^;7","^;8"],["^;7","^;8","^:C","^:D"],["^;7","^;8","^;9"]],"^:5",["^1O",[["^;7","^;8"],["^;7","^;8","^:C","^:D"],["^;7","^;8","^;9"]]],"^:;",["^1O",[null,null,null]]]],"^11","^3;","^8","taoensso/sente.cljc","^<",20,"^;0",["^ ","^:<",false,"^;1",4,"^:@",4,"^:9",[["^;7","^;8"],["^;7","^;8","^:C","^:D"],["^;7","^;8","^;9"]],"^:5",["^1O",[["^;7","^;8"],["^;7","^;8","^:C","^:D"],["^;7","^;8","^;9"]]],"^:;",["^1O",[null,null,null]]],"^:9",[["^;7","^;8"],["^;7","^;8","^:C","^:D"],["^;7","^;8","^;9"]],"^::",null,"^;1",4,"^:;",["^1O",[null,null,null]],"^:",4,"^:<",false,"^;4",[["^ ","^;1",2,"^:<",false,"^:L","^:?"],["^ ","^;1",4,"^:<",false,"^:L","^:?"],["^ ","^;1",3,"^:<",false,"^:L","^:?"]],"^9",871,"^;",871,"^:@",4,"^:A",true,"^:5",["^1O",[["^;7","^;8"],["^;7","^;8","^:C","^:D"],["^;7","^;8","^;9"]]],"^7","Sends `[ev-id ev-?data :as event]`, returns true on apparent success."],"~$validate-event",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",127,"^:",7,"^;",127,"^<",21,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]],"^7","Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`."],"^11","^3@","^8","taoensso/sente.cljc","^<",21,"^:9",["^1O",[["~$x"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",127,"^:=",["^[",["~$cljs.core/IMap","^:E"]],"^;",127,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]],"^7","Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`."],"~$event?",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",148,"^:",7,"^;",148,"^<",13,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]],"^7","Valid [ev-id ?ev-data] form?"],"^11","^34","^8","taoensso/sente.cljc","^<",13,"^:9",["^1O",[["~$x"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",148,"^:=","^:U","^;",148,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]],"^7","Valid [ev-id ?ev-data] form?"],"~$event-msg?",["^ ","^11","^56","^8","taoensso/sente.cljc","^9",1776,"^:",1,"^;",1776,"^<",16,"^5",["^ ","^8","taoensso/sente.cljc","^9",1776,"^:",6,"^;",1776,"^<",16]],"~$make-channel-socket!",["^ ","^11","^2T","^8","taoensso/sente.cljc","^9",1778,"^:",1,"^;",1778,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1778,"^:",6,"^;",1778,"^<",26],"^7","Platform-specific alias for `make-channel-socket-server!` or\n  `make-channel-socket-client!`. Please see the appropriate aliased fn\n   docstring for details."],"~$create-websocket!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1074,"^:",8,"^;",1074,"^<",25,"^:4",true,"^:5",["^1O",["^:6",["^1O",[[["^ ","^1Q","^;9","~:keys",["~$onerror-fn","~$onmessage-fn","~$onclose-fn","~$uri-str","~$headers"]]]]]]]],"^:4",true,"^11","^35","^8","taoensso/sente.cljc","^<",25,"^:9",["^1O",[["~$p__75716"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",1074,"^:=",["^[",["~$WebSocket","^:E"]],"^;",1074,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[[["^ ","^1Q","^;9","^;@",["^;A","^;B","^;C","^;D","^;E"]]]]]]]],"~$make-channel-socket-server!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",297,"^:",7,"^;",297,"^<",34,"^:5",["^1O",["^:6",["^1O",[["~$web-server-ch-adapter","~$&",[["^ ","^;@",["~$recv-buf-or-n","~$ws-kalive-ms","~$lp-timeout-ms","~$send-buf-ms-ajax","~$send-buf-ms-ws","~$user-id-fn","~$bad-csrf-fn","~$bad-origin-fn","~$csrf-token-fn","~$handshake-data-fn","^;2","~$allowed-origins","~$authorized?-fn","~$unauthorized-fn"],"~:or",["^ ","^;K",["^1O",["~$enc/ms","~:secs",25]],"^;N",30,"^;T","~:all","^;L",["^1O",["^;X","^;Y",20]],"^;R",["^1O",["~$fn",["~$ring-req"],["^1O",["~$or",["^1O",["~:anti-forgery-token","^<0"]],["^1O",["~$get-in","^<0",["~:session","~:csrf-token"]]],["^1O",["^<3","^<0",["^<4","~:ring.middleware.anti-forgery/anti-forgery-token"]]],["^1O",["^<3","^<0",["^<4","__anti-forgery-token"]]]]]]],"^;2","~:edn","^;V",["^1O",["^;[",["~$_ring-req"],["^ ","~:status",401,"~:body","Unauthorized request"]]],"^;M",100,"^;Q",["^1O",["^;[",["^<8"],["^ ","^<9",403,"^<:","Unauthorized origin"]]],"^;S",["^1O",["^;[",["^<0"],null]],"^;O",["^1O",["^;[",["^<0"],["^1O",["^<3","^<0",["^<4","~:uid"]]]]],"^;J",["^1O",["~$async/sliding-buffer",1000]],"^;P",["^1O",["^;[",["^<8"],["^ ","^<9",403,"^<:","Bad CSRF token"]]]]]]]]]]],"^7","Takes a web server adapter[1] and returns a map with keys:\n\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn                     ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req])  for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req])  for Ring GET + chsk URL.\n\n    :connected-uids ;             Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n    :send-buffers   ; Implementation detail, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Security options:\n\n    :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\n\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ; CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n\n    :authorized?-fn    ; ?(fn [ring-req]) -> When non-nil, (authorized?-fn <ring-req>)\n                       ; must return truthy, otherwise connection requests will be\n                       ; rejected with (unauthorized-fn <ring-req>) response.\n                       ;\n                       ; May check Authroization HTTP header, etc.\n\n  Other common options:\n\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).","^;0",["^ ","^:<",true,"^;1",1,"^:@",1,"^:9",[["^1O",["^;I",[["^ ","^;@",["^;J","^;K","^;L","^;M","^;N","^;O","^;P","^;Q","^;R","^;S","^;2","^;T","^;U","^;V"],"^;W",["^ ","^;K",["^1O",["^;X","^;Y",25]],"^;N",30,"^;T","^;Z","^;L",["^1O",["^;X","^;Y",20]],"^;R",["^1O",["^;[",["^<0"],["^1O",["^<1",["^1O",["^<2","^<0"]],["^1O",["^<3","^<0",["^<4","^<5"]]],["^1O",["^<3","^<0",["^<4","^<6"]]],["^1O",["^<3","^<0",["^<4","__anti-forgery-token"]]]]]]],"^;2","^<7","^;V",["^1O",["^;[",["^<8"],["^ ","^<9",401,"^<:","Unauthorized request"]]],"^;M",100,"^;Q",["^1O",["^;[",["^<8"],["^ ","^<9",403,"^<:","Unauthorized origin"]]],"^;S",["^1O",["^;[",["^<0"],null]],"^;O",["^1O",["^;[",["^<0"],["^1O",["^<3","^<0",["^<4","^<;"]]]]],"^;J",["^1O",["^<<",1000]],"^;P",["^1O",["^;[",["^<8"],["^ ","^<9",403,"^<:","Bad CSRF token"]]]]]]]]],"^:5",["^1O",[["^;I","~$&",[["^ ","^;@",["^;J","^;K","^;L","^;M","^;N","^;O","^;P","^;Q","^;R","^;S","^;2","^;T","^;U","^;V"],"^;W",["^ ","^;K",["^1O",["^;X","^;Y",25]],"^;N",30,"^;T","^;Z","^;L",["^1O",["^;X","^;Y",20]],"^;R",["^1O",["^;[",["^<0"],["^1O",["^<1",["^1O",["^<2","^<0"]],["^1O",["^<3","^<0",["^<4","^<5"]]],["^1O",["^<3","^<0",["^<4","^<6"]]],["^1O",["^<3","^<0",["^<4","__anti-forgery-token"]]]]]]],"^;2","^<7","^;V",["^1O",["^;[",["^<8"],["^ ","^<9",401,"^<:","Unauthorized request"]]],"^;M",100,"^;Q",["^1O",["^;[",["^<8"],["^ ","^<9",403,"^<:","Unauthorized origin"]]],"^;S",["^1O",["^;[",["^<0"],null]],"^;O",["^1O",["^;[",["^<0"],["^1O",["^<3","^<0",["^<4","^<;"]]]]],"^;J",["^1O",["^<<",1000]],"^;P",["^1O",["^;[",["^<8"],["^ ","^<9",403,"^<:","Bad CSRF token"]]]]]]]]],"^:;",["^1O",[null]]]],"^11","^3J","^8","taoensso/sente.cljc","^<",34,"^;0",["^ ","^:<",true,"^;1",1,"^:@",1,"^:9",[["^1O",["^;I",[["^ ","^;@",["^;J","^;K","^;L","^;M","^;N","^;O","^;P","^;Q","^;R","^;S","^;2","^;T","^;U","^;V"],"^;W",["^ ","^;K",["^1O",["^;X","^;Y",25]],"^;N",30,"^;T","^;Z","^;L",["^1O",["^;X","^;Y",20]],"^;R",["^1O",["^;[",["^<0"],["^1O",["^<1",["^1O",["^<2","^<0"]],["^1O",["^<3","^<0",["^<4","^<5"]]],["^1O",["^<3","^<0",["^<4","^<6"]]],["^1O",["^<3","^<0",["^<4","__anti-forgery-token"]]]]]]],"^;2","^<7","^;V",["^1O",["^;[",["^<8"],["^ ","^<9",401,"^<:","Unauthorized request"]]],"^;M",100,"^;Q",["^1O",["^;[",["^<8"],["^ ","^<9",403,"^<:","Unauthorized origin"]]],"^;S",["^1O",["^;[",["^<0"],null]],"^;O",["^1O",["^;[",["^<0"],["^1O",["^<3","^<0",["^<4","^<;"]]]]],"^;J",["^1O",["^<<",1000]],"^;P",["^1O",["^;[",["^<8"],["^ ","^<9",403,"^<:","Bad CSRF token"]]]]]]]]],"^:5",["^1O",[["^;I","~$&",[["^ ","^;@",["^;J","^;K","^;L","^;M","^;N","^;O","^;P","^;Q","^;R","^;S","^;2","^;T","^;U","^;V"],"^;W",["^ ","^;K",["^1O",["^;X","^;Y",25]],"^;N",30,"^;T","^;Z","^;L",["^1O",["^;X","^;Y",20]],"^;R",["^1O",["^;[",["^<0"],["^1O",["^<1",["^1O",["^<2","^<0"]],["^1O",["^<3","^<0",["^<4","^<5"]]],["^1O",["^<3","^<0",["^<4","^<6"]]],["^1O",["^<3","^<0",["^<4","__anti-forgery-token"]]]]]]],"^;2","^<7","^;V",["^1O",["^;[",["^<8"],["^ ","^<9",401,"^<:","Unauthorized request"]]],"^;M",100,"^;Q",["^1O",["^;[",["^<8"],["^ ","^<9",403,"^<:","Unauthorized origin"]]],"^;S",["^1O",["^;[",["^<0"],null]],"^;O",["^1O",["^;[",["^<0"],["^1O",["^<3","^<0",["^<4","^<;"]]]]],"^;J",["^1O",["^<<",1000]],"^;P",["^1O",["^;[",["^<8"],["^ ","^<9",403,"^<:","Bad CSRF token"]]]]]]]]],"^:;",["^1O",[null]]],"^:9",[["^1O",["^;I",[["^ ","^;@",["^;J","^;K","^;L","^;M","^;N","^;O","^;P","^;Q","^;R","^;S","^;2","^;T","^;U","^;V"],"^;W",["^ ","^;K",["^1O",["^;X","^;Y",25]],"^;N",30,"^;T","^;Z","^;L",["^1O",["^;X","^;Y",20]],"^;R",["^1O",["^;[",["^<0"],["^1O",["^<1",["^1O",["^<2","^<0"]],["^1O",["^<3","^<0",["^<4","^<5"]]],["^1O",["^<3","^<0",["^<4","^<6"]]],["^1O",["^<3","^<0",["^<4","__anti-forgery-token"]]]]]]],"^;2","^<7","^;V",["^1O",["^;[",["^<8"],["^ ","^<9",401,"^<:","Unauthorized request"]]],"^;M",100,"^;Q",["^1O",["^;[",["^<8"],["^ ","^<9",403,"^<:","Unauthorized origin"]]],"^;S",["^1O",["^;[",["^<0"],null]],"^;O",["^1O",["^;[",["^<0"],["^1O",["^<3","^<0",["^<4","^<;"]]]]],"^;J",["^1O",["^<<",1000]],"^;P",["^1O",["^;[",["^<8"],["^ ","^<9",403,"^<:","Bad CSRF token"]]]]]]]]],"^::",null,"^;1",1,"^:;",["^1O",[null]],"^:",1,"^:<",true,"^;4",[["^ ","^;1",1,"^:<",true,"^:L","^;;"]],"^9",297,"^:=","^:?","^;",297,"^:@",1,"^:A",true,"^:5",["^1O",[["^;I","~$&",[["^ ","^;@",["^;J","^;K","^;L","^;M","^;N","^;O","^;P","^;Q","^;R","^;S","^;2","^;T","^;U","^;V"],"^;W",["^ ","^;K",["^1O",["^;X","^;Y",25]],"^;N",30,"^;T","^;Z","^;L",["^1O",["^;X","^;Y",20]],"^;R",["^1O",["^;[",["^<0"],["^1O",["^<1",["^1O",["^<2","^<0"]],["^1O",["^<3","^<0",["^<4","^<5"]]],["^1O",["^<3","^<0",["^<4","^<6"]]],["^1O",["^<3","^<0",["^<4","__anti-forgery-token"]]]]]]],"^;2","^<7","^;V",["^1O",["^;[",["^<8"],["^ ","^<9",401,"^<:","Unauthorized request"]]],"^;M",100,"^;Q",["^1O",["^;[",["^<8"],["^ ","^<9",403,"^<:","Unauthorized origin"]]],"^;S",["^1O",["^;[",["^<0"],null]],"^;O",["^1O",["^;[",["^<0"],["^1O",["^<3","^<0",["^<4","^<;"]]]]],"^;J",["^1O",["^<<",1000]],"^;P",["^1O",["^;[",["^<8"],["^ ","^<9",403,"^<:","Bad CSRF token"]]]]]]]]],"^7","Takes a web server adapter[1] and returns a map with keys:\n\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn                     ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req])  for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req])  for Ring GET + chsk URL.\n\n    :connected-uids ;             Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n    :send-buffers   ; Implementation detail, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Security options:\n\n    :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\n\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ; CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n\n    :authorized?-fn    ; ?(fn [ring-req]) -> When non-nil, (authorized?-fn <ring-req>)\n                       ; must return truthy, otherwise connection requests will be\n                       ; rejected with (unauthorized-fn <ring-req>) response.\n                       ;\n                       ; May check Authroization HTTP header, etc.\n\n  Other common options:\n\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows)."],"~$node-target?",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",116,"^:",25,"^;",116,"^<",37,"^:4",true],"^:4",true,"^11","^2P","^8","taoensso/sente.cljc","^<",37,"^:",10,"^9",116,"^;",116,"^:L","^:U"],"~$ajax-lite",["^ ","^11","^2R","^8","taoensso/sente.cljc","^9",857,"^:",10,"^;",857,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",857,"^:",15,"^;",857,"^<",24],"^7","Alias of `taoensso.encore/ajax-lite`"],"~$get-chsk-url",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1545,"^:",11,"^;",1545,"^<",23,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["~$protocol","~$host","~$path","~$type"]]]]]],"^:4",true,"^11","^2:","^8","taoensso/sente.cljc","^<",23,"^:9",["^1O",[["^<@","^<A","^<B","^<C"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",1545,"^:=","^;5","^;",1545,"^:@",4,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^<@","^<A","^<B","^<C"]]]]]],"~$-chsk-send!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",863,"^:",7,"^;",863,"^<",18,"~:protocol","^5E","^7",null,"^:5",["^1O",["^:6",["^1O",[["^;7","^;8","^;9"]]]]]],"^<E","^5E","^11","^28","^8","taoensso/sente.cljc","^<",18,"^:9",["^1O",[["^;7","^;8","^;9"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",859,"^:=","^:?","^;",863,"^:@",3,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^;7","^;8","^;9"]]]]],"^7",null],"~$-chsk-reconnect!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",862,"^:",7,"^;",862,"^<",23,"^<E","^5E","^7",null,"^:5",["^1O",["^:6",["^1O",[["^;7"]]]]]],"^<E","^5E","^11","^3D","^8","taoensso/sente.cljc","^<",23,"^:9",["^1O",[["^;7"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",859,"^:=","^:?","^;",862,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^;7"]]]]],"^7",null],"~$receive-handshake!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",967,"^:",11,"^;",967,"^<",29,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["~$chsk-type","^;7","^:>"]]]]]],"^:4",true,"^11","^2E","^8","taoensso/sente.cljc","^<",29,"^:9",["^1O",[["^<H","^;7","^:>"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",967,"^:=","^32","^;",967,"^:@",3,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^<H","^;7","^:>"]]]]]],"~$start-client-chsk-router!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1760,"^:",7,"^;",1760,"^<",32,"^:5",["^1O",["^:6",["^1O",[["~$ch-recv","~$event-msg-handler","~$&",[["^ ","^1Q","^;9","^;@",["~$trace-evs?","~$error-handler"]]]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.","^;0",["^ ","^:<",true,"^;1",2,"^:@",2,"^:9",[["^1O",["^<J","^<K",[["^ ","^1Q","^;9","^;@",["^<L","^<M"]]]]]],"^:5",["^1O",[["^<J","^<K","~$&",[["^ ","^1Q","^;9","^;@",["^<L","^<M"]]]]]],"^:;",["^1O",[null]]]],"^11","^5>","^8","taoensso/sente.cljc","^<",32,"^;0",["^ ","^:<",true,"^;1",2,"^:@",2,"^:9",[["^1O",["^<J","^<K",[["^ ","^1Q","^;9","^;@",["^<L","^<M"]]]]]],"^:5",["^1O",[["^<J","^<K","~$&",[["^ ","^1Q","^;9","^;@",["^<L","^<M"]]]]]],"^:;",["^1O",[null]]],"^:9",[["^1O",["^<J","^<K",[["^ ","^1Q","^;9","^;@",["^<L","^<M"]]]]]],"^::",null,"^;1",2,"^:;",["^1O",[null]],"^:",1,"^:<",true,"^;4",[["^ ","^;1",2,"^:<",true,"^:L","~$function"]],"^9",1760,"^:=","^:?","^;",1760,"^:@",2,"^:A",true,"^:5",["^1O",[["^<J","^<K","~$&",[["^ ","^1Q","^;9","^;@",["^<L","^<M"]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate."],"~$chsk-destroy!",["^ ","^11","^2K","^8","taoensso/sente.cljc","^9",869,"^:",6,"^;",869,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",869,"^:",11,"^;",869,"^<",24],"^7","Deprecated"],"~$->ChAjaxSocket",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^:G",true,"^:H","^:Q","^9",1307,"^;",1307,"^:5",["^1O",["^:6",["^1O",[["~$client-id","~$chs","~$params","^;2","~$url","~$state_","~$instance-handle_","~$ever-opened?_","~$backoff-ms-fn","~$ajax-opts","~$curr-xhr_"]]]]],"^7","Positional factory function for taoensso.sente/ChAjaxSocket."],"^11","^53","^8","taoensso/sente.cljc","^<",27,"^:9",["^1O",[["^<Q","^<R","^<S","^;2","^<T","^<U","^<V","^<W","^<X","^<Y","^<Z"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:G",true,"^:<",false,"^:H","^:Q","^9",1307,"^:=","^3E","^;",1307,"^:@",11,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^<Q","^<R","^<S","^;2","^<T","^<U","^<V","^<W","^<X","^<Y","^<Z"]]]]],"^7","Positional factory function for taoensso.sente/ChAjaxSocket."],"~$send-buffered-server-evs>ajax-clients!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",799,"^:",8,"^;",799,"^<",46,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["^:W","^:X","^:Y"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"^:4",true,"^11","^4W","^8","taoensso/sente.cljc","^<",46,"^:9",["^1O",[["^:W","^:X","^:Y"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",799,"^:=",["^[",["^:?","^:E"]],"^;",799,"^:@",3,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^:W","^:X","^:Y"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"~$default-client-side-ajax-timeout-ms",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",1300,"^:",16,"^;",1300,"^<",51,"^:4",true],"^:4",true,"^11","^4X","^8","taoensso/sente.cljc","^<",51,"^:",1,"^9",1300,"^;",1300,"^:L","^:?","^7","We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms."],"~$ChAjaxSocket",["^ ","~:num-fields",11,"^:O",["^[",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","^5E","^;;","~$cljs.core/ILookup"]],"^11","^3E","^8","taoensso/sente.cljc","^<",27,"~:type",true,"^:",15,"^:G",true,"^9",1307,"~:record",true,"^;",1307,"^:L","^<N","^:R",["^[",["^=3","^=4","^=5","^=6","^=7","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^;;","^=@"]]],"~$set-logging-level!",["^ ","^11","^4Y","^8","taoensso/sente.cljc","^9",1811,"^:",3,"^;",1811,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1811,"^:",8,"^;",1811,"^<",26],"^7","DEPRECATED. Please use `timbre/set-level!` instead"],"~$->ChAutoSocket",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^:G",true,"^:H","^:Q","^9",1479,"^;",1479,"^:5",["^1O",["^:6",["^1O",[["~$ws-chsk-opts","~$ajax-chsk-opts","^<U","~$impl_"]]]]],"^7","Positional factory function for taoensso.sente/ChAutoSocket."],"^11","^4Q","^8","taoensso/sente.cljc","^<",27,"^:9",["^1O",[["^=E","^=F","^<U","^=G"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:G",true,"^:<",false,"^:H","^:Q","^9",1479,"^:=","^4P","^;",1479,"^:@",4,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^=E","^=F","^<U","^=G"]]]]],"^7","Positional factory function for taoensso.sente/ChAutoSocket."],"~$create-js-client-websocket!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1058,"^:",11,"^;",1058,"^<",38,"^:4",true,"^:5",["^1O",["^:6",["^1O",[[["^ ","^1Q","^;9","^;@",["^;A","^;B","^;C","^;D","^;E"]]]]]]]],"^:4",true,"^11","^42","^8","taoensso/sente.cljc","^<",38,"^:9",["^1O",[["~$p__75710"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",1058,"^:=",["^[",["^;G","^:E"]],"^;",1058,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[[["^ ","^1Q","^;9","^;@",["^;A","^;B","^;C","^;D","^;E"]]]]]]]],"~$-chsk-disconnect!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",861,"^:",7,"^;",861,"^<",24,"^<E","^5E","^7",null,"^:5",["^1O",["^:6",["^1O",[["^;7","^:8"]]]]]],"^<E","^5E","^11","^33","^8","taoensso/sente.cljc","^<",24,"^:9",["^1O",[["^;7","^:8"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",859,"^:=","^:?","^;",861,"^:@",2,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^;7","^:8"]]]]],"^7",null],"~$start-chsk-router!",["^ ","^11","^3Z","^8","taoensso/sente.cljc","^9",1785,"^:",1,"^;",1785,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",1785,"^:",6,"^;",1785,"^<",24],"^7","Platform-specific alias for `start-server-chsk-router!` or\n  `start-client-chsk-router!`. Please see the appropriate aliased fn\n  docstring for details."],"~$put-server-event-msg>ch-recv!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",185,"^:",8,"^;",185,"^<",37,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["^<J",["^ ","^1Q","~$ev-msg","^;@",["~$event","~$?reply-fn"]]]]]]],"^7","All server `event-msg`s go through this"],"^:4",true,"^11","^3I","^8","taoensso/sente.cljc","^<",37,"^:9",["^1O",[["^<J","~$p__74974"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",185,"^:=",["^[",["^:U","^:?","^:E"]],"^;",185,"^:@",2,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^<J",["^ ","^1Q","^=M","^;@",["^=N","^=O"]]]]]]],"^7","All server `event-msg`s go through this"],"~$coerce-packer",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",247,"^:",8,"^;",247,"^<",21,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]]],"^:4",true,"^11","^49","^8","taoensso/sente.cljc","^<",21,"^:9",["^1O",[["~$x"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",247,"^:=",["^[",[null,"^:?","^4O","^:E"]],"^;",247,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]]],"~$-chsk-connect!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",860,"^:",7,"^;",860,"^<",21,"^<E","^5E","^7",null,"^:5",["^1O",["^:6",["^1O",[["^;7"]]]]]],"^<E","^5E","^11","^3F","^8","taoensso/sente.cljc","^<",21,"^:9",["^1O",[["^;7"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",859,"^:=","^:?","^;",860,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^;7"]]]]],"^7",null],"~$default-edn-packer",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",245,"^:",16,"^;",245,"^<",34,"^:4",true],"^:4",true,"^11","^3[","^8","taoensso/sente.cljc","^<",34,"^:",1,"^9",245,"^;",245,"^:L","^4O"],"~$new-ChAjaxSocket",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1469,"^:",11,"^;",1469,"^<",27,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["^;9","~$csrf-token"]]]]]],"^:4",true,"^11","^4H","^8","taoensso/sente.cljc","^<",27,"^:9",["^1O",[["^;9","^=U"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",1469,"^:=","^3E","^;",1469,"^:@",2,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^;9","^=U"]]]]]],"~$receive-buffered-evs!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",954,"^:",11,"^;",954,"^<",32,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["^<R","^:>"]]]]]],"^:4",true,"^11","^4@","^8","taoensso/sente.cljc","^<",32,"^:9",["^1O",[["^<R","^:>"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",954,"^:=","^:E","^;",954,"^:@",2,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^<R","^:>"]]]]]],"~$chsk-connect!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",865,"^:",12,"^;",865,"^<",25,"^:5",["^1O",["^:6",["^1O",[["^;7"]]]]]],"^11","^3N","^8","taoensso/sente.cljc","^<",25,"^:9",["^1O",[["^;7"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",6,"^:<",false,"^9",865,"^:=","^:?","^;",865,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^;7"]]]]]],"~$-start-chsk-router!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1704,"^:",8,"^;",1704,"^<",27,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["~$server?","^<J","^<K","^;9"]]]]]],"^:4",true,"^11","^4F","^8","taoensso/sente.cljc","^<",27,"^:9",["^1O",[["^=Y","^<J","^<K","^;9"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",1704,"^:=","^<N","^;",1704,"^:@",4,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^=Y","^<J","^<K","^;9"]]]]]],"~$EdnPacker",["^ ","^=2",0,"^:O",["^[",["^:P"]],"^11","^4O","^8","taoensso/sente.cljc","^<",19,"^=A",true,"^:",10,"^9",240,"^=B",false,"^;",240,"^:L","^<N","^:R",null],"~$ChAutoSocket",["^ ","^=2",4,"^:O",["^[",["^=3","^=4","^=5","^=6","^=7","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^5E","^;;","^=@"]],"^11","^4P","^8","taoensso/sente.cljc","^<",27,"^=A",true,"^:",15,"^:G",true,"^9",1479,"^=B",true,"^;",1479,"^:L","^<N","^:R",["^[",["^=3","^=4","^=5","^=6","^=7","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^;;","^=@"]]],"~$cb-error?",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",198,"^:",16,"^;",198,"^<",25,"^:5",["^1O",["^:6",["^1O",[["~$cb-reply-clj"]]]]]],"^11","^4K","^8","taoensso/sente.cljc","^<",25,"^:9",["^1O",[["^>1"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",10,"^:<",false,"^9",198,"^:=","^:?","^;",198,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^>1"]]]]]],"~$unpack",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",206,"^:",8,"^;",206,"^<",14,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["^;2","~$prefixed-pstr"]]]]],"^7","prefixed-pstr->[clj ?cb-uuid]"],"^:4",true,"^11","^4A","^8","taoensso/sente.cljc","^<",14,"^:9",["^1O",[["^;2","^>3"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",206,"^:=","^:M","^;",206,"^:@",2,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^;2","^>3"]]]]],"^7","prefixed-pstr->[clj ?cb-uuid]"],"~$chsk-disconnect!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",866,"^:",12,"^;",866,"^<",28,"^:5",["^1O",["^:6",["^1O",[["^;7"]]]]]],"^11","^5G","^8","taoensso/sente.cljc","^<",28,"^:9",["^1O",[["^;7"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",6,"^:<",false,"^9",866,"^:=","^:?","^;",866,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^;7"]]]]]],"~$default-chsk-url-fn",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1815,"^:",11,"^;",1815,"^<",30],"^11","^4J","^8","taoensso/sente.cljc","^<",30,"^:9",["^1O",[["^<B","~$p__76147","~$websocket?"]]],"^::",null,"^:;",["^1O",[]],"^:",6,"^:<",false,"^9",1815,"^:=","^;5","^;",1815,"^:@",3,"^:A",true,"^:5",null,"^7","DEPRECATED"],"~$start-chsk-router-loop!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1804,"^:",12,"^;",1804,"^<",35,"^:5",["^1O",["^:6",["^1O",[["~$event-handler","^<J"]]]]],"^7","DEPRECATED: Please use `start-chsk-router!` instead"],"^11","^4L","^8","taoensso/sente.cljc","^<",35,"^:9",["^1O",[["^>9","^<J"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",6,"^:<",false,"^9",1804,"^:=","^<N","^;",1804,"^:@",2,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^>9","^<J"]]]]],"^7","DEPRECATED: Please use `start-chsk-router!` instead"],"~$chsk-send->closed!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",880,"^:",11,"^;",880,"^<",29,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["~$?cb-fn"]]]]]],"^:4",true,"^11","^4N","^8","taoensso/sente.cljc","^<",29,"^:9",["^1O",[["^>;"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",880,"^:=","^:U","^;",880,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^>;"]]]]]],"~$new-ChAutoSocket",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1538,"^:",11,"^;",1538,"^<",27,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["^;9","^=U"]]]]]],"^:4",true,"^11","^5@","^8","taoensso/sente.cljc","^<",27,"^:9",["^1O",[["^;9","^=U"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",1538,"^:=","^4P","^;",1538,"^:@",2,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^;9","^=U"]]]]]],"~$bad-origin?",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",274,"^:",8,"^;",274,"^<",19,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["^;T",["^ ","^1Q","^<0","^;@",["^;E"]]]]]]]],"^:4",true,"^11","^4<","^8","taoensso/sente.cljc","^<",19,"^:9",["^1O",[["^;T","~$p__75015"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",274,"^:=","^:U","^;",274,"^:@",2,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^;T",["^ ","^1Q","^<0","^;@",["^;E"]]]]]]]],"~$swap-chsk-state!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",898,"^:",11,"^;",898,"^<",27,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["^;7","~$f"]]]]],"^7","Atomically swaps the value of chk's :state_ atom."],"^:4",true,"^11","^52","^8","taoensso/sente.cljc","^<",27,"^:9",["^1O",[["^;7","~$f"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",898,"^:=",["^[",["^:M","^:E"]],"^;",898,"^:@",2,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^;7","~$f"]]]]],"^7","Atomically swaps the value of chk's :state_ atom."],"~$handshake?",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",963,"^:",11,"^;",963,"^<",21,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]]],"^:4",true,"^11","^4>","^8","taoensso/sente.cljc","^<",21,"^:9",["^1O",[["~$x"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",963,"^:=","^:U","^;",963,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]]],"~$ajax-call",["^ ","^11","^45","^8","taoensso/sente.cljc","^9",1813,"^:",12,"^;",1813,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1813,"^:",17,"^;",1813,"^<",26],"^7","DEPRECATED: Please use `ajax-lite` instead"],"~$new-ChWebSocket",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1288,"^:",8,"^;",1288,"^<",23,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["^;9","^=U"]]]]]],"^:4",true,"^11","^59","^8","taoensso/sente.cljc","^<",23,"^:9",["^1O",[["^;9","^=U"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",1288,"^:=","^36","^;",1288,"^:@",2,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^;9","^=U"]]]]]],"~$ChWebSocket",["^ ","^=2",15,"^:O",["^[",["^=3","^=4","^=5","^=6","^=7","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^5E","^;;","^=@"]],"^11","^36","^8","taoensso/sente.cljc","^<",23,"^=A",true,"^:",12,"^:G",true,"^9",1078,"^=B",true,"^;",1078,"^:L","^<N","^:R",["^[",["^=3","^=4","^=5","^=6","^=7","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^;;","^=@"]]],"~$pull-unused-cb-fn!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",893,"^:",11,"^;",893,"^<",29,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["~$cbs-waiting_","^;3"]]]]]],"^:4",true,"^11","^3G","^8","taoensso/sente.cljc","^<",29,"^:9",["^1O",[["^>E","^;3"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",893,"^:=",["^[",["^:?","^:E"]],"^;",893,"^:@",2,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^>E","^;3"]]]]]],"~$assert-event",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",141,"^:",7,"^;",141,"^<",19,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]],"^7","Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception."],"^11","^3K","^8","taoensso/sente.cljc","^<",19,"^:9",["^1O",[["~$x"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",141,"^:=","^:E","^;",141,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]],"^7","Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception."],"~$chsk-reconnect!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",867,"^:",12,"^;",867,"^<",27,"^:5",["^1O",["^:6",["^1O",[["^;7"]]]]],"^7","Useful for reauthenticating after login/logout, etc."],"^11","^5;","^8","taoensso/sente.cljc","^<",27,"^:9",["^1O",[["^;7"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",6,"^:<",false,"^9",867,"^:=","^:?","^;",867,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^;7"]]]]],"^7","Useful for reauthenticating after login/logout, etc."],"~$make-channel-socket-client!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1553,"^:",10,"^;",1553,"^<",37,"^:5",["^1O",["^:6",["^1O",[["^<B","~$?csrf-token","~$&",[["^ ","^;@",["^<C","^<@","^<A","~$port","^<S","^;E","^;J","^;2","^;K","^<Q","^<Y","~$wrap-recv-evs?","^<X"],"^1Q","^;9","^;W",["^ ","^<C","~:auto","^;J",["^1O",["^<<",2048]],"^;2","^<7","^<Q",["^1O",["^<1",["^1O",["~:client-uuid","^;9"]],["^1O",["~$enc/uuid-str"]]]],"^>K",true,"^<X","~$enc/exp-backoff","^;K",["^1O",["^;X","^;Y",20]]]],"~$_deprecated-more-opts"]]]]]],"^7","Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :headers        ; Map of additional headers to include in the initiating request\n                       ; (currently only for Java clients).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms.","^;0",["^ ","^:<",true,"^;1",2,"^:@",2,"^:9",[["^1O",["^<B","^>I",[["^ ","^;@",["^<C","^<@","^<A","^>J","^<S","^;E","^;J","^;2","^;K","^<Q","^<Y","^>K","^<X"],"^1Q","^;9","^;W",["^ ","^<C","^>L","^;J",["^1O",["^<<",2048]],"^;2","^<7","^<Q",["^1O",["^<1",["^1O",["^>M","^;9"]],["^1O",["^>N"]]]],"^>K",true,"^<X","^>O","^;K",["^1O",["^;X","^;Y",20]]]],"^>P"]]]],"^:5",["^1O",[["^<B","^>I","~$&",[["^ ","^;@",["^<C","^<@","^<A","^>J","^<S","^;E","^;J","^;2","^;K","^<Q","^<Y","^>K","^<X"],"^1Q","^;9","^;W",["^ ","^<C","^>L","^;J",["^1O",["^<<",2048]],"^;2","^<7","^<Q",["^1O",["^<1",["^1O",["^>M","^;9"]],["^1O",["^>N"]]]],"^>K",true,"^<X","^>O","^;K",["^1O",["^;X","^;Y",20]]]],"^>P"]]]],"^:;",["^1O",[null]]]],"^11","^5A","^8","taoensso/sente.cljc","^<",37,"^;0",["^ ","^:<",true,"^;1",2,"^:@",2,"^:9",[["^1O",["^<B","^>I",[["^ ","^;@",["^<C","^<@","^<A","^>J","^<S","^;E","^;J","^;2","^;K","^<Q","^<Y","^>K","^<X"],"^1Q","^;9","^;W",["^ ","^<C","^>L","^;J",["^1O",["^<<",2048]],"^;2","^<7","^<Q",["^1O",["^<1",["^1O",["^>M","^;9"]],["^1O",["^>N"]]]],"^>K",true,"^<X","^>O","^;K",["^1O",["^;X","^;Y",20]]]],"^>P"]]]],"^:5",["^1O",[["^<B","^>I","~$&",[["^ ","^;@",["^<C","^<@","^<A","^>J","^<S","^;E","^;J","^;2","^;K","^<Q","^<Y","^>K","^<X"],"^1Q","^;9","^;W",["^ ","^<C","^>L","^;J",["^1O",["^<<",2048]],"^;2","^<7","^<Q",["^1O",["^<1",["^1O",["^>M","^;9"]],["^1O",["^>N"]]]],"^>K",true,"^<X","^>O","^;K",["^1O",["^;X","^;Y",20]]]],"^>P"]]]],"^:;",["^1O",[null]]],"^:9",[["^1O",["^<B","^>I",[["^ ","^;@",["^<C","^<@","^<A","^>J","^<S","^;E","^;J","^;2","^;K","^<Q","^<Y","^>K","^<X"],"^1Q","^;9","^;W",["^ ","^<C","^>L","^;J",["^1O",["^<<",2048]],"^;2","^<7","^<Q",["^1O",["^<1",["^1O",["^>M","^;9"]],["^1O",["^>N"]]]],"^>K",true,"^<X","^>O","^;K",["^1O",["^;X","^;Y",20]]]],"^>P"]]]],"^::",null,"^;1",2,"^:;",["^1O",[null]],"^:",4,"^:<",true,"^;4",[["^ ","^;1",2,"^:<",true,"^:L",["^[",["^;;","^:E"]]]],"^9",1553,"^:=","^:?","^;",1553,"^:@",2,"^:A",true,"^:5",["^1O",[["^<B","^>I","~$&",[["^ ","^;@",["^<C","^<@","^<A","^>J","^<S","^;E","^;J","^;2","^;K","^<Q","^<Y","^>K","^<X"],"^1Q","^;9","^;W",["^ ","^<C","^>L","^;J",["^1O",["^<<",2048]],"^;2","^<7","^<Q",["^1O",["^<1",["^1O",["^>M","^;9"]],["^1O",["^>N"]]]],"^>K",true,"^<X","^>O","^;K",["^1O",["^;X","^;Y",20]]]],"^>P"]]]],"^7","Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :headers        ; Map of additional headers to include in the initiating request\n                       ; (currently only for Java clients).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms."],"~$cb-chan-as-fn",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",937,"^:",11,"^;",937,"^<",24,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["^:D","^;8"]]]]],"^7","Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>]."],"^:4",true,"^11","^5N","^8","taoensso/sente.cljc","^<",24,"^:9",["^1O",[["^:D","^;8"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:<",false,"^9",937,"^:=",["^[",[null,"^<N"]],"^;",937,"^:@",2,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^:D","^;8"]]]]],"^7","Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>]."],"~$map->ChAutoSocket",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^:G",true,"^:H","^:I","^9",1479,"^;",1479,"^:5",["^1O",["^:6",["^1O",[["~$G__76008"]]]]],"^7","Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values."],"^11","^5C","^8","taoensso/sente.cljc","^<",27,"^:9",["^1O",[["^>S"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",4,"^:G",true,"^:<",false,"^:H","^:I","^9",1479,"^:=","^4P","^;",1479,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^>S"]]]]],"^7","Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values."],"~$IChSocket",["^ ","^5",["^ ","~:protocol-symbol",true,"^8","taoensso/sente.cljc","^<",26,"^:",17,"^9",859,"~:protocol-info",["^ ","^;4",["^ ","^=R",[["^;7"]],"^=J",[["^;7","^:8"]],"^<F",[["^;7"]],"^<D",[["^;7","^;8","^;9"]]]],"^;",859,"~:sigs",["^ ","~:-chsk-connect!",["^ ","^11","^=R","^:5",["^1O",[["^;7"]]],"^7",null],"~:-chsk-disconnect!",["^ ","^11","^=J","^:5",["^1O",[["^;7","^:8"]]],"^7",null],"~:-chsk-reconnect!",["^ ","^11","^<F","^:5",["^1O",[["^;7"]]],"^7",null],"~:-chsk-send!",["^ ","^11","^<D","^:5",["^1O",[["^;7","^;8","^;9"]]],"^7",null]],"~:jsdoc",["^1O",["@interface"]]],"^>U",true,"^11","^5E","^8","taoensso/sente.cljc","^<",26,"^:",4,"^9",859,"^>V",["^ ","^;4",["^ ","^=R",[["^;7"]],"^=J",[["^;7","^:8"]],"^<F",[["^;7"]],"^<D",[["^;7","^;8","^;9"]]]],"~:info",null,"^;",859,"^:L","^:?","^>W",["^ ","^>X",["^ ","^11","^=R","^:5",["^1O",[["^;7"]]],"^7",null],"^>Y",["^ ","^11","^=J","^:5",["^1O",[["^;7","^:8"]]],"^7",null],"^>Z",["^ ","^11","^<F","^:5",["^1O",[["^;7"]]],"^7",null],"^>[",["^ ","^11","^<D","^:5",["^1O",[["^;7","^;8","^;9"]]],"^7",null]],"~:impls",["^[",["^36","^3E","^4P"]],"^?0",["^1O",["@interface"]]],"~$debug-mode?_",["^ ","^11","^5D","^8","taoensso/sente.cljc","^9",119,"^:",1,"^;",119,"^<",22,"^5",["^ ","^8","taoensso/sente.cljc","^9",119,"^:",10,"^;",119,"^<",22],"^:L","~$cljs.core/Atom"],"~$cb-success?",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",199,"^:",16,"^;",199,"^<",27,"^:5",["^1O",["^:6",["^1O",[["^>1"]]]]]],"^11","^5I","^8","taoensso/sente.cljc","^<",27,"^:9",["^1O",[["^>1"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",10,"^:<",false,"^9",199,"^:=","^:U","^;",199,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^>1"]]]]]],"~$->ChWebSocket",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",23,"^:",12,"^:G",true,"^:H","^:Q","^9",1078,"^;",1078,"^:5",["^1O",["^:6",["^1O",[["^<Q","^<R","^<S","^;E","^;2","^<T","^;K","^<U","^<V","~$retry-count_","^<W","^<X","^>E","~$socket_","~$udt-last-comms_"]]]]],"^7","Positional factory function for taoensso.sente/ChWebSocket."],"^11","^5J","^8","taoensso/sente.cljc","^<",23,"^:9",["^1O",[["^<Q","^<R","^<S","^;E","^;2","^<T","^;K","^<U","^<V","^?7","^<W","^<X","^>E","^?8","^?9"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:G",true,"^:<",false,"^:H","^:Q","^9",1078,"^:=","^36","^;",1078,"^:@",15,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^<Q","^<R","^<S","^;E","^;2","^<T","^;K","^<U","^<V","^?7","^<W","^<X","^>E","^?8","^?9"]]]]],"^7","Positional factory function for taoensso.sente/ChWebSocket."],"~$expected",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",126,"^:",8,"^;",126,"^<",16,"^:4",true,"^:5",["^1O",["^:6",["^1O",[["^?:","~$x"]]]]]],"^:4",true,"^11","^4;","^8","taoensso/sente.cljc","^<",16,"^:9",["^1O",[["^?:","~$x"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",126,"^:=","^;;","^;",126,"^:@",2,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^?:","~$x"]]]]]],"~$?node-npm-websocket_",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",1002,"^:",19,"^;",1002,"^<",39,"^:4",true],"^:4",true,"^11","^5O","^8","taoensso/sente.cljc","^<",39,"^:",4,"^9",1002,"^;",1002,"^:L","^3<","^7","nnil iff the websocket npm library[1] is available.\n     Easiest way to install:\n       1. Add the lein-npm[2] plugin to your `project.clj`,\n       2. Add: `:npm {:dependencies [[websocket \"1.0.23\"]]}`\n\n     [1] Ref. https://www.npmjs.com/package/websocket\n     [2] Ref. https://github.com/RyanMcG/lein-npm"],"~$start-server-chsk-router!",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1743,"^:",7,"^;",1743,"^<",32,"^:5",["^1O",["^:6",["^1O",[["^<J","^<K","~$&",[["^ ","^1Q","^;9","^;@",["^<L","^<M","~$simple-auto-threading?"]]]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default).","^;0",["^ ","^:<",true,"^;1",2,"^:@",2,"^:9",[["^1O",["^<J","^<K",[["^ ","^1Q","^;9","^;@",["^<L","^<M","^?="]]]]]],"^:5",["^1O",[["^<J","^<K","~$&",[["^ ","^1Q","^;9","^;@",["^<L","^<M","^?="]]]]]],"^:;",["^1O",[null]]]],"^11","^4?","^8","taoensso/sente.cljc","^<",32,"^;0",["^ ","^:<",true,"^;1",2,"^:@",2,"^:9",[["^1O",["^<J","^<K",[["^ ","^1Q","^;9","^;@",["^<L","^<M","^?="]]]]]],"^:5",["^1O",[["^<J","^<K","~$&",[["^ ","^1Q","^;9","^;@",["^<L","^<M","^?="]]]]]],"^:;",["^1O",[null]]],"^:9",[["^1O",["^<J","^<K",[["^ ","^1Q","^;9","^;@",["^<L","^<M","^?="]]]]]],"^::",null,"^;1",2,"^:;",["^1O",[null]],"^:",1,"^:<",true,"^;4",[["^ ","^;1",2,"^:<",true,"^:L","^<N"]],"^9",1743,"^:=","^:?","^;",1743,"^:@",2,"^:A",true,"^:5",["^1O",[["^<J","^<K","~$&",[["^ ","^1Q","^;9","^;@",["^<L","^<M","^?="]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default)."],"~$client-event-msg?",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",155,"^:",7,"^;",155,"^<",24,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]]],"^11","^5=","^8","taoensso/sente.cljc","^<",24,"^:9",["^1O",[["~$x"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:<",false,"^9",155,"^:=","^:U","^;",155,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["~$x"]]]]]],"~$map->ChWebSocket",["^ ","^:3",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",23,"^:",12,"^:G",true,"^:H","^:I","^9",1078,"^;",1078,"^:5",["^1O",["^:6",["^1O",[["~$G__75735"]]]]],"^7","Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values."],"^11","^5H","^8","taoensso/sente.cljc","^<",23,"^:9",["^1O",[["^?@"]]],"^::",null,"^:;",["^1O",[null,null]],"^:",1,"^:G",true,"^:<",false,"^:H","^:I","^9",1078,"^:=","^36","^;",1078,"^:@",1,"^:A",true,"^:5",["^1O",["^:6",["^1O",[["^?@"]]]]],"^7","Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values."],"~$next-idx!",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",267,"^:",16,"^;",267,"^<",25,"^:4",true],"^:4",true,"^11","^4E","^8","taoensso/sente.cljc","^<",25,"^:",1,"^9",267,"^;",267,"^:L","^:?"]],"^1B",["^ ","^P","^P","^16","^N","^19","^1:","^1;","^1;","^1:","^1:","^L","^L","^1=","^R","^N","^N","^1L","^P","^R","^R","^1M","^L"],"~:cljs.analyzer/constants",["^ ","^1@",["^[",["~:curr-xhr_","~:chsk/closed","~:?reply-fn","~:ws-kalive-ms","~:ajax-post-fn","~:ever-opened?_","~:requested-disconnect","~:on-msg","~:flush?","~:cb","~:errors","~:send-buf-ms-ws","~:first-open?","~:taoensso.sente/nil-uid","~:default-client-side-ajax-timeout-ms","~:given","^<Y","^>E","~:ws","~:impl_","~:get","~:lp-timeout-ms","~:websocket","~:chsk/recv","~:allowed-origins","~:uri-str","^>M","~:handshake","~:ch-recv","~:client-id","~:ev","^<U","~:X-CSRF-Token","^=F","~:csrf-token-fn","~:?content","~:noop","~:else","~:on-close","~:sente/all-users-without-uid","^<E","~:wrong-id-type","~:newly-connected","~:connected-uids","^;K","^<Z","~:method","~:simple-auto-threading?","~:pathname","~:ws-chsk-opts","^<W","^<;","~:trace-evs?","~:packer","~:chs","~:warn","~:server","~:chsk/ws-ping","~:trace","~:udt-last-comms_","~:value","~:last-ws-error","~:chsk/uidport-open","~:?sch","~:swap/dissoc","^=G","^<Q","^;Y","~:unauthorized-fn","~:handshake?","~:params","~:udt-next-reconnect","~:chsk/close","~:recur","^=A","~:chsk/state","~:unnamespaced-id","~:onmessage-fn","~:debug","~:debug/timeout","~:state","~:hostname","~:ajax","~:send-buf-ms-ajax","~:retry-count_","~:chsk/bad-event","~:port","~:vector","^;Z","^=E","~:udt","^;2","^<R","~:chsk/bad-package","~:no-op","~:ajax-get-or-ws-handshake-fn","~:bad-origin-fn","~:headers","~:internal","^?9","~:error-handler","~:downgrading-ws-to-ajax","~:handshake-data","~:chsk/auto-ajax-downgrade","~:chsk/error","~:handshake-data-fn","~:reason","~:host","^<S","~:event","~:authorized?-fn","~:backoff-ms-fn","~:wrong-type","~:user-id-fn","~:recv-buf-or-n","~:keyword","^<9","~:socket_","^?7","~:ever-opened?","~:ppstr","~:id","~:open?","~:send-buffers","~:expected","^<7","~:chsk/uidport-close","~:chsk-url-fn","~:url","~:code","^;E","~:lp-timeout","~:ring-req","~:chsk/timeout","~:http","~:handled","~:onclose-fn","~:wrap-recv-evs?","~:?data","~:post","~:instance-handle_","~:chsk","^<5","~:f","~:bad-csrf-fn","~:error","~:unexpected","~:onerror-fn","~:send-fn","~:wrong-length","^<2","~:on-error","~:timeout","~:resp-type","^<X","~:last-close","~:requested-reconnect","~:ajax-opts","~:cbs-waiting_","~:actual","^<:","~:init?","^?8","^<6","~:last-ws-close","^>L","~:on-open","^<T","~:timeout-ms","~:chsk/handshake","^<V","~:apparent-success","~:?error","~:newly-disconnected","~:state_","~:ajax-cb","~:any","~:chsk/dummy-cb-200","~:<server","^<4","~:ajax-chsk-opts","~:text","~:clean?","~:namespaced-keyword"]],"~:order",["^AQ","^BB","^=A","^@I","^AG","^A4","^B:","^@7","^@:","^AJ","^@U","^BS","^?R","^?M","^A2","^@0","^@Y","^AD","^AN","^B1","^B9","^?E","^@1","^@<","^<;","^AP","^AW","^@D","~:f","^>L","^?D","^A@","^AX","^@W","^A6","^BL","^@G","^<7","^A:","^;Z","^?F","^;Y","^?N","^?Y","^?V","^@4","^<2","^<4","^<5","^<6","^@B","^@N","^<9","^<:","^A0","^A9","^AA","^AH","^AI","^AE","^B5","^?Q","^?P","^?S","^@[","^BM","^BC","^A5","^@L","^@;","^BJ","^?K","^@9","^@R","^@S","^@P","^?G","^A8","^BE","^AM","^BN","^BG","^B6","^?J","^@8","^B;","^@K","^@F","^@O","^@M","^AR","^?W","^?I","^BF","^?L","^BK","^?O","^AO","^@Q","^@C","^@T","^A=","^B7","^B?","^B>","^AB","^BO","^?H","^AL","^A>","^A;","^AZ","^A7","^B8","^@V","^A[","^?Z","^AT","^B3","^A1","^AF","^BA","^AK","^@H","^BH","^@J","^@2","^?[","^@6","^BR","^AU","^BD","^<Q","^<R","^<S","^;E","^;2","^<T","^;K","^<U","^<V","^?7","^<W","^<X","^>E","^?8","^?9","^B@","^?C","^@=","^B=","^B2","^BQ","^@3","^BI","^@5","^B<","^?U","^@X","^<Y","^<Z","^@@","^BP","^?T","^A?","^=E","^=F","^=G","^>M","^<E","^A3","^AC","^B0","^AV","^@?","^AS","^AY","^@Z","^?X","^B4","^@A","^A<","^@>","^@E"]],"^1T",["^ ","^1A",["^[",[]],"^1B",["^[",[]]],"^1U",["^ "],"^1V",["^1<","^1;","^1?","^1:","^R","^N","^18"]],"^13","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^[",[]],"~:compiler-options",["^5R",[["^BW","~:static-fns"],true,["^BW","~:shadow-tweaks"],null,["^BW","~:source-map-inline"],null,["^BW","~:elide-asserts"],false,["^BW","~:optimize-constants"],null,["^BW","^1["],null,["^BW","~:external-config"],null,["^BW","~:tooling-config"],null,["^BW","~:emit-constants"],null,["^BW","~:load-tests"],null,["^BW","~:form-size-threshold"],null,["^BW","~:data-readers"],null,["^BW","~:infer-externs"],"^>L",["^BW","^21"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^BW","~:fn-invoke-direct"],null,["^BW","~:source-map"],"/dev/null"]]]