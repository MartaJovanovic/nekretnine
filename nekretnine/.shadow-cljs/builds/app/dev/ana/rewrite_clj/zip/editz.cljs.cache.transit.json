["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.zip.editz');\r\n/**\r\n * Replace the node at the given location with one representing\r\n * the given value. (The value will be coerced to a node if\r\n * possible.)\r\n */\r\nrewrite_clj.zip.editz.replace = (function rewrite_clj$zip$editz$replace(zloc,value){\r\nreturn clojure.zip.replace(zloc,(rewrite_clj.node.coerce.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.coerce.cljs$core$IFn$_invoke$arity$1(value) : rewrite_clj.node.coerce.call(null,value)));\r\n});\r\n/**\r\n * Create s-expression from node, apply the function and create\r\n * node from the result.\r\n */\r\nrewrite_clj.zip.editz.edit_node = (function rewrite_clj$zip$editz$edit_node(node,f){\r\nvar G__70097 = (function (){var G__70098 = (rewrite_clj.node.sexpr.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.sexpr.cljs$core$IFn$_invoke$arity$1(node) : rewrite_clj.node.sexpr.call(null,node));\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__70098) : f.call(null,G__70098));\r\n})();\r\nreturn (rewrite_clj.node.coerce.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.coerce.cljs$core$IFn$_invoke$arity$1(G__70097) : rewrite_clj.node.coerce.call(null,G__70097));\r\n});\r\n/**\r\n * Apply the given function to the s-expression at the given\r\n * location, using its result to replace the node there. (The\r\n * result will be coerced to a node if possible.)\r\n */\r\nrewrite_clj.zip.editz.edit = (function rewrite_clj$zip$editz$edit(var_args){\r\nvar args__4742__auto__ = [];\r\nvar len__4736__auto___70119 = arguments.length;\r\nvar i__4737__auto___70120 = (0);\r\nwhile(true){\r\nif((i__4737__auto___70120 < len__4736__auto___70119)){\r\nargs__4742__auto__.push((arguments[i__4737__auto___70120]));\r\n\r\nvar G__70121 = (i__4737__auto___70120 + (1));\r\ni__4737__auto___70120 = G__70121;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\r\nreturn rewrite_clj.zip.editz.edit.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\r\n});\r\n\r\n(rewrite_clj.zip.editz.edit.cljs$core$IFn$_invoke$arity$variadic = (function (zloc,f,args){\r\nreturn clojure.zip.edit.cljs$core$IFn$_invoke$arity$variadic(zloc,rewrite_clj.zip.editz.edit_node,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (p1__70099_SHARP_){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,p1__70099_SHARP_,args);\r\n})], 0));\r\n}));\r\n\r\n(rewrite_clj.zip.editz.edit.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(rewrite_clj.zip.editz.edit.cljs$lang$applyTo = (function (seq70101){\r\nvar G__70102 = cljs.core.first(seq70101);\r\nvar seq70101__$1 = cljs.core.next(seq70101);\r\nvar G__70103 = cljs.core.first(seq70101__$1);\r\nvar seq70101__$2 = cljs.core.next(seq70101__$1);\r\nvar self__4723__auto__ = this;\r\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__70102,G__70103,seq70101__$2);\r\n}));\r\n\r\n/**\r\n * Splice the given node, i.e. merge its children into the current one\r\n * (akin to Clojure's `unquote-splicing` macro: `~@...`).\r\n * - if the node is not one that can have children, no modification will\r\n *   be performed.\r\n * - if the node has no or only whitespace children, it will be removed.\r\n * - otherwise, splicing will be performed, moving the zipper to the first\r\n *   non-whitespace child afterwards.\r\n * \r\n */\r\nrewrite_clj.zip.editz.splice = (function rewrite_clj$zip$editz$splice(zloc){\r\nif(cljs.core.truth_(clojure.zip.branch_QMARK_(zloc))){\r\nvar temp__5733__auto__ = cljs.core.seq(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(rewrite_clj.node.whitespace_QMARK_,cljs.core.reverse(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(rewrite_clj.node.whitespace_QMARK_,clojure.zip.children(zloc)))));\r\nif(temp__5733__auto__){\r\nvar children = temp__5733__auto__;\r\nvar loc = rewrite_clj.zip.utils.remove_and_move_right(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(clojure.zip.insert_right,zloc,children));\r\nvar or__4126__auto__ = rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1(loc);\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nreturn loc;\r\n}\r\n} else {\r\nreturn rewrite_clj.zip.removez.remove(zloc);\r\n}\r\n} else {\r\nreturn zloc;\r\n}\r\n});\r\nrewrite_clj.zip.editz.edit_token = (function rewrite_clj$zip$editz$edit_token(zloc,str_fn){\r\nvar e = rewrite_clj.zip.base.sexpr(zloc);\r\nvar e_SINGLEQUOTE_ = ((typeof e === 'string')?(str_fn.cljs$core$IFn$_invoke$arity$1 ? str_fn.cljs$core$IFn$_invoke$arity$1(e) : str_fn.call(null,e)):(((e instanceof cljs.core.Keyword))?cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(e),(function (){var G__70112 = cljs.core.name(e);\r\nreturn (str_fn.cljs$core$IFn$_invoke$arity$1 ? str_fn.cljs$core$IFn$_invoke$arity$1(G__70112) : str_fn.call(null,G__70112));\r\n})()):(((e instanceof cljs.core.Symbol))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(e),(function (){var G__70113 = cljs.core.name(e);\r\nreturn (str_fn.cljs$core$IFn$_invoke$arity$1 ? str_fn.cljs$core$IFn$_invoke$arity$1(G__70113) : str_fn.call(null,G__70113));\r\n})()):null)));\r\nreturn clojure.zip.replace(zloc,(rewrite_clj.node.token_node.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.token_node.cljs$core$IFn$_invoke$arity$1(e_SINGLEQUOTE_) : rewrite_clj.node.token_node.call(null,e_SINGLEQUOTE_)));\r\n});\r\nrewrite_clj.zip.editz.edit_multi_line = (function rewrite_clj$zip$editz$edit_multi_line(zloc,line_fn){\r\nvar n = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(clojure.zip.node(zloc),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"lines\",\"lines\",-700165781)], null),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(line_fn,cljs.core.vec));\r\nreturn clojure.zip.replace(zloc,n);\r\n});\r\nrewrite_clj.zip.editz.prefix = (function rewrite_clj$zip$editz$prefix(zloc,s){\r\nvar G__70116 = rewrite_clj.zip.base.tag(zloc);\r\nvar G__70116__$1 = (((G__70116 instanceof cljs.core.Keyword))?G__70116.fqn:null);\r\nswitch (G__70116__$1) {\r\ncase \"token\":\r\nreturn rewrite_clj.zip.editz.edit_token(zloc,(function (p1__70114_SHARP_){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__70114_SHARP_)].join('');\r\n}));\r\n\r\nbreak;\r\ncase \"multi-line\":\r\nreturn rewrite_clj.zip.editz.edit_multi_line(zloc,(function (lines){\r\nif(cljs.core.empty_QMARK_(lines)){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);\r\n} else {\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(lines,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0)], null),(function (p1__70115_SHARP_){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__70115_SHARP_)].join('');\r\n}));\r\n}\r\n}));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__70116__$1)].join('')));\r\n\r\n}\r\n});\r\nrewrite_clj.zip.editz.suffix = (function rewrite_clj$zip$editz$suffix(zloc,s){\r\nvar G__70118 = rewrite_clj.zip.base.tag(zloc);\r\nvar G__70118__$1 = (((G__70118 instanceof cljs.core.Keyword))?G__70118.fqn:null);\r\nswitch (G__70118__$1) {\r\ncase \"token\":\r\nreturn rewrite_clj.zip.editz.edit_token(zloc,(function (p1__70117_SHARP_){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__70117_SHARP_),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join('');\r\n}));\r\n\r\nbreak;\r\ncase \"multi-line\":\r\nreturn rewrite_clj.zip.editz.edit_multi_line(zloc,(function (lines){\r\nif(cljs.core.empty_QMARK_(lines)){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);\r\n} else {\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.butlast(lines),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.last(lines)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join(''));\r\n}\r\n}));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__70118__$1)].join('')));\r\n\r\n}\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/zip/editz.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",26],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",["~$replace"]],"~:name","~$rewrite-clj.zip.editz","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$base","~$rewrite-clj.zip.base","~$rewrite-clj.zip.removez","^T","~$clojure.zip","^U","~$rewrite-clj.node","^V","~$u","~$rewrite-clj.zip.utils","~$r","^T","~$cljs.core","^X","~$ws","~$rewrite-clj.zip.whitespace","~$goog","^[","~$n","^V","~$m","~$rewrite-clj.zip.move","^Z","^Z","^10","^10","~$z","^U","^W","^W","^S","^S"],"~:seen",["^J",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^X","^X"],"~:form",["~#list",["~$ns","^M",["^16",["~:refer-clojure","~:exclude",["^K"]]],["^16",["^12",["^S","~:as","^R"],["^10","^1:","~$m"],["^T","^1:","~$r"],["^W","^1:","~$u"],["^Z","^1:","^Y"],["^V","^1:","~$n"],["^U","^1:","~$z"]]]]],"~:flags",["^ ","^12",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^[","^X","^S","^10","^T","^W","^Z","^V","^U"]],"^O","^M","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/zip/editz.cljs"],"~:compiled-at",1662647723197,"~:resource-name","rewrite_clj/zip/editz.cljs","~:warnings",[],"~:source","(ns rewrite-clj.zip.editz\n  (:refer-clojure :exclude [replace])\n  (:require [rewrite-clj.zip.base :as base]\n            [rewrite-clj.zip.move :as m]\n            [rewrite-clj.zip.removez :as r]\n            [rewrite-clj.zip.utils :as u]\n            [rewrite-clj.zip.whitespace :as ws]\n            [rewrite-clj.node :as n]\n            [clojure.zip :as z]))\n\n;; ## In-Place Modification\n\n(defn replace\n  \"Replace the node at the given location with one representing\n   the given value. (The value will be coerced to a node if\n   possible.)\"\n  [zloc value]\n  (z/replace zloc (n/coerce value)))\n\n(defn- edit-node\n  \"Create s-expression from node, apply the function and create\n   node from the result.\"\n  [node f]\n  (-> (n/sexpr node)\n      (f)\n      (n/coerce)))\n\n(defn edit\n  \"Apply the given function to the s-expression at the given\n   location, using its result to replace the node there. (The\n   result will be coerced to a node if possible.)\"\n  [zloc f & args]\n  (z/edit zloc edit-node #(apply f % args)))\n\n;; ## Splice\n\n\n\n(defn splice\n  \"Splice the given node, i.e. merge its children into the current one\n   (akin to Clojure's `unquote-splicing` macro: `~@...`).\n   - if the node is not one that can have children, no modification will\n     be performed.\n   - if the node has no or only whitespace children, it will be removed.\n   - otherwise, splicing will be performed, moving the zipper to the first\n     non-whitespace child afterwards.\n   \"\n  [zloc]\n  (if (z/branch? zloc)\n    (if-let [children (->> (z/children zloc)\n                           (drop-while n/whitespace?)\n                           (reverse)\n                           (drop-while n/whitespace?)\n                           (seq))]\n      (let [loc (->> (reduce z/insert-right zloc children)\n                     (u/remove-and-move-right))]\n        (or (ws/skip-whitespace loc) loc))\n      (r/remove zloc))\n    zloc))\n\n;; ## Prefix/Suffix\n\n(defn- edit-token\n  [zloc str-fn]\n  (let [e (base/sexpr zloc)\n        e' (cond (string? e) (str-fn e)\n                 (keyword? e) (keyword (namespace e) (str-fn (name e)))\n                 (symbol? e) (symbol (namespace e) (str-fn (name e))))]\n    (z/replace zloc (n/token-node e'))))\n\n(defn- edit-multi-line\n  [zloc line-fn]\n  (let [n (-> (z/node zloc)\n              (update-in [:lines] (comp line-fn vec)))]\n    (z/replace zloc n)))\n\n(defn prefix\n  [zloc s]\n  (case (base/tag zloc)\n    :token      (edit-token zloc #(str s %))\n    :multi-line (->> (fn [lines]\n                       (if (empty? lines)\n                         [s]\n                         (update-in lines [0] #(str s %))))\n                     (edit-multi-line zloc ))))\n\n(defn suffix\n  [zloc s]\n  (case (base/tag zloc)\n    :token      (edit-token zloc #(str % s))\n    :multi-line (->> (fn [lines]\n                       (if (empty? lines)\n                         [s]\n                         (concat (butlast lines) (str (last lines) s))))\n                     (edit-multi-line zloc))))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["rewrite-clj.zip.editz/replace","zloc","value","clojure.zip/replace","rewrite-clj.node/coerce","rewrite-clj.zip.editz/edit-node","node","f","rewrite-clj.node/sexpr","G__70098","G__70097","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","rewrite-clj.zip.editz/edit","seq70101","G__70102","cljs.core/first","cljs.core/next","G__70103","self__4723__auto__","args","p1__70099#","clojure.zip.edit","cljs.core.apply","rewrite-clj.zip.editz/splice","clojure.zip/branch?","temp__5733__auto__","children","clojure.zip/children","cljs.core.drop_while","rewrite-clj.node/whitespace?","cljs.core/reverse","cljs.core/seq","loc","cljs.core.reduce","clojure.zip/insert-right","rewrite-clj.zip.utils/remove-and-move-right","or__4126__auto__","rewrite_clj.zip.whitespace.skip_whitespace","rewrite-clj.zip.removez/remove","rewrite-clj.zip.editz/edit-token","str-fn","e","rewrite-clj.zip.base/sexpr","e'","cljs.core/Keyword","cljs.core.keyword","cljs.core/namespace","G__70112","cljs.core/name","cljs.core/Symbol","cljs.core.symbol","G__70113","rewrite-clj.node/token-node","rewrite-clj.zip.editz/edit-multi-line","line-fn","n","clojure.zip/node","cljs.core.update_in","cljs.core.comp","cljs.core/vec","rewrite-clj.zip.editz/prefix","s","G__70116","js/Error","rewrite-clj.zip.base/tag","p1__70114#","lines","cljs.core/empty?","p1__70115#","rewrite-clj.zip.editz/suffix","G__70118","p1__70117#","cljs.core.concat","cljs.core/butlast","cljs.core/last"]],"~:used-vars",["^J",["~$rewrite-clj.zip.editz/edit-node","~$rewrite-clj.zip.editz/edit-token","~$clojure.zip/branch?","~$cljs.core/apply","~$cljs.core/last","~$rewrite-clj.zip.editz/prefix","~$clojure.zip/edit","~$cljs.core/concat","~$rewrite-clj.zip.editz/edit","~$cljs.core/empty?","~$rewrite-clj.zip.editz/edit-multi-line","~$rewrite-clj.node/token-node","~$rewrite-clj.node/coerce","~$rewrite-clj.zip.removez/remove","~$rewrite-clj.zip.editz/replace","~$rewrite-clj.zip.editz/splice","~$clojure.zip/replace","~$cljs.core/butlast","~$cljs.core/update-in","~$js/Error","~$rewrite-clj.zip.editz/suffix"]]],"~:cache-keys",["~#cmap",[["^1?","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^[","~$goog.dom.HtmlElement"]]],["^1?","rewrite_clj/node/token.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","~$rewrite-clj.node.protocols"]]],["^1?","cljs/tools/reader/impl/utils.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","~$clojure.string","~$goog.string"]]],["^1?","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","~$goog.array","~$goog.asserts"]]],["^1?","rewrite_clj/parser/core.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^V","~$rewrite-clj.reader","~$rewrite-clj.parser.keyword","~$rewrite-clj.parser.string","~$rewrite-clj.parser.token","~$rewrite-clj.parser.whitespace","~$cljs.tools.reader.reader-types"]]],["^1?","rewrite_clj/parser/string.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^V","^2@","^2=","^2<"]]],["^1?","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^["]]],["^1?","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2>","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1?","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2?","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2H"]]],["^1?","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2?"]]],["^1?","rewrite_clj/zip/move.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^Z","^U"]]],["^1?","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^["]]],["^1?","rewrite_clj/zip/editz.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^S","^10","^T","^W","^Z","^V","^U"]]],["^1?","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^["]]],["^1?","cljs/tools/reader/impl/inspect.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X"]]],["^1?","cljs/tools/reader.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2E","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^2>","^2=","~$goog.string.StringBuffer"]]],["^1?","rewrite_clj/node/forms.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2;"]]],["^1?","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^["]]],["^1?","rewrite_clj/zip/utils.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^U"]]],["^1?","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^["]]],["^1?","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2?"]]],"~:SHADOW-TIMESTAMP",[1662313924000,1662313924000,1662129148000],["^1?","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2?","~$goog.reflect"]]],["^1?","rewrite_clj/node/reader_macro.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2;","~$rewrite-clj.node.whitespace"]]],["^1?","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2?","~$goog.html.trustedtypes","^2K","^2L","^2M","^2N"]]],["^1?","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^["]]],["^1?","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^["]]],["^1?","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2>","^2?","~$goog.html.SafeUrl","^2M","^2N","^2H"]]],["^1?","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2?","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2W","^2J","~$goog.html.uncheckedconversions","^2M","^2H"]]],["^1?","clojure/walk.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X"]]],["^1?","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1?","rewrite_clj/node/meta.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2;","^2U"]]],["^1?","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2>","^2?","~$goog.dom.TagName","~$goog.dom.tags","^2[","^30","~$goog.html.SafeStyleSheet","^2W","^2J","^2V","^2K","^2L","~$goog.labs.userAgent.browser","^2G","^2M","^2N","^2H"]]],["^1?","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2G"]]],["^1?","rewrite_clj/node/stringz.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2;","~$cljs.tools.reader","^2<"]]],["^1?","rewrite_clj/node/comment.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2;"]]],["^1?","rewrite_clj/node/keyword.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2;"]]],["^1?","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1?","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2>","^2?","^2=","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1?","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^["]]],["^1?","rewrite_clj/node/protocols.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2<"]]],["^1?","rewrite_clj/node/seq.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2;"]]],["^1?","rewrite_clj/node/uneval.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2;"]]],["^1?","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^["]]],["^1?","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",[]]],["^1?","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2>","^2G"]]],["^1?","cljs/tools/reader/impl/errors.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2E","^2<","~$cljs.tools.reader.impl.inspect"]]],["^1?","rewrite_clj/node/whitespace.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2;"]]],["^1?","rewrite_clj/node/coercer.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^2;","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^2U"]]],["^1?","clojure/string.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2=","^2R"]]],["^1?","rewrite_clj/parser.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","~$rewrite-clj.parser.core","^V","^2@"]]],["^1?","rewrite_clj/parser/keyword.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^V","^2E","^2@"]]],["^1?","rewrite_clj/parser/token.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^V","^2@","^2="]]],["^1?","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","~$goog.dom.safe","^31","^2M","^2H"]]],["^1?","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^["]]],["^1?","rewrite_clj/node/fn.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2;","~$clojure.walk"]]],["^1?","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2H"]]],["^1?","rewrite_clj/node.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","~$rewrite-clj.node.coercer","^2;","^3C","^3J","^2U","^3K","^3A","^3B","^3G","^3E","^3I","^3D","^3F","^3H"]]],["^1?","rewrite_clj/zip/removez.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^10","^W","^Z","^U"]]],["^1?","clojure/zip.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X"]]],["^1?","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^["]]],["^1?","cljs/tools/reader/reader_types.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2O","^2=","^2R"]]],["^1?","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2>","^2?","^2Y","~$goog.math"]]],["^1?","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2?","^2Z","^2[","^30","^36","^2W","^2J","^2M","^2H"]]],["^1?","rewrite_clj/reader.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^38","^2E","^2P","^2=","^2;"]]],["^1?","rewrite_clj/node/quote.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2;"]]],["^1?","cljs/tools/reader/impl/commons.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^2Q","^2E","^2O"]]],["^1?","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^["]]],["^1?","cljs/core.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","~$goog.math.Long","~$goog.math.Integer","^2=","^2G","^2>","~$goog.Uri","^2R"]]],["^1?","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2?","^2V","^2M","^2N"]]],["^1?","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2>","^2?","^30","^2G","^2M","^2N","^2H"]]],["^1?","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2T"]]],["^1?","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2>","^2?","^2="]]],["^1?","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^2?","^2N"]]],["^1?","rewrite_clj/zip/base.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^V","~$rewrite-clj.parser","^Z","^U"]]],["^1?","rewrite_clj/zip/whitespace.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^V","^U"]]],["^1?","rewrite_clj/parser/whitespace.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^26",["^ ","^27",null,"^28",["^J",[]],"^29",["^[","^X","^V","^2@"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1661296752000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1661296752000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1661296752000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64.clj",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1661291812000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1661291812000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/util.cljc",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1661296752000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/env.cljc",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/js_deps.cljc",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1661296752000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/tagged_literals.cljc",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1661291812000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1661296752000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1661296570000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map.clj",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/analyzer.cljc",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64_vlq.clj",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/compiler.cljc",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/externs.clj",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1661291812000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/core.cljc",1662129148000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1661291812000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1661291812000,"jar:file:/C:/Users/jovan/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1661291812000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/zip/editz.cljs","^7",1,"^8",5,"^9",1,"^:",26],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",["^K"]],"^L","^M","^P",null,"^Q",["^ ","^R","^S","^T","^T","^U","^U","^V","^V","~$u","^W","~$r","^T","^X","^X","^Y","^Z","^[","^[","~$n","^V","~$m","^10","^Z","^Z","^10","^10","~$z","^U","^W","^W","^S","^S"],"^11",["^J",["^12"]],"~:shadow/js-access-global",["^J",["Error"]],"^13",null,"~:defs",["^ ","^K",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/zip/editz.cljs","^7",13,"^8",7,"^9",13,"^:",14,"~:arglists",["^16",["~$quote",["^16",[["~$zloc","~$value"]]]]],"~:doc","Replace the node at the given location with one representing\n   the given value. (The value will be coerced to a node if\n   possible.)"],"^L","^1Y","^6","rewrite_clj/zip/editz.cljs","^:",14,"~:method-params",["^16",[["^4I","^4J"]]],"~:protocol-impl",null,"~:arglists-meta",["^16",[null,null]],"^8",1,"~:variadic?",false,"^7",13,"~:ret-tag",["^J",["~$clj","~$cljs.core/MetaFn","~$clj-nil"]],"^9",13,"~:max-fixed-arity",2,"~:fn-var",true,"^4G",["^16",["^4H",["^16",[["^4I","^4J"]]]]],"^4K","Replace the node at the given location with one representing\n   the given value. (The value will be coerced to a node if\n   possible.)"],"~$edit-node",["^ ","^4F",null,"^5",["^ ","^6","rewrite_clj/zip/editz.cljs","^7",20,"^8",8,"^9",20,"^:",17,"~:private",true,"^4G",["^16",["^4H",["^16",[["~$node","~$f"]]]]],"^4K","Create s-expression from node, apply the function and create\n   node from the result."],"^4W",true,"^L","^1K","^6","rewrite_clj/zip/editz.cljs","^:",17,"^4L",["^16",[["^4X","~$f"]]],"^4M",null,"^4N",["^16",[null,null]],"^8",1,"^4O",false,"^7",20,"^4P","~$any","^9",20,"^4T",2,"^4U",true,"^4G",["^16",["^4H",["^16",[["^4X","~$f"]]]]],"^4K","Create s-expression from node, apply the function and create\n   node from the result."],"~$edit",["^ ","^4F",null,"^5",["^ ","^6","rewrite_clj/zip/editz.cljs","^7",28,"^8",7,"^9",28,"^:",11,"^4G",["^16",["^4H",["^16",[["^4I","~$f","~$&","~$args"]]]]],"^4K","Apply the given function to the s-expression at the given\n   location, using its result to replace the node there. (The\n   result will be coerced to a node if possible.)","~:top-fn",["^ ","^4O",true,"~:fixed-arity",2,"^4T",2,"^4L",[["^16",["^4I","~$f","^4["]]],"^4G",["^16",[["^4I","~$f","~$&","^4["]]],"^4N",["^16",[null]]]],"^L","^1S","^6","rewrite_clj/zip/editz.cljs","^:",11,"^50",["^ ","^4O",true,"^51",2,"^4T",2,"^4L",[["^16",["^4I","~$f","^4["]]],"^4G",["^16",[["^4I","~$f","~$&","^4["]]],"^4N",["^16",[null]]],"^4L",[["^16",["^4I","~$f","^4["]]],"^4M",null,"^51",2,"^4N",["^16",[null]],"^8",1,"^4O",true,"~:methods",[["^ ","^51",2,"^4O",true,"~:tag",["^J",["^4Q","^4R","^4S"]]]],"^7",28,"^4P","^4Y","^9",28,"^4T",2,"^4U",true,"^4G",["^16",[["^4I","~$f","~$&","^4["]]],"^4K","Apply the given function to the s-expression at the given\n   location, using its result to replace the node there. (The\n   result will be coerced to a node if possible.)"],"~$splice",["^ ","^4F",null,"^5",["^ ","^6","rewrite_clj/zip/editz.cljs","^7",39,"^8",7,"^9",39,"^:",13,"^4G",["^16",["^4H",["^16",[["^4I"]]]]],"^4K","Splice the given node, i.e. merge its children into the current one\n   (akin to Clojure's `unquote-splicing` macro: `~@...`).\n   - if the node is not one that can have children, no modification will\n     be performed.\n   - if the node has no or only whitespace children, it will be removed.\n   - otherwise, splicing will be performed, moving the zipper to the first\n     non-whitespace child afterwards.\n   "],"^L","^1Z","^6","rewrite_clj/zip/editz.cljs","^:",13,"^4L",["^16",[["^4I"]]],"^4M",null,"^4N",["^16",[null,null]],"^8",1,"^4O",false,"^7",39,"^4P",["^J",[null,"^4Q","^4Y","^4R","^4S"]],"^9",39,"^4T",1,"^4U",true,"^4G",["^16",["^4H",["^16",[["^4I"]]]]],"^4K","Splice the given node, i.e. merge its children into the current one\n   (akin to Clojure's `unquote-splicing` macro: `~@...`).\n   - if the node is not one that can have children, no modification will\n     be performed.\n   - if the node has no or only whitespace children, it will be removed.\n   - otherwise, splicing will be performed, moving the zipper to the first\n     non-whitespace child afterwards.\n   "],"~$edit-token",["^ ","^4F",null,"^5",["^ ","^6","rewrite_clj/zip/editz.cljs","^7",63,"^8",8,"^9",63,"^:",18,"^4W",true,"^4G",["^16",["^4H",["^16",[["^4I","~$str-fn"]]]]]],"^4W",true,"^L","^1L","^6","rewrite_clj/zip/editz.cljs","^:",18,"^4L",["^16",[["^4I","^56"]]],"^4M",null,"^4N",["^16",[null,null]],"^8",1,"^4O",false,"^7",63,"^4P",["^J",["^4Q","^4R","^4S"]],"^9",63,"^4T",2,"^4U",true,"^4G",["^16",["^4H",["^16",[["^4I","^56"]]]]]],"~$edit-multi-line",["^ ","^4F",null,"^5",["^ ","^6","rewrite_clj/zip/editz.cljs","^7",71,"^8",8,"^9",71,"^:",23,"^4W",true,"^4G",["^16",["^4H",["^16",[["^4I","~$line-fn"]]]]]],"^4W",true,"^L","^1U","^6","rewrite_clj/zip/editz.cljs","^:",23,"^4L",["^16",[["^4I","^58"]]],"^4M",null,"^4N",["^16",[null,null]],"^8",1,"^4O",false,"^7",71,"^4P",["^J",["^4Q","^4R","^4S"]],"^9",71,"^4T",2,"^4U",true,"^4G",["^16",["^4H",["^16",[["^4I","^58"]]]]]],"~$prefix",["^ ","^4F",null,"^5",["^ ","^6","rewrite_clj/zip/editz.cljs","^7",77,"^8",7,"^9",77,"^:",13,"^4G",["^16",["^4H",["^16",[["^4I","~$s"]]]]]],"^L","^1P","^6","rewrite_clj/zip/editz.cljs","^:",13,"^4L",["^16",[["^4I","~$s"]]],"^4M",null,"^4N",["^16",[null,null]],"^8",1,"^4O",false,"^7",77,"^9",77,"^4T",2,"^4U",true,"^4G",["^16",["^4H",["^16",[["^4I","~$s"]]]]]],"~$suffix",["^ ","^4F",null,"^5",["^ ","^6","rewrite_clj/zip/editz.cljs","^7",87,"^8",7,"^9",87,"^:",13,"^4G",["^16",["^4H",["^16",[["^4I","~$s"]]]]]],"^L","^23","^6","rewrite_clj/zip/editz.cljs","^:",13,"^4L",["^16",[["^4I","~$s"]]],"^4M",null,"^4N",["^16",[null,null]],"^8",1,"^4O",false,"^7",87,"^9",87,"^4T",2,"^4U",true,"^4G",["^16",["^4H",["^16",[["^4I","~$s"]]]]]]],"^14",["^ ","^X","^X"],"~:cljs.analyzer/constants",["^ ","^11",["^J",["~:lines"]],"~:order",["^5<"]],"^1;",["^ ","^12",["^J",[]]],"^1<",["^ "],"^1=",["^[","^X","^S","^10","^T","^W","^Z","^V","^U"]],"^O","^M","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^25",[["^5@","~:static-fns"],true,["^5@","~:shadow-tweaks"],null,["^5@","~:source-map-inline"],null,["^5@","~:elide-asserts"],false,["^5@","~:optimize-constants"],null,["^5@","^1B"],null,["^5@","~:external-config"],null,["^5@","~:tooling-config"],null,["^5@","~:emit-constants"],null,["^5@","~:load-tests"],null,["^5@","~:form-size-threshold"],null,["^5@","~:data-readers"],null,["^5@","~:infer-externs"],"~:auto",["^5@","^1D"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5@","~:fn-invoke-direct"],null,["^5@","~:source-map"],"/dev/null"]]]